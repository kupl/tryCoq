Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any tree) (y:any list), (revflat (x) @ y) = qrevaflat (x) (y)(rank : 0)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

---------------------------------------
forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:4)
=================================================
Progress: 2


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

---------------------------------------
forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_tree1(rank : 4)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any_list1:any list), (revflat (Leaf) @ any_list1) = qrevaflat (Leaf) (any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any_list1:any list), (revflat (Leaf) @ any_list1) = qrevaflat (Leaf) (any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (revflat (Node (any_tree2) (any1) (any_tree3)) @ any_list1) = qrevaflat (Node (any_tree2) (any1) (any_tree3)) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (revflat (Node (any_tree2) (any1) (any_tree3)) @ any_list1) = qrevaflat (Node (any_tree2) (any1) (any_tree3)) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:3)
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- IH2 in goal at 0(rank:11)
=================================================
Progress: 5


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list1(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- IH2 in goal at 0(rank:11)
=================================================
Progress: 6


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:11)
rewrite <- IH1 in goal at 2(rank:19)
=================================================
Progress: 7


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:3)
=================================================
Progress: 8


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:3)
rewrite IH1 in goal at 1(rank:19)
=================================================
Progress: 9


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list1(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 1(rank:3)
=================================================
Progress: 10


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
intro any_list1
rewrite IH1 in goal at 1
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg1:any list), (qrevaflat (any_tree2) ((any1::arg1)) @ any_list1) = (revflat (any_tree2) @ (any1::(arg1 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 11


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg1:any list), (qrevaflat (any_tree2) ((any1::arg1)) @ any_list1) = (revflat (any_tree2) @ (any1::(arg1 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 12


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = (revflat (Leaf) @ (any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 15


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = (revflat (Leaf) @ (any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = (revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 16


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = (revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 17


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 18


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6)
=================================================
Progress: 20


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (any_tree3:any tree), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 21


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (any_tree3:any tree), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:8)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
=================================================
Progress: 23


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (qrevaflat (Leaf) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (Leaf) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (qrevaflat (Leaf) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (Leaf) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree2) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree2(rank:9)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree2) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Leaf) @ (any1::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Leaf) @ (any1::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Node (any_tree3) (any3) (any_tree4)) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Node (any_tree3) (any3) (any_tree4)) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Node (any_tree3) (any3) (any_tree4)) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Node (any_tree3) (any3) (any_tree4)) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any2(rank:8)
intro any_list1(rank:8)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:8)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 31


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:8)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
=================================================
Progress: 34


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
=================================================
Progress: 35


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
=================================================
Progress: 36


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (Leaf) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (Leaf) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (Leaf) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (Leaf) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree2) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree2(rank:11)
=================================================
Progress: 38


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
expr list
(revflat (any_tree3) @ any_list1)
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1)
(((revflat (any_tree4) @ (any2::revflat (any_tree5))) @ (any1::revflat (any_tree3))) @ any_list1)
((((revflat (any_tree6) @ (any3::revflat (any_tree7))) @ (any2::revflat (any_tree5))) @ (any1::revflat (any_tree3))) @ any_list1)
expr list
qrevaflat (any_tree3) (any_list1)
qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))
qrevaflat (any_tree4) ((any2::((revflat (any_tree5) @ (any1::revflat (any_tree3))) @ any_list1)))
qrevaflat (any_tree6) ((any3::(((revflat (any_tree7) @ (any2::revflat (any_tree5))) @ (any1::revflat (any_tree3))) @ any_list1)))
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg2:any list), ((revflat (any_tree2) @ (any1::arg2)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg2 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 39


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg2:any list), ((revflat (any_tree2) @ (any1::arg2)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg2 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 41


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 42


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 43


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 45


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 48


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:11)
rewrite <- IH1 in goal at 2(rank:19)
=================================================
Progress: 49


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree3:any tree) (arg3:any list), ((arg3 @ (any1::revflat (any_tree3))) @ any_list1) = (arg3 @ (any1::qrevaflat (any_tree3) (any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 50


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree3:any tree) (arg3:any list), ((arg3 @ (any1::revflat (any_tree3))) @ any_list1) = (arg3 @ (any1::qrevaflat (any_tree3) (any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((Nil) @ (any1::revflat (any_tree1))) @ any_list1) = ((Nil) @ (any1::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((Nil) @ (any1::revflat (any_tree1))) @ any_list1) = ((Nil) @ (any1::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (any1::(revflat (any_tree1) @ any_list1)) = (any1::qrevaflat (any_tree1) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (any1::(revflat (any_tree1) @ any_list1)) = (any1::qrevaflat (any_tree1) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Leaf) @ any_list1)) = (any1::qrevaflat (Leaf) (any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Leaf) @ any_list1)) = (any1::qrevaflat (Leaf) (any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Node (any_tree2) (any2) (any_tree3)) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any2) (any_tree3)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Node (any_tree2) (any2) (any_tree3)) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any2) (any_tree3)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 59


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH2 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg4:any list), ((revflat (any_tree2) @ (any1::arg4)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg4 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 60


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg4:any list), ((revflat (any_tree2) @ (any1::arg4)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg4 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 67


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 69


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg5:any list), (qrevaflat (any_tree2) ((any1::arg5)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg5 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 70


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg5:any list), (qrevaflat (any_tree2) ((any1::arg5)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg5 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 71


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
intro any1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
intro any_list1(rank:6)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH1 in goal at 1(rank:22)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:14)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree2) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Leaf) @ (any1::any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Leaf) @ (any1::any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Node (any_tree3) (any4) (any_tree4)) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Node (any_tree3) (any4) (any_tree4)) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 81


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Node (any_tree3) (any4) (any_tree4)) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Node (any_tree3) (any4) (any_tree4)) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:10)
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 85


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 86


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:12)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 88


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
=================================================
Progress: 90


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
=================================================
Progress: 92


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
=================================================
Progress: 93


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
=================================================
Progress: 95


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
=================================================
Progress: 96


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
=================================================
Progress: 97


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
=================================================
Progress: 98


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg6:any list), (qrevaflat (any_tree2) ((any1::arg6)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg6 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 99


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg6:any list), (qrevaflat (any_tree2) ((any1::arg6)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg6 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 102


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 103


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 104


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
intro any1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
intro any_list1(rank:6)
=================================================
Progress: 105


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH1 in goal at 1(rank:22)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:14)
=================================================
Progress: 106


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 107


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (Leaf) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (Leaf) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (Leaf) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (Leaf) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree2) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree2(rank:13)
=================================================
Progress: 110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree2) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Leaf) @ (any1::any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Leaf) @ (any1::any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Node (any_tree3) (any5) (any_tree4)) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Node (any_tree3) (any5) (any_tree4)) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Node (any_tree3) (any5) (any_tree4)) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Node (any_tree3) (any5) (any_tree4)) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
intro any2(rank:12)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any2(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree1) ((any5::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree1) @ (any5::revflat (any_tree2))) @ (any1::any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree1) ((any5::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree1) @ (any5::revflat (any_tree2))) @ (any1::any_list1)))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:14)
=================================================
Progress: 119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
=================================================
Progress: 123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 125


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
=================================================
Progress: 126


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 127


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
=================================================
Progress: 128


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
=================================================
Progress: 129


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 130


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 131


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
=================================================
Progress: 132


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 133


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
=================================================
Progress: 134


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
=================================================
Progress: 135


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 136


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
=================================================
Progress: 137


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
=================================================
Progress: 138


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
=================================================
Progress: 139


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 140


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
=================================================
Progress: 141


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
=================================================
Progress: 142


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
=================================================
Progress: 143


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
=================================================
Progress: 144


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
=================================================
Progress: 145


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6)
=================================================
Progress: 146


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:6)
intro any_list1(rank:6)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:6)
=================================================
Progress: 148


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
rewrite <- IH1 in goal at 0
intro any_list1
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (arg7:any list) (arg8:any list) (arg9:any list), (((arg8 @ (any2::arg9)) @ arg7) @ any_list1) = ((arg8 @ (any2::(Nil))) @ ((arg9 @ arg7) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 149


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (arg7:any list) (arg8:any list) (arg9:any list), (((arg8 @ (any2::arg9)) @ arg7) @ any_list1) = ((arg8 @ (any2::(Nil))) @ ((arg9 @ arg7) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 150


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
rewrite <- IH1 in goal at 0
intro any1
intro any_list1
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (arg10:any list) (arg11:any list) (arg12:any list), (((arg11 @ (any2::arg12)) @ arg10) @ any_list1) = ((arg11 @ (any2::(Nil))) @ ((arg12 @ arg10) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 151


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (arg10:any list) (arg11:any list) (arg12:any list), (((arg11 @ (any2::arg12)) @ arg10) @ any_list1) = ((arg11 @ (any2::(Nil))) @ ((arg12 @ arg10) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 152


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 153


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 154


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:8)
=================================================
Progress: 155


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 156


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 157


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:8)
=================================================
Progress: 158


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list4(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 159


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list4(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 161


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 162


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:9)
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:9)
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 166


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 167


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 169


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 170


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 171


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 172


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 173


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 174


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 177


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 178


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 179


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 180


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 181


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 182


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 183


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 184


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 185


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 186


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 187


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 3
intro any1(rank:6)
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 188


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
any1 : any
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 189


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 190


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 191


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 192


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 193


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 194


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 195


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 196


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 197


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 198


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 199


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 200


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 201


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 202


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 203


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 204


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 205


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 206


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 207


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 208


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 209


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 210


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 211


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 212


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 213


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 214


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH2 in goal at 0
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg13:any list) (arg14:any list), (((revflat (any_tree2) @ (any2::arg14)) @ arg13) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg14 @ arg13) @ any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 215


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg13:any list) (arg14:any list), (((revflat (any_tree2) @ (any2::arg14)) @ arg13) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg14 @ arg13) @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 216


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 217


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 218


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 219


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 220


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 221


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 222


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any_list1(rank:9)
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 223


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
rewrite <- IH2 in goal at 0(rank:17)
=================================================
Progress: 224


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 225


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 226


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH2 in goal at 0
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg15:any list) (arg16:any list), (((revflat (any_tree2) @ (any2::arg16)) @ arg15) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg16 @ arg15) @ any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 227


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg15:any list) (arg16:any list), (((revflat (any_tree2) @ (any2::arg16)) @ arg15) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg16 @ arg15) @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 228


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 229


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 230


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 231


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 232


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 233


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 234


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any_list1(rank:9)
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 235


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
rewrite <- IH2 in goal at 0(rank:17)
=================================================
Progress: 236


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 237


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 238


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH2 in goal at 0
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg17:any list) (arg18:any list), (((revflat (any_tree2) @ (any2::arg18)) @ arg17) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg18 @ arg17) @ any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 239


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg17:any list) (arg18:any list), (((revflat (any_tree2) @ (any2::arg18)) @ arg17) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg18 @ arg17) @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 240


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 241


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 242


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 243


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 244


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 245


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 246


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any_list1(rank:9)
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 247


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
rewrite <- IH2 in goal at 0(rank:17)
=================================================
Progress: 248


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 249


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 250


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6)
=================================================
Progress: 251


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:6)
intro any_list1(rank:6)
=================================================
Progress: 252


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:6)
=================================================
Progress: 253


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
intro any_list1
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (arg19:any list) (arg20:any list), (any1::((arg19 @ (any2::arg20)) @ any_list1)) = (any1::(arg19 @ (any2::(arg20 @ any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 254


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (arg19:any list) (arg20:any list), (any1::((arg19 @ (any2::arg20)) @ any_list1)) = (any1::(arg19 @ (any2::(arg20 @ any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 255


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
intro any1
intro any_list1
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (arg21:any list) (arg22:any list), (any1::((arg21 @ (any2::arg22)) @ any_list1)) = (any1::(arg21 @ (any2::(arg22 @ any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 256


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (arg21:any list) (arg22:any list), (any1::((arg21 @ (any2::arg22)) @ any_list1)) = (any1::(arg21 @ (any2::(arg22 @ any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 257


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 258


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 259


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 260


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 261


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 262


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 263


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 264


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 265


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 266


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 267


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 268


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 269


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 270


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 271


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 272


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 273


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 274


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 275


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 276


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 277


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 278


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 279


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 280


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 281


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 282


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 283


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 284


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 285


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 286


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 3
intro any1(rank:6)
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 287


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
any1 : any
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 288


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 289


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 290


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 291


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 292


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 293


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 294


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 295


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 296


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 297


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 298


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 299


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 300


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 301


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 302


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 303


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 304


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 305


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 306


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 307


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 308


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 309


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
expr list
(any1::(revflat (any_tree3) @ any_list1))
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1))
(any1::(((revflat (any_tree4) @ (any3::revflat (any_tree5))) @ (any2::revflat (any_tree3))) @ any_list1))
(any1::((((revflat (any_tree6) @ (any4::revflat (any_tree7))) @ (any3::revflat (any_tree5))) @ (any2::revflat (any_tree3))) @ any_list1))
expr list
(any1::qrevaflat (any_tree3) (any_list1))
(any1::qrevaflat (any_tree2) ((any2::(revflat (any_tree3) @ any_list1))))
(any1::qrevaflat (any_tree4) ((any3::((revflat (any_tree5) @ (any2::revflat (any_tree3))) @ any_list1))))
(any1::qrevaflat (any_tree6) ((any4::(((revflat (any_tree7) @ (any3::revflat (any_tree5))) @ (any2::revflat (any_tree3))) @ any_list1))))
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (arg23:any list), (any1::((revflat (any_tree2) @ (any2::arg23)) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(arg23 @ any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 310


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (arg23:any list), (any1::((revflat (any_tree2) @ (any2::arg23)) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(arg23 @ any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 311


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::((Nil) @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 312


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::((Nil) @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:9)
=================================================
Progress: 313


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Leaf) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Leaf) ((any2::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 314


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Leaf) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Leaf) ((any2::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Node (any_tree2) (any3) (any_tree3)) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any3) (any_tree3)) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 315


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Node (any_tree2) (any3) (any_tree3)) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any3) (any_tree3)) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro any1(rank:8)
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:24)
rewrite <- IH2 in goal at 0(rank:16)
intro any2(rank:8)
=================================================
Progress: 316


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any2(rank:8)
intro any_list1(rank:8)
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 317


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:24)
rewrite <- IH2 in goal at 0(rank:16)
=================================================
Progress: 318


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 319


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:24)
rewrite <- IH2 in goal at 0(rank:16)
=================================================
Progress: 320


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 321


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 322


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 323


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (any_tree3:any tree) (arg24:any list), (any1::((arg24 @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(arg24 @ (any2::qrevaflat (any_tree3) (any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 324


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_tree3:any tree) (arg24:any list), (any1::((arg24 @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(arg24 @ (any2::qrevaflat (any_tree3) (any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 325


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(((Nil) @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::((Nil) @ (any2::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 326


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(((Nil) @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::((Nil) @ (any2::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(revflat (any_tree1) @ any_list1))) = (any1::(any2::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:9)
=================================================
Progress: 327


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(revflat (any_tree1) @ any_list1))) = (any1::(any2::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Leaf) @ any_list1))) = (any1::(any2::qrevaflat (Leaf) (any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 328


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Leaf) @ any_list1))) = (any1::(any2::qrevaflat (Leaf) (any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Node (any_tree2) (any3) (any_tree3)) @ any_list1))) = (any1::(any2::qrevaflat (Node (any_tree2) (any3) (any_tree3)) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 329


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Node (any_tree2) (any3) (any_tree3)) @ any_list1))) = (any1::(any2::qrevaflat (Node (any_tree2) (any3) (any_tree3)) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 330


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:8)
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 331


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 332


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 333


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 334


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 335


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 336


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg25:any list), (any1::(any2::((arg25 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg25 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 337


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg25:any list), (any1::(any2::((arg25 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg25 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 338


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 339


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg26:any list), (any1::(any2::((arg26 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg26 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 340


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg26:any list), (any1::(any2::((arg26 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg26 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 341


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg27:any list), (any1::(any2::((arg27 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg27 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 342


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg27:any list), (any1::(any2::((arg27 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg27 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 343


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg28:any list), (any1::(any2::((arg28 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg28 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 344


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg28:any list), (any1::(any2::((arg28 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg28 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 345


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 346


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 347


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 348


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 349


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 350


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 351


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 352


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 353


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 354


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 355


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 356


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 357


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 358


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 359


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 360


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 361


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 362


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 363


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 364


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 365


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 366


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg29:any list), (any1::(any2::(any3::((arg29 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg29 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 367


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg29:any list), (any1::(any2::(any3::((arg29 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg29 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 368


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 369


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 370


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 371


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg30:any list), (any1::(any2::(any3::((arg30 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg30 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 372


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg30:any list), (any1::(any2::(any3::((arg30 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg30 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 373


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 374


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg31:any list), (any1::(any2::(any3::((arg31 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg31 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 375


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg31:any list), (any1::(any2::(any3::((arg31 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg31 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 376


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg32:any list), (any1::(any2::(any3::((arg32 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg32 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 377


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg32:any list), (any1::(any2::(any3::((arg32 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg32 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 378


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 379


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg33:any list), (any1::(any2::(any3::((arg33 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg33 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 380


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg33:any list), (any1::(any2::(any3::((arg33 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg33 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 381


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg34:any list), (any1::(any2::(any3::((arg34 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg34 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 382


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg34:any list), (any1::(any2::(any3::((arg34 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg34 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 383


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg35:any list), (any1::(any2::(any3::((arg35 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg35 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 384


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg35:any list), (any1::(any2::(any3::((arg35 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg35 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 385


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg36:any list), (any1::(any2::(any3::((arg36 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg36 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 386


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg36:any list), (any1::(any2::(any3::((arg36 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg36 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 387


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 388


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 389


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 390


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 391


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 392


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 393


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 394


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 395


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 396


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 397


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 398


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 399


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 400


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg37:any list), (any1::(any2::(any3::((arg37 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg37 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 401


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg37:any list), (any1::(any2::(any3::((arg37 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg37 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 402


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 403


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 404


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 405


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg38:any list), (any1::(any2::(any3::((arg38 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg38 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 406


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg38:any list), (any1::(any2::(any3::((arg38 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg38 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 407


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 408


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg39:any list), (any1::(any2::(any3::((arg39 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg39 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 409


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg39:any list), (any1::(any2::(any3::((arg39 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg39 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 410


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg40:any list), (any1::(any2::(any3::((arg40 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg40 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 411


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg40:any list), (any1::(any2::(any3::((arg40 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg40 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 412


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 413


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg41:any list), (any1::(any2::(any3::((arg41 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg41 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 414


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg41:any list), (any1::(any2::(any3::((arg41 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg41 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 415


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg42:any list), (any1::(any2::(any3::((arg42 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg42 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 416


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg42:any list), (any1::(any2::(any3::((arg42 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg42 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 417


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg43:any list), (any1::(any2::(any3::((arg43 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg43 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 418


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg43:any list), (any1::(any2::(any3::((arg43 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg43 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 419


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg44:any list), (any1::(any2::(any3::((arg44 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg44 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 420


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg44:any list), (any1::(any2::(any3::((arg44 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg44 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 421


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 422


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 423


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 424


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 425


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 426


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 427


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 428


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 429


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 430


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 431


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 432


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 433


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 434


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg45:any list), (any1::(any2::(any3::((arg45 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg45 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 435


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg45:any list), (any1::(any2::(any3::((arg45 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg45 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 436


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 437


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 438


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 439


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg46:any list), (any1::(any2::(any3::((arg46 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg46 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 440


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg46:any list), (any1::(any2::(any3::((arg46 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg46 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 441


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 442


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg47:any list), (any1::(any2::(any3::((arg47 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg47 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 443


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg47:any list), (any1::(any2::(any3::((arg47 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg47 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 444


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg48:any list), (any1::(any2::(any3::((arg48 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg48 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 445


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg48:any list), (any1::(any2::(any3::((arg48 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg48 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 446


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 447


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg49:any list), (any1::(any2::(any3::((arg49 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg49 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 448


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg49:any list), (any1::(any2::(any3::((arg49 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg49 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 449


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg50:any list), (any1::(any2::(any3::((arg50 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg50 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 450


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg50:any list), (any1::(any2::(any3::((arg50 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg50 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 451


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg51:any list), (any1::(any2::(any3::((arg51 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg51 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 452


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg51:any list), (any1::(any2::(any3::((arg51 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg51 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 453


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg52:any list), (any1::(any2::(any3::((arg52 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg52 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 454


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg52:any list), (any1::(any2::(any3::((arg52 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg52 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 455


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 456


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 457


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 458


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 459


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 460


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 461


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 462


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 463


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 464


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 465


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 466


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 467


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 468


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg53:any list), (any1::(any2::(any3::((arg53 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg53 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 469


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg53:any list), (any1::(any2::(any3::((arg53 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg53 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 470


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 471


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 472


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 473


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg54:any list), (any1::(any2::(any3::((arg54 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg54 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 474


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg54:any list), (any1::(any2::(any3::((arg54 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg54 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 475


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 476


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg55:any list), (any1::(any2::(any3::((arg55 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg55 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 477


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg55:any list), (any1::(any2::(any3::((arg55 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg55 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 478


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg56:any list), (any1::(any2::(any3::((arg56 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg56 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 479


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg56:any list), (any1::(any2::(any3::((arg56 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg56 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 480


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 481


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg57:any list), (any1::(any2::(any3::((arg57 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg57 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 482


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg57:any list), (any1::(any2::(any3::((arg57 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg57 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 483


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg58:any list), (any1::(any2::(any3::((arg58 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg58 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 484


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg58:any list), (any1::(any2::(any3::((arg58 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg58 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 485


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg59:any list), (any1::(any2::(any3::((arg59 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg59 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 486


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg59:any list), (any1::(any2::(any3::((arg59 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg59 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 487


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg60:any list), (any1::(any2::(any3::((arg60 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg60 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 488


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg60:any list), (any1::(any2::(any3::((arg60 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg60 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 489


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 490


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 491


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 492


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 493


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 494


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 495


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 496


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 497


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 498


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 499


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 500


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 501


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 502


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 503


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 504


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 505


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 506


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 507


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 508


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 509


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 510


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 511


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 512


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 513


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 514


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 515


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 516


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 517


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 518


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 519


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 520


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 521


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 522


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 523


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 524


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 525


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 526


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 527


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 528


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 529


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 530


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 531


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 532


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 533


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 534


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 535


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 536


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 537


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 538


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 539


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 540


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 541


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 542


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 543


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 544


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 545


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 546


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 547


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 548


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 549


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 550


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 551


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 552


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 553


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 554


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 555


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 556


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 557


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 558


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 559


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 560


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 561


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 562


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 563


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 564


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 565


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 566


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 567


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 568


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 569


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 570


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 571


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg61:any list), (any1::(any2::(any3::(any4::((arg61 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg61 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 572


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg61:any list), (any1::(any2::(any3::(any4::((arg61 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg61 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 573


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 574


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 575


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 576


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 577


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 578


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 579


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg62:any list), (any1::(any2::(any3::(any4::((arg62 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg62 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 580


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg62:any list), (any1::(any2::(any3::(any4::((arg62 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg62 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 581


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 582


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 583


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 584


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg63:any list), (any1::(any2::(any3::(any4::((arg63 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg63 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 585


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg63:any list), (any1::(any2::(any3::(any4::((arg63 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg63 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 586


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 587


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg64:any list), (any1::(any2::(any3::(any4::((arg64 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg64 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 588


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg64:any list), (any1::(any2::(any3::(any4::((arg64 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg64 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 589


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg65:any list), (any1::(any2::(any3::(any4::((arg65 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg65 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 590


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg65:any list), (any1::(any2::(any3::(any4::((arg65 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg65 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 591


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 592


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 593


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 594


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg66:any list), (any1::(any2::(any3::(any4::((arg66 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg66 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 595


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg66:any list), (any1::(any2::(any3::(any4::((arg66 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg66 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 596


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 597


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg67:any list), (any1::(any2::(any3::(any4::((arg67 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg67 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 598


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg67:any list), (any1::(any2::(any3::(any4::((arg67 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg67 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 599


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg68:any list), (any1::(any2::(any3::(any4::((arg68 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg68 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 600


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg68:any list), (any1::(any2::(any3::(any4::((arg68 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg68 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 601


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 602


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg69:any list), (any1::(any2::(any3::(any4::((arg69 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg69 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 603


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg69:any list), (any1::(any2::(any3::(any4::((arg69 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg69 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 604


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg70:any list), (any1::(any2::(any3::(any4::((arg70 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg70 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 605


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg70:any list), (any1::(any2::(any3::(any4::((arg70 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg70 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 606


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg71:any list), (any1::(any2::(any3::(any4::((arg71 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg71 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 607


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg71:any list), (any1::(any2::(any3::(any4::((arg71 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg71 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 608


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 609


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg72:any list), (any1::(any2::(any3::(any4::((arg72 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg72 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 610


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg72:any list), (any1::(any2::(any3::(any4::((arg72 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg72 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 611


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg73:any list), (any1::(any2::(any3::(any4::((arg73 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg73 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 612


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg73:any list), (any1::(any2::(any3::(any4::((arg73 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg73 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 613


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg74:any list), (any1::(any2::(any3::(any4::((arg74 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg74 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 614


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg74:any list), (any1::(any2::(any3::(any4::((arg74 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg74 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 615


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg75:any list), (any1::(any2::(any3::(any4::((arg75 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg75 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 616


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg75:any list), (any1::(any2::(any3::(any4::((arg75 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg75 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 617


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg76:any list), (any1::(any2::(any3::(any4::((arg76 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg76 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 618


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg76:any list), (any1::(any2::(any3::(any4::((arg76 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg76 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 619


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 620


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 621


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 622


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 623


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 624


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 625


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 626


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 627


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 628


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 629


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 630


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 631


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 632


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 633


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 634


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 635


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 636


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 637


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg77:any list), (any1::(any2::(any3::(any4::((arg77 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg77 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 638


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg77:any list), (any1::(any2::(any3::(any4::((arg77 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg77 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 639


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 640


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 641


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 642


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 643


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 644


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 645


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg78:any list), (any1::(any2::(any3::(any4::((arg78 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg78 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 646


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg78:any list), (any1::(any2::(any3::(any4::((arg78 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg78 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 647


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 648


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 649


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 650


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg79:any list), (any1::(any2::(any3::(any4::((arg79 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg79 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 651


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg79:any list), (any1::(any2::(any3::(any4::((arg79 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg79 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 652


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 653


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg80:any list), (any1::(any2::(any3::(any4::((arg80 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg80 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 654


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg80:any list), (any1::(any2::(any3::(any4::((arg80 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg80 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 655


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg81:any list), (any1::(any2::(any3::(any4::((arg81 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg81 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 656


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg81:any list), (any1::(any2::(any3::(any4::((arg81 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg81 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 657


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 658


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 659


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 660


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg82:any list), (any1::(any2::(any3::(any4::((arg82 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg82 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 661


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg82:any list), (any1::(any2::(any3::(any4::((arg82 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg82 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 662


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 663


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg83:any list), (any1::(any2::(any3::(any4::((arg83 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg83 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 664


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg83:any list), (any1::(any2::(any3::(any4::((arg83 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg83 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 665


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg84:any list), (any1::(any2::(any3::(any4::((arg84 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg84 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 666


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg84:any list), (any1::(any2::(any3::(any4::((arg84 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg84 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 667


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 668


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg85:any list), (any1::(any2::(any3::(any4::((arg85 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg85 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 669


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg85:any list), (any1::(any2::(any3::(any4::((arg85 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg85 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 670


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg86:any list), (any1::(any2::(any3::(any4::((arg86 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg86 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 671


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg86:any list), (any1::(any2::(any3::(any4::((arg86 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg86 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 672


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg87:any list), (any1::(any2::(any3::(any4::((arg87 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg87 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 673


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg87:any list), (any1::(any2::(any3::(any4::((arg87 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg87 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 674


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 675


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg88:any list), (any1::(any2::(any3::(any4::((arg88 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg88 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 676


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg88:any list), (any1::(any2::(any3::(any4::((arg88 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg88 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 677


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg89:any list), (any1::(any2::(any3::(any4::((arg89 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg89 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 678


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg89:any list), (any1::(any2::(any3::(any4::((arg89 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg89 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 679


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg90:any list), (any1::(any2::(any3::(any4::((arg90 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg90 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 680


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg90:any list), (any1::(any2::(any3::(any4::((arg90 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg90 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 681


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg91:any list), (any1::(any2::(any3::(any4::((arg91 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg91 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 682


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg91:any list), (any1::(any2::(any3::(any4::((arg91 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg91 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 683


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg92:any list), (any1::(any2::(any3::(any4::((arg92 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg92 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 684


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg92:any list), (any1::(any2::(any3::(any4::((arg92 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg92 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 685


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 686


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 687


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 688


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 689


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 690


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 691


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 692


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 693


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 694


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 695


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 696


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 697


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 698


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 699


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 700


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 701


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 702


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 703


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg93:any list), (any1::(any2::(any3::(any4::((arg93 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg93 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 704


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg93:any list), (any1::(any2::(any3::(any4::((arg93 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg93 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 705


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 706


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 707


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 708


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 709


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 710


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 711


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg94:any list), (any1::(any2::(any3::(any4::((arg94 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg94 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 712


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg94:any list), (any1::(any2::(any3::(any4::((arg94 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg94 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 713


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 714


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 715


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 716


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg95:any list), (any1::(any2::(any3::(any4::((arg95 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg95 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 717


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg95:any list), (any1::(any2::(any3::(any4::((arg95 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg95 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 718


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 719


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg96:any list), (any1::(any2::(any3::(any4::((arg96 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg96 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 720


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg96:any list), (any1::(any2::(any3::(any4::((arg96 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg96 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 721


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg97:any list), (any1::(any2::(any3::(any4::((arg97 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg97 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 722


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg97:any list), (any1::(any2::(any3::(any4::((arg97 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg97 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 723


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 724


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 725


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 726


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg98:any list), (any1::(any2::(any3::(any4::((arg98 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg98 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 727


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg98:any list), (any1::(any2::(any3::(any4::((arg98 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg98 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 728


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 729


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg99:any list), (any1::(any2::(any3::(any4::((arg99 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg99 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 730


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg99:any list), (any1::(any2::(any3::(any4::((arg99 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg99 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 731


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg100:any list), (any1::(any2::(any3::(any4::((arg100 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg100 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 732


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg100:any list), (any1::(any2::(any3::(any4::((arg100 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg100 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 733


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 734


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg101:any list), (any1::(any2::(any3::(any4::((arg101 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg101 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 735


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg101:any list), (any1::(any2::(any3::(any4::((arg101 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg101 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 736


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg102:any list), (any1::(any2::(any3::(any4::((arg102 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg102 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 737


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg102:any list), (any1::(any2::(any3::(any4::((arg102 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg102 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 738


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg103:any list), (any1::(any2::(any3::(any4::((arg103 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg103 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 739


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg103:any list), (any1::(any2::(any3::(any4::((arg103 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg103 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 740


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 741


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg104:any list), (any1::(any2::(any3::(any4::((arg104 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg104 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 742


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg104:any list), (any1::(any2::(any3::(any4::((arg104 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg104 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 743


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg105:any list), (any1::(any2::(any3::(any4::((arg105 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg105 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 744


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg105:any list), (any1::(any2::(any3::(any4::((arg105 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg105 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 745


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg106:any list), (any1::(any2::(any3::(any4::((arg106 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg106 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 746


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg106:any list), (any1::(any2::(any3::(any4::((arg106 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg106 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 747


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg107:any list), (any1::(any2::(any3::(any4::((arg107 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg107 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 748


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg107:any list), (any1::(any2::(any3::(any4::((arg107 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg107 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 749


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg108:any list), (any1::(any2::(any3::(any4::((arg108 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg108 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 750


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg108:any list), (any1::(any2::(any3::(any4::((arg108 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg108 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 751


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 752


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 753


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 754


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 755


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 756


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 757


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 758


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 759


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 760


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 761


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 762


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 763


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 764


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 765


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 766


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 767


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 768


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 769


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg109:any list), (any1::(any2::(any3::(any4::((arg109 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg109 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 770


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg109:any list), (any1::(any2::(any3::(any4::((arg109 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg109 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 771


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 772


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 773


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 774


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 775


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 776


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 777


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg110:any list), (any1::(any2::(any3::(any4::((arg110 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg110 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 778


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg110:any list), (any1::(any2::(any3::(any4::((arg110 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg110 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 779


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 780


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 781


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 782


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg111:any list), (any1::(any2::(any3::(any4::((arg111 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg111 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 783


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg111:any list), (any1::(any2::(any3::(any4::((arg111 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg111 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 784


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 785


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg112:any list), (any1::(any2::(any3::(any4::((arg112 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg112 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 786


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg112:any list), (any1::(any2::(any3::(any4::((arg112 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg112 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 787


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg113:any list), (any1::(any2::(any3::(any4::((arg113 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg113 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 788


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg113:any list), (any1::(any2::(any3::(any4::((arg113 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg113 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 789


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 790


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 791


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 792


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg114:any list), (any1::(any2::(any3::(any4::((arg114 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg114 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 793


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg114:any list), (any1::(any2::(any3::(any4::((arg114 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg114 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 794


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 795


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg115:any list), (any1::(any2::(any3::(any4::((arg115 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg115 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 796


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg115:any list), (any1::(any2::(any3::(any4::((arg115 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg115 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 797


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg116:any list), (any1::(any2::(any3::(any4::((arg116 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg116 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 798


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg116:any list), (any1::(any2::(any3::(any4::((arg116 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg116 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 799


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 800


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg117:any list), (any1::(any2::(any3::(any4::((arg117 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg117 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 801


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg117:any list), (any1::(any2::(any3::(any4::((arg117 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg117 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 802


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg118:any list), (any1::(any2::(any3::(any4::((arg118 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg118 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 803


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg118:any list), (any1::(any2::(any3::(any4::((arg118 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg118 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 804


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg119:any list), (any1::(any2::(any3::(any4::((arg119 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg119 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 805


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg119:any list), (any1::(any2::(any3::(any4::((arg119 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg119 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 806


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 807


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg120:any list), (any1::(any2::(any3::(any4::((arg120 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg120 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 808


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg120:any list), (any1::(any2::(any3::(any4::((arg120 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg120 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 809


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg121:any list), (any1::(any2::(any3::(any4::((arg121 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg121 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 810


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg121:any list), (any1::(any2::(any3::(any4::((arg121 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg121 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 811


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg122:any list), (any1::(any2::(any3::(any4::((arg122 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg122 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 812


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg122:any list), (any1::(any2::(any3::(any4::((arg122 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg122 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 813


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg123:any list), (any1::(any2::(any3::(any4::((arg123 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg123 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 814


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg123:any list), (any1::(any2::(any3::(any4::((arg123 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg123 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 815


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg124:any list), (any1::(any2::(any3::(any4::((arg124 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg124 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 816


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg124:any list), (any1::(any2::(any3::(any4::((arg124 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg124 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 817


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 818


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 819


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 820


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 821


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 822


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 823


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 824


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 825


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 826


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 827


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 828


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 829


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 830


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 831


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 832


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 833


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 834


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 835


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg125:any list), (any1::(any2::(any3::(any4::((arg125 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg125 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 836


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg125:any list), (any1::(any2::(any3::(any4::((arg125 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg125 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 837


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 838


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 839


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 840


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 841


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 842


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 843


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg126:any list), (any1::(any2::(any3::(any4::((arg126 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg126 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 844


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg126:any list), (any1::(any2::(any3::(any4::((arg126 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg126 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 845


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 846


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 847


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 848


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg127:any list), (any1::(any2::(any3::(any4::((arg127 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg127 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 849


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg127:any list), (any1::(any2::(any3::(any4::((arg127 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg127 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 850


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 851


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg128:any list), (any1::(any2::(any3::(any4::((arg128 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg128 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 852


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg128:any list), (any1::(any2::(any3::(any4::((arg128 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg128 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 853


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg129:any list), (any1::(any2::(any3::(any4::((arg129 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg129 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 854


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg129:any list), (any1::(any2::(any3::(any4::((arg129 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg129 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 855


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 856


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 857


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 858


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg130:any list), (any1::(any2::(any3::(any4::((arg130 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg130 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 859


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg130:any list), (any1::(any2::(any3::(any4::((arg130 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg130 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 860


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 861


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg131:any list), (any1::(any2::(any3::(any4::((arg131 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg131 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 862


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg131:any list), (any1::(any2::(any3::(any4::((arg131 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg131 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 863


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg132:any list), (any1::(any2::(any3::(any4::((arg132 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg132 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 864


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg132:any list), (any1::(any2::(any3::(any4::((arg132 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg132 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 865


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 866


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg133:any list), (any1::(any2::(any3::(any4::((arg133 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg133 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 867


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg133:any list), (any1::(any2::(any3::(any4::((arg133 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg133 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 868


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg134:any list), (any1::(any2::(any3::(any4::((arg134 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg134 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 869


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg134:any list), (any1::(any2::(any3::(any4::((arg134 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg134 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 870


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg135:any list), (any1::(any2::(any3::(any4::((arg135 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg135 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 871


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg135:any list), (any1::(any2::(any3::(any4::((arg135 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg135 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 872


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 873


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg136:any list), (any1::(any2::(any3::(any4::((arg136 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg136 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 874


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg136:any list), (any1::(any2::(any3::(any4::((arg136 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg136 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 875


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg137:any list), (any1::(any2::(any3::(any4::((arg137 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg137 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 876


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg137:any list), (any1::(any2::(any3::(any4::((arg137 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg137 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 877


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg138:any list), (any1::(any2::(any3::(any4::((arg138 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg138 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 878


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg138:any list), (any1::(any2::(any3::(any4::((arg138 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg138 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 879


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg139:any list), (any1::(any2::(any3::(any4::((arg139 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg139 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 880


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg139:any list), (any1::(any2::(any3::(any4::((arg139 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg139 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 881


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg140:any list), (any1::(any2::(any3::(any4::((arg140 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg140 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 882


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg140:any list), (any1::(any2::(any3::(any4::((arg140 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg140 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 883


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 884


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 885


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 886


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 887


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 888


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 889


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 890


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 891


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 892


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 893


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 894


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 895


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 896


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 897


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 898


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 899


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 900


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 901


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg141:any list), (any1::(any2::(any3::(any4::((arg141 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg141 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 902


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg141:any list), (any1::(any2::(any3::(any4::((arg141 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg141 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 903


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 904


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 905


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 906


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 907


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 908


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 909


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg142:any list), (any1::(any2::(any3::(any4::((arg142 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg142 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 910


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg142:any list), (any1::(any2::(any3::(any4::((arg142 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg142 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 911


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 912


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 913


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 914


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg143:any list), (any1::(any2::(any3::(any4::((arg143 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg143 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 915


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg143:any list), (any1::(any2::(any3::(any4::((arg143 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg143 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 916


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 917


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg144:any list), (any1::(any2::(any3::(any4::((arg144 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg144 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 918


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg144:any list), (any1::(any2::(any3::(any4::((arg144 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg144 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 919


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg145:any list), (any1::(any2::(any3::(any4::((arg145 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg145 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 920


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg145:any list), (any1::(any2::(any3::(any4::((arg145 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg145 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 921


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 922


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 923


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 924


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg146:any list), (any1::(any2::(any3::(any4::((arg146 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg146 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 925


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg146:any list), (any1::(any2::(any3::(any4::((arg146 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg146 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 926


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 927


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg147:any list), (any1::(any2::(any3::(any4::((arg147 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg147 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 928


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg147:any list), (any1::(any2::(any3::(any4::((arg147 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg147 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 929


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg148:any list), (any1::(any2::(any3::(any4::((arg148 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg148 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 930


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg148:any list), (any1::(any2::(any3::(any4::((arg148 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg148 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 931


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 932


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg149:any list), (any1::(any2::(any3::(any4::((arg149 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg149 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 933


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg149:any list), (any1::(any2::(any3::(any4::((arg149 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg149 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 934


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg150:any list), (any1::(any2::(any3::(any4::((arg150 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg150 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 935


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg150:any list), (any1::(any2::(any3::(any4::((arg150 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg150 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 936


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg151:any list), (any1::(any2::(any3::(any4::((arg151 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg151 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 937


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg151:any list), (any1::(any2::(any3::(any4::((arg151 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg151 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 938


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 939


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg152:any list), (any1::(any2::(any3::(any4::((arg152 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg152 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 940


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg152:any list), (any1::(any2::(any3::(any4::((arg152 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg152 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 941


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg153:any list), (any1::(any2::(any3::(any4::((arg153 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg153 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 942


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg153:any list), (any1::(any2::(any3::(any4::((arg153 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg153 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 943


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg154:any list), (any1::(any2::(any3::(any4::((arg154 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg154 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 944


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg154:any list), (any1::(any2::(any3::(any4::((arg154 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg154 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 945


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg155:any list), (any1::(any2::(any3::(any4::((arg155 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg155 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 946


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg155:any list), (any1::(any2::(any3::(any4::((arg155 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg155 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 947


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg156:any list), (any1::(any2::(any3::(any4::((arg156 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg156 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 948


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg156:any list), (any1::(any2::(any3::(any4::((arg156 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg156 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 949


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 950


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 951


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 952


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 953


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 954


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 955


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 956


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 957


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 958


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 959


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 960


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 961


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 962


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 963


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 964


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 965


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 966


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 967


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg157:any list), (any1::(any2::(any3::(any4::((arg157 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg157 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 968


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg157:any list), (any1::(any2::(any3::(any4::((arg157 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg157 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 969


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 970


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 971


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 972


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 973


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 974


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 975


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg158:any list), (any1::(any2::(any3::(any4::((arg158 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg158 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 976


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg158:any list), (any1::(any2::(any3::(any4::((arg158 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg158 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 977


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 978


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 979


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 980


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg159:any list), (any1::(any2::(any3::(any4::((arg159 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg159 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 981


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg159:any list), (any1::(any2::(any3::(any4::((arg159 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg159 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 982


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 983


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg160:any list), (any1::(any2::(any3::(any4::((arg160 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg160 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 984


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg160:any list), (any1::(any2::(any3::(any4::((arg160 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg160 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 985


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg161:any list), (any1::(any2::(any3::(any4::((arg161 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg161 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 986


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg161:any list), (any1::(any2::(any3::(any4::((arg161 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg161 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 987


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 988


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 989


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 990


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg162:any list), (any1::(any2::(any3::(any4::((arg162 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg162 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 991


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg162:any list), (any1::(any2::(any3::(any4::((arg162 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg162 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 992


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 993


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg163:any list), (any1::(any2::(any3::(any4::((arg163 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg163 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 994


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg163:any list), (any1::(any2::(any3::(any4::((arg163 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg163 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 995


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg164:any list), (any1::(any2::(any3::(any4::((arg164 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg164 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 996


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg164:any list), (any1::(any2::(any3::(any4::((arg164 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg164 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 997


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 998


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg165:any list), (any1::(any2::(any3::(any4::((arg165 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg165 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 999


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg165:any list), (any1::(any2::(any3::(any4::((arg165 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg165 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1000


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg166:any list), (any1::(any2::(any3::(any4::((arg166 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg166 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1001


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg166:any list), (any1::(any2::(any3::(any4::((arg166 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg166 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1002


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg167:any list), (any1::(any2::(any3::(any4::((arg167 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg167 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1003


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg167:any list), (any1::(any2::(any3::(any4::((arg167 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg167 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1004


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1005


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg168:any list), (any1::(any2::(any3::(any4::((arg168 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg168 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1006


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg168:any list), (any1::(any2::(any3::(any4::((arg168 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg168 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1007


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg169:any list), (any1::(any2::(any3::(any4::((arg169 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg169 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1008


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg169:any list), (any1::(any2::(any3::(any4::((arg169 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg169 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1009


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg170:any list), (any1::(any2::(any3::(any4::((arg170 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg170 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1010


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg170:any list), (any1::(any2::(any3::(any4::((arg170 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg170 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1011


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg171:any list), (any1::(any2::(any3::(any4::((arg171 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg171 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1012


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg171:any list), (any1::(any2::(any3::(any4::((arg171 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg171 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1013


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg172:any list), (any1::(any2::(any3::(any4::((arg172 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg172 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1014


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg172:any list), (any1::(any2::(any3::(any4::((arg172 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg172 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1015


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1016


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1017


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1018


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1019


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1020


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1021


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1022


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1023


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1024


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1025


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1026


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1027


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1028


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1029


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1030


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1031


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1032


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1033


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg173:any list), (any1::(any2::(any3::(any4::((arg173 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg173 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1034


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg173:any list), (any1::(any2::(any3::(any4::((arg173 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg173 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1035


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1036


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1037


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1038


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1039


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1040


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1041


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg174:any list), (any1::(any2::(any3::(any4::((arg174 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg174 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1042


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg174:any list), (any1::(any2::(any3::(any4::((arg174 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg174 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1043


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1044


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1045


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1046


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg175:any list), (any1::(any2::(any3::(any4::((arg175 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg175 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1047


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg175:any list), (any1::(any2::(any3::(any4::((arg175 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg175 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1048


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1049


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg176:any list), (any1::(any2::(any3::(any4::((arg176 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg176 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1050


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg176:any list), (any1::(any2::(any3::(any4::((arg176 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg176 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1051


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg177:any list), (any1::(any2::(any3::(any4::((arg177 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg177 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1052


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg177:any list), (any1::(any2::(any3::(any4::((arg177 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg177 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1053


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1054


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1055


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1056


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg178:any list), (any1::(any2::(any3::(any4::((arg178 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg178 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1057


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg178:any list), (any1::(any2::(any3::(any4::((arg178 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg178 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1058


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1059


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg179:any list), (any1::(any2::(any3::(any4::((arg179 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg179 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1060


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg179:any list), (any1::(any2::(any3::(any4::((arg179 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg179 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1061


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg180:any list), (any1::(any2::(any3::(any4::((arg180 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg180 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1062


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg180:any list), (any1::(any2::(any3::(any4::((arg180 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg180 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1063


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1064


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg181:any list), (any1::(any2::(any3::(any4::((arg181 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg181 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1065


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg181:any list), (any1::(any2::(any3::(any4::((arg181 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg181 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1066


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg182:any list), (any1::(any2::(any3::(any4::((arg182 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg182 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1067


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg182:any list), (any1::(any2::(any3::(any4::((arg182 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg182 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1068


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg183:any list), (any1::(any2::(any3::(any4::((arg183 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg183 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1069


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg183:any list), (any1::(any2::(any3::(any4::((arg183 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg183 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1070


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1071


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg184:any list), (any1::(any2::(any3::(any4::((arg184 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg184 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1072


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg184:any list), (any1::(any2::(any3::(any4::((arg184 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg184 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1073


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg185:any list), (any1::(any2::(any3::(any4::((arg185 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg185 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1074


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg185:any list), (any1::(any2::(any3::(any4::((arg185 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg185 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1075


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg186:any list), (any1::(any2::(any3::(any4::((arg186 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg186 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1076


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg186:any list), (any1::(any2::(any3::(any4::((arg186 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg186 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1077


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg187:any list), (any1::(any2::(any3::(any4::((arg187 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg187 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1078


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg187:any list), (any1::(any2::(any3::(any4::((arg187 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg187 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1079


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg188:any list), (any1::(any2::(any3::(any4::((arg188 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg188 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1080


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg188:any list), (any1::(any2::(any3::(any4::((arg188 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg188 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1081


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1082


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1083


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1084


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1085


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1086


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1087


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1088


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1089


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1090


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1091


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1092


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1093


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1094


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1095


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1096


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1097


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1098


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1099


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg189:any list), (any1::(any2::(any3::(any4::((arg189 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg189 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1100


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg189:any list), (any1::(any2::(any3::(any4::((arg189 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg189 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1101


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1102


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1103


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1104


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1105


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1106


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1107


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg190:any list), (any1::(any2::(any3::(any4::((arg190 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg190 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg190:any list), (any1::(any2::(any3::(any4::((arg190 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg190 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg191:any list), (any1::(any2::(any3::(any4::((arg191 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg191 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg191:any list), (any1::(any2::(any3::(any4::((arg191 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg191 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg192:any list), (any1::(any2::(any3::(any4::((arg192 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg192 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg192:any list), (any1::(any2::(any3::(any4::((arg192 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg192 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg193:any list), (any1::(any2::(any3::(any4::((arg193 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg193 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg193:any list), (any1::(any2::(any3::(any4::((arg193 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg193 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg194:any list), (any1::(any2::(any3::(any4::((arg194 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg194 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg194:any list), (any1::(any2::(any3::(any4::((arg194 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg194 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1125


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg195:any list), (any1::(any2::(any3::(any4::((arg195 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg195 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1126


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg195:any list), (any1::(any2::(any3::(any4::((arg195 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg195 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1127


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg196:any list), (any1::(any2::(any3::(any4::((arg196 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg196 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1128


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg196:any list), (any1::(any2::(any3::(any4::((arg196 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg196 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1129


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1130


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg197:any list), (any1::(any2::(any3::(any4::((arg197 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg197 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1131


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg197:any list), (any1::(any2::(any3::(any4::((arg197 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg197 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1132


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg198:any list), (any1::(any2::(any3::(any4::((arg198 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg198 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1133


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg198:any list), (any1::(any2::(any3::(any4::((arg198 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg198 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1134


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg199:any list), (any1::(any2::(any3::(any4::((arg199 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg199 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1135


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg199:any list), (any1::(any2::(any3::(any4::((arg199 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg199 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1136


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1137


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg200:any list), (any1::(any2::(any3::(any4::((arg200 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg200 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1138


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg200:any list), (any1::(any2::(any3::(any4::((arg200 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg200 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1139


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg201:any list), (any1::(any2::(any3::(any4::((arg201 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg201 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1140


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg201:any list), (any1::(any2::(any3::(any4::((arg201 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg201 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1141


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg202:any list), (any1::(any2::(any3::(any4::((arg202 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg202 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1142


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg202:any list), (any1::(any2::(any3::(any4::((arg202 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg202 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1143


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg203:any list), (any1::(any2::(any3::(any4::((arg203 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg203 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1144


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg203:any list), (any1::(any2::(any3::(any4::((arg203 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg203 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1145


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg204:any list), (any1::(any2::(any3::(any4::((arg204 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg204 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1146


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg204:any list), (any1::(any2::(any3::(any4::((arg204 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg204 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1147


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1148


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1149


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1150


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1151


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1152


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1153


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1154


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1155


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1156


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1157


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1158


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1159


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1160


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1161


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1162


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1163


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1164


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1165


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg205:any list), (any1::(any2::(any3::(any4::((arg205 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg205 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1166


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg205:any list), (any1::(any2::(any3::(any4::((arg205 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg205 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1167


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1168


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1169


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1170


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1171


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1172


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1173


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg206:any list), (any1::(any2::(any3::(any4::((arg206 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg206 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1174


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg206:any list), (any1::(any2::(any3::(any4::((arg206 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg206 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1175


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1176


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1177


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1178


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg207:any list), (any1::(any2::(any3::(any4::((arg207 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg207 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1179


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg207:any list), (any1::(any2::(any3::(any4::((arg207 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg207 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1180


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1181


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg208:any list), (any1::(any2::(any3::(any4::((arg208 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg208 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1182


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg208:any list), (any1::(any2::(any3::(any4::((arg208 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg208 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1183


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg209:any list), (any1::(any2::(any3::(any4::((arg209 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg209 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1184


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg209:any list), (any1::(any2::(any3::(any4::((arg209 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg209 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1185


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1186


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1187


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1188


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg210:any list), (any1::(any2::(any3::(any4::((arg210 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg210 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1189


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg210:any list), (any1::(any2::(any3::(any4::((arg210 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg210 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1190


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1191


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg211:any list), (any1::(any2::(any3::(any4::((arg211 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg211 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1192


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg211:any list), (any1::(any2::(any3::(any4::((arg211 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg211 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1193


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg212:any list), (any1::(any2::(any3::(any4::((arg212 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg212 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1194


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg212:any list), (any1::(any2::(any3::(any4::((arg212 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg212 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1195


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1196


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg213:any list), (any1::(any2::(any3::(any4::((arg213 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg213 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1197


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg213:any list), (any1::(any2::(any3::(any4::((arg213 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg213 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1198


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg214:any list), (any1::(any2::(any3::(any4::((arg214 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg214 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1199


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg214:any list), (any1::(any2::(any3::(any4::((arg214 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg214 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1200


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg215:any list), (any1::(any2::(any3::(any4::((arg215 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg215 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1201


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg215:any list), (any1::(any2::(any3::(any4::((arg215 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg215 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1202


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1203


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg216:any list), (any1::(any2::(any3::(any4::((arg216 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg216 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1204


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg216:any list), (any1::(any2::(any3::(any4::((arg216 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg216 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1205


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg217:any list), (any1::(any2::(any3::(any4::((arg217 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg217 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1206


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg217:any list), (any1::(any2::(any3::(any4::((arg217 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg217 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1207


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg218:any list), (any1::(any2::(any3::(any4::((arg218 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg218 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1208


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg218:any list), (any1::(any2::(any3::(any4::((arg218 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg218 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1209


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg219:any list), (any1::(any2::(any3::(any4::((arg219 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg219 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1210


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg219:any list), (any1::(any2::(any3::(any4::((arg219 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg219 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1211


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg220:any list), (any1::(any2::(any3::(any4::((arg220 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg220 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1212


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg220:any list), (any1::(any2::(any3::(any4::((arg220 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg220 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1213


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1214


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1215


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1216


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1217


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1218


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1219


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1220


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1221


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1222


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1223


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1224


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1225


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1226


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1227


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1228


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1229


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1230


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1231


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg221:any list), (any1::(any2::(any3::(any4::((arg221 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg221 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1232


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg221:any list), (any1::(any2::(any3::(any4::((arg221 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg221 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1233


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1234


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1235


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1236


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1237


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1238


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1239


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg222:any list), (any1::(any2::(any3::(any4::((arg222 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg222 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1240


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg222:any list), (any1::(any2::(any3::(any4::((arg222 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg222 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1241


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1242


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1243


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1244


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg223:any list), (any1::(any2::(any3::(any4::((arg223 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg223 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1245


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg223:any list), (any1::(any2::(any3::(any4::((arg223 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg223 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1246


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1247


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg224:any list), (any1::(any2::(any3::(any4::((arg224 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg224 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1248


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg224:any list), (any1::(any2::(any3::(any4::((arg224 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg224 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1249


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg225:any list), (any1::(any2::(any3::(any4::((arg225 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg225 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1250


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg225:any list), (any1::(any2::(any3::(any4::((arg225 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg225 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1251


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1252


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1253


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1254


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg226:any list), (any1::(any2::(any3::(any4::((arg226 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg226 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1255


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg226:any list), (any1::(any2::(any3::(any4::((arg226 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg226 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1256


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1257


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg227:any list), (any1::(any2::(any3::(any4::((arg227 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg227 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1258


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg227:any list), (any1::(any2::(any3::(any4::((arg227 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg227 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1259


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg228:any list), (any1::(any2::(any3::(any4::((arg228 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg228 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1260


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg228:any list), (any1::(any2::(any3::(any4::((arg228 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg228 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1261


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1262


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg229:any list), (any1::(any2::(any3::(any4::((arg229 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg229 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1263


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg229:any list), (any1::(any2::(any3::(any4::((arg229 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg229 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1264


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg230:any list), (any1::(any2::(any3::(any4::((arg230 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg230 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1265


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg230:any list), (any1::(any2::(any3::(any4::((arg230 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg230 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1266


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg231:any list), (any1::(any2::(any3::(any4::((arg231 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg231 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1267


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg231:any list), (any1::(any2::(any3::(any4::((arg231 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg231 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1268


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1269


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg232:any list), (any1::(any2::(any3::(any4::((arg232 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg232 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1270


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg232:any list), (any1::(any2::(any3::(any4::((arg232 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg232 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1271


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg233:any list), (any1::(any2::(any3::(any4::((arg233 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg233 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1272


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg233:any list), (any1::(any2::(any3::(any4::((arg233 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg233 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1273


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg234:any list), (any1::(any2::(any3::(any4::((arg234 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg234 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1274


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg234:any list), (any1::(any2::(any3::(any4::((arg234 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg234 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1275


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg235:any list), (any1::(any2::(any3::(any4::((arg235 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg235 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1276


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg235:any list), (any1::(any2::(any3::(any4::((arg235 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg235 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1277


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg236:any list), (any1::(any2::(any3::(any4::((arg236 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg236 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1278


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg236:any list), (any1::(any2::(any3::(any4::((arg236 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg236 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1279


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1280


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1281


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1282


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1283


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1284


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1285


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1286


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1287


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1288


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1289


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1290


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1291


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1292


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1293


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1294


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1295


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1296


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1297


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg237:any list), (any1::(any2::(any3::(any4::((arg237 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg237 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1298


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg237:any list), (any1::(any2::(any3::(any4::((arg237 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg237 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1299


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1300


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1301


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1302


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1303


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1304


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1305


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg238:any list), (any1::(any2::(any3::(any4::((arg238 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg238 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1306


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg238:any list), (any1::(any2::(any3::(any4::((arg238 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg238 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1307


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1308


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1309


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1310


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg239:any list), (any1::(any2::(any3::(any4::((arg239 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg239 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1311


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg239:any list), (any1::(any2::(any3::(any4::((arg239 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg239 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1312


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1313


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg240:any list), (any1::(any2::(any3::(any4::((arg240 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg240 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1314


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg240:any list), (any1::(any2::(any3::(any4::((arg240 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg240 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1315


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg241:any list), (any1::(any2::(any3::(any4::((arg241 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg241 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1316


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg241:any list), (any1::(any2::(any3::(any4::((arg241 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg241 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1317


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1318


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1319


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1320


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg242:any list), (any1::(any2::(any3::(any4::((arg242 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg242 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1321


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg242:any list), (any1::(any2::(any3::(any4::((arg242 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg242 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1322


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1323


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg243:any list), (any1::(any2::(any3::(any4::((arg243 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg243 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1324


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg243:any list), (any1::(any2::(any3::(any4::((arg243 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg243 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1325


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg244:any list), (any1::(any2::(any3::(any4::((arg244 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg244 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1326


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg244:any list), (any1::(any2::(any3::(any4::((arg244 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg244 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1327


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1328


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg245:any list), (any1::(any2::(any3::(any4::((arg245 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg245 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1329


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg245:any list), (any1::(any2::(any3::(any4::((arg245 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg245 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1330


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg246:any list), (any1::(any2::(any3::(any4::((arg246 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg246 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1331


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg246:any list), (any1::(any2::(any3::(any4::((arg246 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg246 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1332


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg247:any list), (any1::(any2::(any3::(any4::((arg247 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg247 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1333


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg247:any list), (any1::(any2::(any3::(any4::((arg247 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg247 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1334


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Dilemma timed out for benchmark clam with problem 40.File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
