Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any tree) (y:any list), (revflat (x) @ y) = qrevaflat (x) (y)(rank : 0)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

---------------------------------------
forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:4)
=================================================
Progress: 2


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

---------------------------------------
forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_tree1(rank : 4)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any_list1:any list), (revflat (Leaf) @ any_list1) = qrevaflat (Leaf) (any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any_list1:any list), (revflat (Leaf) @ any_list1) = qrevaflat (Leaf) (any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (revflat (Node (any_tree2) (any1) (any_tree3)) @ any_list1) = qrevaflat (Node (any_tree2) (any1) (any_tree3)) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (revflat (Node (any_tree2) (any1) (any_tree3)) @ any_list1) = qrevaflat (Node (any_tree2) (any1) (any_tree3)) (any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:3)
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- IH2 in goal at 0(rank:11)
=================================================
Progress: 5


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list1(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- IH2 in goal at 0(rank:11)
=================================================
Progress: 6


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:11)
rewrite <- IH1 in goal at 2(rank:19)
=================================================
Progress: 7


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:3)
=================================================
Progress: 8


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:3)
rewrite IH1 in goal at 1(rank:19)
=================================================
Progress: 9


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list1(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 1(rank:3)
=================================================
Progress: 10


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 3)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
intro any_list1
rewrite IH1 in goal at 1
advanced_generalize done
Lemma : forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg1:any list), (qrevaflat (any_tree2) ((any1::arg1)) @ any_list1) = (revflat (any_tree2) @ (any1::(arg1 @ any_list1)))
Model : any1: 0, any_list1: (0::(Nil)), any_tree2: Leaf, arg1: (Nil)
Model : any1: 6, any_list1: (Nil), any_tree2: Leaf, arg1: (7::(6::(Nil)))
Model : any1: 2, any_list1: (Nil), any_tree2: Node (Leaf) (4) (Leaf), arg1: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000731 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg1:any list), (qrevaflat (any_tree2) ((any1::arg1)) @ any_list1) = (revflat (any_tree2) @ (any1::(arg1 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 11


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg1:any list), (qrevaflat (any_tree2) ((any1::arg1)) @ any_list1) = (revflat (any_tree2) @ (any1::(arg1 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 12


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = (revflat (any_tree1) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = (revflat (Leaf) @ (any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 15


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = (revflat (Leaf) @ (any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = (revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 16


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = (revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 17


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 18


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6)
=================================================
Progress: 20


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (any_tree3:any tree), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))
Model : any1: 4, any2: 8, any_list1: (Nil), any_tree2: Leaf, any_tree3: Leaf
Model : any1: 3, any2: 2, any_list1: (Nil), any_tree2: Leaf, any_tree3: Leaf
Model : any1: 0, any2: 7, any_list1: (4::(Nil)), any_tree2: Leaf, any_tree3: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000815 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (any_tree3:any tree), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 21


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (any_tree3:any tree), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:8)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = (revflat (any_tree1) @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = (revflat (any_tree2) @ (any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = (revflat (any_tree3) @ (any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (any_tree3:any tree), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree2) ((any2::(Nil))) @ revflat (any_tree3)) @ (any1::any_list1))
Model : any1: 8, any2: 5, any_list1: (Nil), any_tree2: Leaf, any_tree3: Leaf
Model : any1: 5, any2: 0, any_list1: (Nil), any_tree2: Leaf, any_tree3: Leaf
Model : any1: 3, any2: 8, any_list1: (6::(0::(Nil))), any_tree2: Node (Leaf) (2) (Leaf), any_tree3: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001235 seconds
Result : true
=================================================
Progress: 23


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (qrevaflat (Leaf) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (Leaf) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (qrevaflat (Leaf) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (Leaf) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree2) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree2(rank:9)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree2) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Leaf) @ (any1::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Leaf) @ (any1::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Node (any_tree3) (any3) (any_tree4)) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Node (any_tree3) (any3) (any_tree4)) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (Node (any_tree3) (any3) (any_tree4)) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (Node (any_tree3) (any3) (any_tree4)) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any2(rank:8)
intro any_list1(rank:8)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:8)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))
Model : any1: 7, any2: 1, any3: 4, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), any_tree4: Leaf
Model : any1: 3, any2: 8, any3: 6, any_list1: (Nil), any_tree3: Node (Node (Leaf) (5) (Leaf)) (4) (Leaf), any_tree4: Leaf
Model : any1: 6, any2: 0, any3: 3, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Node (Leaf) (4) (Leaf)) (2) (Leaf)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002446 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 31


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:8)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))
Model : any1: 0, any2: 6, any3: 3, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 6, any2: 1, any3: 5, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 1, any2: 3, any3: 7, any_list1: (0::(5::(Nil))), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000742 seconds
Result : true
=================================================
Progress: 34


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))
Model : any1: 7, any2: 1, any3: 3, any_list1: (Nil), any_tree3: Node (Leaf) (2) (Leaf), any_tree4: Leaf
Model : any1: 3, any2: 2, any3: 4, any_list1: (2::(Nil)), any_tree3: Node (Leaf) (0) (Leaf), any_tree4: Leaf
Model : any1: 1, any2: 1, any3: 8, any_list1: (1::(Nil)), any_tree3: Node (Leaf) (2) (Node (Leaf) (7) (Node (Leaf) (2) (Leaf))), any_tree4: Node (Leaf) (2) (Leaf)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002829 seconds
Result : true
=================================================
Progress: 35


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (qrevaflat (any_tree1) ((any2::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1) = ((qrevaflat (any_tree1) ((any2::(Nil))) @ revflat (any_tree2)) @ (any1::any_list1))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any3 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree3) @ (any1::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any2::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)) = (any2::(revflat (any_tree4) @ (any1::any_list1)))
Inductive1 : any_tree2 = Node (any_tree3) (any3) (any_tree4)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(qrevaflat (any_tree3) ((any3::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree3) @ (any3::revflat (any_tree4))) @ (any1::any_list1)))
Model : any1: 7, any2: 4, any3: 3, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Leaf), any_tree4: Leaf
Model : any1: 1, any2: 8, any3: 3, any_list1: (2::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 1, any2: 2, any3: 0, any_list1: (Nil), any_tree3: Node (Node (Leaf) (1) (Node (Leaf) (3) (Leaf))) (8) (Node (Node (Leaf) (0) (Leaf)) (4) (Leaf)), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002709 seconds
Result : true
=================================================
Progress: 36


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (Leaf) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (Leaf) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(qrevaflat (Leaf) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (Leaf) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree2) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree2(rank:11)
=================================================
Progress: 38


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg2:any list), ((revflat (any_tree2) @ (any1::arg2)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg2 @ any_list1)))
Model : any1: 1, any_list1: (Nil), any_tree2: Leaf, arg2: (Nil)
Model : any1: 4, any_list1: (Nil), any_tree2: Leaf, arg2: (2::(Nil))
Model : any1: 5, any_list1: (Nil), any_tree2: Leaf, arg2: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000397 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg2:any list), ((revflat (any_tree2) @ (any1::arg2)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg2 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 39


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), ((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg2:any list), ((revflat (any_tree2) @ (any1::arg2)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg2 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 41


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 42


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 43


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 45


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 48


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:11)
rewrite <- IH1 in goal at 2(rank:19)
=================================================
Progress: 49


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any_list1:any list) (any_tree3:any tree) (arg3:any list), ((arg3 @ (any1::revflat (any_tree3))) @ any_list1) = (arg3 @ (any1::qrevaflat (any_tree3) (any_list1)))
Model : any1: 4, any_list1: (2::(Nil)), any_tree3: Leaf, arg3: (Nil)
Model : any1: 0, any_list1: (Nil), any_tree3: Leaf, arg3: (Nil)
Model : any1: 0, any_list1: (Nil), any_tree3: Leaf, arg3: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000240 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree3:any tree) (arg3:any list), ((arg3 @ (any1::revflat (any_tree3))) @ any_list1) = (arg3 @ (any1::qrevaflat (any_tree3) (any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 50


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = (revflat (any_tree2) @ (any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree3:any tree) (arg3:any list), ((arg3 @ (any1::revflat (any_tree3))) @ any_list1) = (arg3 @ (any1::qrevaflat (any_tree3) (any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((Nil) @ (any1::revflat (any_tree1))) @ any_list1) = ((Nil) @ (any1::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((Nil) @ (any1::revflat (any_tree1))) @ any_list1) = ((Nil) @ (any1::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (any1::(revflat (any_tree1) @ any_list1)) = (any1::qrevaflat (any_tree1) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (any1::(revflat (any_tree1) @ any_list1)) = (any1::qrevaflat (any_tree1) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Leaf) @ any_list1)) = (any1::qrevaflat (Leaf) (any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Leaf) @ any_list1)) = (any1::qrevaflat (Leaf) (any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Node (any_tree2) (any2) (any_tree3)) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any2) (any_tree3)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(revflat (Node (any_tree2) (any2) (any_tree3)) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any2) (any_tree3)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 59


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg4:any list), ((revflat (any_tree2) @ (any1::arg4)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg4 @ any_list1)))
Model : any1: 4, any_list1: (Nil), any_tree2: Node (Leaf) (1) (Leaf), arg4: (2::(Nil))
Model : any1: 3, any_list1: (Nil), any_tree2: Node (Leaf) (2) (Node (Leaf) (8) (Leaf)), arg4: (6::(Nil))
Model : any1: 4, any_list1: (4::(Nil)), any_tree2: Leaf, arg4: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001376 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg4:any list), ((revflat (any_tree2) @ (any1::arg4)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg4 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 60


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
((revflat (any_tree2) @ (any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg4:any list), ((revflat (any_tree2) @ (any1::arg4)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg4 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), ((revflat (any_tree1) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Leaf) @ (any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:6)
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:6)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH2 in goal at 0(rank:14)
=================================================
Progress: 67


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 69


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg5:any list), (qrevaflat (any_tree2) ((any1::arg5)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg5 @ any_list1)))
Model : any1: 3, any_list1: (Nil), any_tree2: Leaf, arg5: (Nil)
Model : any1: 6, any_list1: (1::(0::(Nil))), any_tree2: Leaf, arg5: (Nil)
Model : any1: 0, any_list1: (Nil), any_tree2: Leaf, arg5: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000280 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg5:any list), (qrevaflat (any_tree2) ((any1::arg5)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg5 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 70


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg5:any list), (qrevaflat (any_tree2) ((any1::arg5)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg5 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 71


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
intro any1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
intro any_list1(rank:6)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH1 in goal at 1(rank:22)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:14)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree2) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Leaf) @ (any1::any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Leaf) @ (any1::any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Node (any_tree3) (any4) (any_tree4)) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Node (any_tree3) (any4) (any_tree4)) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 81


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (Node (any_tree3) (any4) (any_tree4)) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (Node (any_tree3) (any4) (any_tree4)) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:10)
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 85


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 2, any2: 4, any3: 3, any4: 4, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 8, any2: 3, any3: 2, any4: 5, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Node (Leaf) (0) (Leaf)) (4) (Leaf)
Model : any1: 3, any2: 2, any3: 4, any4: 7, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001456 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 86


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:12)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any3(rank:10)
intro any_list1(rank:10)
=================================================
Progress: 88


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 1, any2: 4, any3: 1, any4: 7, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), any_tree4: Leaf
Model : any1: 3, any2: 5, any3: 5, any4: 2, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (5) (Node (Leaf) (8) (Leaf))
Model : any1: 6, any2: 3, any3: 5, any4: 4, any_list1: (0::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001714 seconds
Result : true
=================================================
Progress: 90


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 2, any2: 1, any3: 2, any4: 5, any_list1: (7::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 7, any2: 3, any3: 3, any4: 7, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 5, any2: 5, any3: 0, any4: 0, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001042 seconds
Result : true
=================================================
Progress: 92


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 8, any2: 2, any3: 5, any4: 3, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 1, any2: 5, any3: 2, any4: 0, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 0, any2: 0, any3: 0, any4: 6, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000573 seconds
Result : true
=================================================
Progress: 93


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:10)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 5, any2: 2, any3: 5, any4: 4, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), any_tree4: Node (Node (Leaf) (2) (Leaf)) (1) (Node (Leaf) (3) (Node (Node (Leaf) (4) (Leaf)) (1) (Leaf)))
Model : any1: 7, any2: 7, any3: 5, any4: 0, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 6, any2: 5, any3: 4, any4: 7, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002870 seconds
Result : true
=================================================
Progress: 95


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 0, any2: 5, any3: 2, any4: 4, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 1, any2: 0, any3: 0, any4: 4, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 0, any2: 0, any3: 6, any4: 6, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000872 seconds
Result : true
=================================================
Progress: 96


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 1, any2: 0, any3: 3, any4: 3, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 3, any2: 3, any3: 5, any4: 5, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 8, any2: 6, any3: 8, any4: 0, any_list1: (8::(7::(0::(Nil)))), any_tree3: Leaf, any_tree4: Node (Leaf) (8) (Leaf)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001245 seconds
Result : true
=================================================
Progress: 97


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(qrevaflat (any_tree1) ((any3::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)) = (any2::((revflat (any_tree1) @ (any3::revflat (any_tree2))) @ (any1::any_list1)))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any4 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree3) @ (any1::any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1))) = (any2::(any3::(revflat (any_tree4) @ (any1::any_list1))))
Inductive1 : any_tree2 = Node (any_tree3) (any4) (any_tree4)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(qrevaflat (any_tree3) ((any4::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree3) @ (any4::revflat (any_tree4))) @ (any1::any_list1))))
Model : any1: 0, any2: 1, any3: 2, any4: 7, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 3, any2: 6, any3: 1, any4: 0, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (5) (Leaf)
Model : any1: 0, any2: 2, any3: 4, any4: 1, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000791 seconds
Result : true
=================================================
Progress: 98


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::qrevaflat (any_tree3) (any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg6:any list), (qrevaflat (any_tree2) ((any1::arg6)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg6 @ any_list1)))
Model : any1: 2, any_list1: (8::(Nil)), any_tree2: Leaf, arg6: (Nil)
Model : any1: 3, any_list1: (Nil), any_tree2: Leaf, arg6: (0::(Nil))
Model : any1: 6, any_list1: (Nil), any_tree2: Leaf, arg6: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000326 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg6:any list), (qrevaflat (any_tree2) ((any1::arg6)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg6 @ any_list1)))
End of Lemma List


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 99


1st goal of : forall (any_tree1:any tree) (any_list1:any list), (revflat (any_tree1) @ any_list1) = qrevaflat (any_tree1) (any_list1)
any_tree1 : any tree
any_tree2 : any tree
any1 : any
any_tree3 : any tree
IH1 : forall (any_list1:any list), (revflat (any_tree2) @ any_list1) = qrevaflat (any_tree2) (any_list1)
IH2 : forall (any_list1:any list), (revflat (any_tree3) @ any_list1) = qrevaflat (any_tree3) (any_list1)
Inductive1 : any_tree1 = Node (any_tree2) (any1) (any_tree3)
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any1::revflat (any_tree3))) @ any_list1) = qrevaflat (any_tree2) ((any1::(revflat (any_tree3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_tree2:any tree) (arg6:any list), (qrevaflat (any_tree2) ((any1::arg6)) @ any_list1) = qrevaflat (any_tree2) ((any1::(arg6 @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:7)
=================================================
Progress: 102


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (qrevaflat (any_tree1) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_tree1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 103


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Leaf) ((any1::(Nil))) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 104


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::(Nil))) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
intro any1(rank:6)
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
intro any_list1(rank:6)
=================================================
Progress: 105


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:6)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH1 in goal at 1(rank:22)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:14)
=================================================
Progress: 106


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 107


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (qrevaflat (any_tree1) ((any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::(Nil))))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:14)
rewrite <- IH2 in goal at 0(rank:14)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH2 in goal at 2(rank:14)
rewrite <- IH2 in goal at 1(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (Leaf) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (Leaf) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(qrevaflat (Leaf) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (Leaf) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree2) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree2(rank:13)
=================================================
Progress: 110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree2) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree2) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Leaf) @ (any1::any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
Base2 : any_tree2 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Leaf) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Leaf) @ (any1::any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Node (any_tree3) (any5) (any_tree4)) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Node (any_tree3) (any5) (any_tree4)) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (Node (any_tree3) (any5) (any_tree4)) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (Node (any_tree3) (any5) (any_tree4)) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
intro any2(rank:12)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any2(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 5, any2: 4, any3: 3, any4: 0, any5: 6, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (0) (Leaf)
Model : any1: 2, any2: 3, any3: 7, any4: 4, any5: 1, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 3, any2: 7, any3: 2, any4: 0, any5: 6, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000873 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree1) ((any5::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree1) @ (any5::revflat (any_tree2))) @ (any1::any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(any4::(qrevaflat (any_tree1) ((any5::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree1) @ (any5::revflat (any_tree2))) @ (any1::any_list1)))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:14)
=================================================
Progress: 119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 1, any2: 0, any3: 8, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 5, any2: 0, any3: 6, any4: 4, any5: 1, any_list1: (0::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 7, any2: 5, any3: 0, any4: 4, any5: 7, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000780 seconds
Result : true
=================================================
Progress: 123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 125


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 8, any2: 1, any3: 0, any4: 4, any5: 4, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 3, any2: 0, any3: 0, any4: 6, any5: 6, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (2) (Node (Leaf) (3) (Leaf))
Model : any1: 0, any2: 8, any3: 0, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001172 seconds
Result : true
=================================================
Progress: 126


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 127


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 8, any2: 8, any3: 1, any4: 3, any5: 1, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 3, any2: 4, any3: 2, any4: 8, any5: 1, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 5, any2: 5, any3: 1, any4: 6, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), any_tree4: Node (Leaf) (0) (Leaf)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001297 seconds
Result : true
=================================================
Progress: 128


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 2, any2: 5, any3: 7, any4: 7, any5: 0, any_list1: (1::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 3, any2: 7, any3: 8, any4: 7, any5: 1, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 8, any2: 1, any3: 7, any4: 7, any5: 0, any_list1: (1::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000800 seconds
Result : true
=================================================
Progress: 129


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:12)
intro any_list1(rank:12)
=================================================
Progress: 130


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 131


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 8, any2: 6, any3: 7, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (1) (Leaf)
Model : any1: 0, any2: 2, any3: 8, any4: 4, any5: 6, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 8, any2: 4, any3: 2, any4: 8, any5: 3, any_list1: (Nil), any_tree3: Node (Node (Node (Leaf) (2) (Leaf)) (4) (Leaf)) (6) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002318 seconds
Result : true
=================================================
Progress: 132


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 133


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 1, any2: 1, any3: 1, any4: 7, any5: 1, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 0, any2: 4, any3: 4, any4: 7, any5: 6, any_list1: (6::(5::(Nil))), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 0, any2: 4, any3: 8, any4: 1, any5: 0, any_list1: (7::(7::(Nil))), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000902 seconds
Result : true
=================================================
Progress: 134


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 7, any2: 3, any3: 2, any4: 4, any5: 4, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 6, any2: 1, any3: 0, any4: 4, any5: 3, any_list1: (4::(Nil)), any_tree3: Node (Leaf) (3) (Leaf), any_tree4: Node (Node (Leaf) (1) (Leaf)) (0) (Node (Leaf) (1) (Node (Leaf) (3) (Leaf)))
Model : any1: 6, any2: 7, any3: 0, any4: 5, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002832 seconds
Result : true
=================================================
Progress: 135


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 136


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 4, any2: 6, any3: 5, any4: 3, any5: 8, any_list1: (7::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 7, any2: 0, any3: 6, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (3) (Leaf)
Model : any1: 8, any2: 7, any3: 2, any4: 2, any5: 4, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001235 seconds
Result : true
=================================================
Progress: 137


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 0, any2: 0, any3: 4, any4: 2, any5: 8, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 2, any2: 5, any3: 3, any4: 8, any5: 0, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 8, any2: 4, any3: 0, any4: 8, any5: 8, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000702 seconds
Result : true
=================================================
Progress: 138


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 6, any2: 0, any3: 0, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 0, any2: 7, any3: 4, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 7, any2: 6, any3: 7, any4: 7, any5: 6, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001184 seconds
Result : true
=================================================
Progress: 139


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12)
=================================================
Progress: 140


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 8, any2: 0, any3: 5, any4: 2, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), any_tree4: Leaf
Model : any1: 4, any2: 4, any3: 1, any4: 8, any5: 2, any_list1: (Nil), any_tree3: Node (Node (Leaf) (5) (Leaf)) (6) (Leaf), any_tree4: Leaf
Model : any1: 2, any2: 7, any3: 5, any4: 1, any5: 7, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Node (Leaf) (0) (Leaf)) (8) (Leaf)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002287 seconds
Result : true
=================================================
Progress: 141


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 7, any2: 0, any3: 5, any4: 2, any5: 0, any_list1: (1::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 3, any2: 2, any3: 2, any4: 0, any5: 5, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 6, any2: 0, any3: 0, any4: 5, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000985 seconds
Result : true
=================================================
Progress: 142


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 0, any2: 3, any3: 3, any4: 3, any5: 1, any_list1: (6::(Nil)), any_tree3: Leaf, any_tree4: Node (Leaf) (2) (Leaf)
Model : any1: 3, any2: 4, any3: 0, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 1, any2: 1, any3: 4, any4: 4, any5: 4, any_list1: (2::(Nil)), any_tree3: Node (Leaf) (1) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001115 seconds
Result : true
=================================================
Progress: 143


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 2, any2: 2, any3: 6, any4: 5, any5: 3, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Node (Leaf) (1) (Leaf)) (7) (Leaf)
Model : any1: 5, any2: 1, any3: 8, any4: 0, any5: 8, any_list1: (5::(Nil)), any_tree3: Leaf, any_tree4: Leaf
Model : any1: 4, any2: 0, any3: 2, any4: 0, any5: 2, any_list1: (Nil), any_tree3: Leaf, any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001329 seconds
Result : true
=================================================
Progress: 144


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_tree2:any tree), (any2::(any3::(qrevaflat (any_tree1) ((any4::qrevaflat (any_tree2) ((any1::(Nil))))) @ any_list1))) = (any2::(any3::((revflat (any_tree1) @ (any4::revflat (any_tree2))) @ (any1::any_list1))))
any_tree1 : any tree
Base1 : any_tree1 = Leaf
any_tree2 : any tree
any_tree3 : any tree
any5 : any
any_tree4 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree3) @ (any1::any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any2::(any3::(any4::(qrevaflat (any_tree4) ((any1::(Nil))) @ any_list1)))) = (any2::(any3::(any4::(revflat (any_tree4) @ (any1::any_list1)))))
Inductive1 : any_tree2 = Node (any_tree3) (any5) (any_tree4)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (any_tree4:any tree), (any2::(any3::(any4::(qrevaflat (any_tree3) ((any5::qrevaflat (any_tree4) ((any1::(Nil))))) @ any_list1)))) = (any2::(any3::(any4::((revflat (any_tree3) @ (any5::revflat (any_tree4))) @ (any1::any_list1)))))
Model : any1: 1, any2: 6, any3: 1, any4: 4, any5: 7, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (0) (Leaf)
Model : any1: 3, any2: 2, any3: 8, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Leaf, any_tree4: Node (Leaf) (2) (Leaf)
Model : any1: 0, any2: 0, any3: 7, any4: 1, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Leaf), any_tree4: Leaf
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001353 seconds
Result : true
=================================================
Progress: 145


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6)
=================================================
Progress: 146


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:6)
intro any_list1(rank:6)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:6)
=================================================
Progress: 148


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
rewrite <- IH1 in goal at 0
intro any_list1
advanced_generalize done
Lemma : forall (any2:any) (any_list1:any list) (arg7:any list) (arg8:any list) (arg9:any list), (((arg8 @ (any2::arg9)) @ arg7) @ any_list1) = ((arg8 @ (any2::(Nil))) @ ((arg9 @ arg7) @ any_list1))
Model : any2: 0, any_list1: (0::(Nil)), arg7: (Nil), arg8: (Nil), arg9: (Nil)
Model : any2: 2, any_list1: (4::(Nil)), arg7: (Nil), arg8: (Nil), arg9: (0::(Nil))
Model : any2: 2, any_list1: (1::(Nil)), arg7: (Nil), arg8: (Nil), arg9: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000580 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (arg7:any list) (arg8:any list) (arg9:any list), (((arg8 @ (any2::arg9)) @ arg7) @ any_list1) = ((arg8 @ (any2::(Nil))) @ ((arg9 @ arg7) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 149


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (arg7:any list) (arg8:any list) (arg9:any list), (((arg8 @ (any2::arg9)) @ arg7) @ any_list1) = ((arg8 @ (any2::(Nil))) @ ((arg9 @ arg7) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 150


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
rewrite <- IH1 in goal at 0
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any2:any) (any_list1:any list) (arg10:any list) (arg11:any list) (arg12:any list), (((arg11 @ (any2::arg12)) @ arg10) @ any_list1) = ((arg11 @ (any2::(Nil))) @ ((arg12 @ arg10) @ any_list1))
Model : any2: 8, any_list1: (Nil), arg10: (Nil), arg11: (Nil), arg12: (Nil)
Model : any2: 7, any_list1: (Nil), arg10: (Nil), arg11: (Nil), arg12: (Nil)
Model : any2: 8, any_list1: (Nil), arg10: (Nil), arg11: (Nil), arg12: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000541 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (arg10:any list) (arg11:any list) (arg12:any list), (((arg11 @ (any2::arg12)) @ arg10) @ any_list1) = ((arg11 @ (any2::(Nil))) @ ((arg12 @ arg10) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 151


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (arg10:any list) (arg11:any list) (arg12:any list), (((arg11 @ (any2::arg12)) @ arg10) @ any_list1) = ((arg11 @ (any2::(Nil))) @ ((arg12 @ arg10) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 152


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 153


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 154


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:8)
=================================================
Progress: 155


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 156


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((Nil) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((Nil) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 157


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((any2::any_list5) @ (any1::any_list4)) @ any_list2) @ any_list1) = (((any2::any_list5) @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:8)
=================================================
Progress: 158


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list4(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 159


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (any2::(((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list4(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 161


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 162


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:9)
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:9)
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 166


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 167


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 169


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 170


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 171


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 172


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 173


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 174


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 177


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 178


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 179


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 180


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 181


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 182


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 183


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 184


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 185


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 186


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 187


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 3
intro any1(rank:6)
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 188


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
any1 : any
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = ((revflat (any_tree2) @ (any2::(Nil))) @ ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 189


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 190


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (Nil)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 191


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (Nil)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 192


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any3::any_list6) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 193


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 194


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 195


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 196


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(Nil))) @ (any3::any_list6)) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 197


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
Base1 : any_list4 = (Nil)
any_list2 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(Nil))) @ any_list6) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any_list6 @ any_list1)))
Inductive2 : any_list2 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((Nil) @ (any3::any_list6)) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::(any_list6 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 198


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 199


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 200


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 201


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 202


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 203


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 204


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 205


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 206


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 207


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 208


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 209


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 210


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::(((any_list5 @ (any1::(any3::any_list6))) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 211


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list), (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 212


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any), (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 213


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::((any_list5 @ (any1::(Nil))) @ (((any3::any_list6) @ any_list2) @ any_list1))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), (((any_list3 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list3 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((any_list5 @ (any1::any_list4)) @ any_list2) @ any_list1) = ((any_list5 @ (any1::(Nil))) @ ((any_list4 @ any_list2) @ any_list1))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
any3 : any
any_list6 : any list
IH2 : forall (any1:any) (any_list1:any list) (any_list2:any list), (any2::(((any_list5 @ (any1::any_list6)) @ any_list2) @ any_list1)) = (any2::((any_list5 @ (any1::(Nil))) @ ((any_list6 @ any_list2) @ any_list1)))
Inductive2 : any_list4 = (any3::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
(any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1)))) = (any2::((any_list5 @ (any1::(Nil))) @ (any3::((any_list6 @ any_list2) @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 214


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg13:any list) (arg14:any list), (((revflat (any_tree2) @ (any2::arg14)) @ arg13) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg14 @ arg13) @ any_list1)))
Model : any2: 3, any_list1: (Nil), any_tree2: Leaf, arg13: (Nil), arg14: (Nil)
Model : any2: 0, any_list1: (Nil), any_tree2: Leaf, arg13: (Nil), arg14: (Nil)
Model : any2: 6, any_list1: (Nil), any_tree2: Leaf, arg13: (Nil), arg14: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000301 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg13:any list) (arg14:any list), (((revflat (any_tree2) @ (any2::arg14)) @ arg13) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg14 @ arg13) @ any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 215


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg13:any list) (arg14:any list), (((revflat (any_tree2) @ (any2::arg14)) @ arg13) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg14 @ arg13) @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 216


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 217


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 218


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 219


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 220


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 221


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 222


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any_list1(rank:9)
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 223


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
rewrite <- IH2 in goal at 0(rank:17)
=================================================
Progress: 224


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 225


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 226


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg15:any list) (arg16:any list), (((revflat (any_tree2) @ (any2::arg16)) @ arg15) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg16 @ arg15) @ any_list1)))
Model : any2: 0, any_list1: (7::(Nil)), any_tree2: Node (Node (Leaf) (2) (Leaf)) (0) (Node (Node (Leaf) (2) (Leaf)) (7) (Leaf)), arg15: (Nil), arg16: (Nil)
Model : any2: 2, any_list1: (Nil), any_tree2: Leaf, arg15: (Nil), arg16: (Nil)
Model : any2: 7, any_list1: (Nil), any_tree2: Node (Leaf) (7) (Node (Leaf) (0) (Node (Leaf) (0) (Leaf))), arg15: (Nil), arg16: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002573 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg15:any list) (arg16:any list), (((revflat (any_tree2) @ (any2::arg16)) @ arg15) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg16 @ arg15) @ any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 227


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg15:any list) (arg16:any list), (((revflat (any_tree2) @ (any2::arg16)) @ arg15) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg16 @ arg15) @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 228


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 229


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 230


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 231


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 232


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 233


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 234


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any_list1(rank:9)
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 235


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
rewrite <- IH2 in goal at 0(rank:17)
=================================================
Progress: 236


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 237


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 238


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg17:any list) (arg18:any list), (((revflat (any_tree2) @ (any2::arg18)) @ arg17) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg18 @ arg17) @ any_list1)))
Model : any2: 0, any_list1: (Nil), any_tree2: Leaf, arg17: (Nil), arg18: (Nil)
Model : any2: 1, any_list1: (Nil), any_tree2: Leaf, arg17: (Nil), arg18: (Nil)
Model : any2: 2, any_list1: (Nil), any_tree2: Leaf, arg17: (Nil), arg18: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000246 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg17:any list) (arg18:any list), (((revflat (any_tree2) @ (any2::arg18)) @ arg17) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg18 @ arg17) @ any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 239


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((revflat (any_tree1) @ (any1::any_list2)) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), ((revflat (any_tree2) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), ((revflat (any_tree3) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ any_list1) = qrevaflat (any_tree2) ((any2::((revflat (any_tree3) @ (any1::(Nil))) @ any_list1)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list1:any list) (any_tree2:any tree) (arg17:any list) (arg18:any list), (((revflat (any_tree2) @ (any2::arg18)) @ arg17) @ any_list1) = qrevaflat (any_tree2) ((any2::((arg18 @ arg17) @ any_list1)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 240


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 241


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(((Nil) @ any_list2) @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 242


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (((revflat (any_tree1) @ (any1::(Nil))) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::(any_list2 @ any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 243


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::((Nil) @ any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:10)
=================================================
Progress: 244


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_tree1:any tree), (((revflat (any_tree1) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree1) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 245


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
Base3 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Leaf) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Leaf) ((any1::any_list1))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 246


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((revflat (Node (any_tree2) (any2) (any_tree3)) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (Node (any_tree2) (any2) (any_tree3)) ((any1::any_list1))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any_list1(rank:9)
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 247


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
rewrite <- IH2 in goal at 0(rank:17)
=================================================
Progress: 248


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 249


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), ((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list) (any_list3:any list), (((revflat (any_tree1) @ (any1::any_list3)) @ any_list2) @ any_list1) = qrevaflat (any_tree1) ((any1::((any_list3 @ any_list2) @ any_list1)))
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (((revflat (any_tree2) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any1::any_list1))
IH2 : forall (any1:any) (any_list1:any list), (((revflat (any_tree3) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree3) ((any1::any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
((((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) ((any1::any_list1))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 250


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6)
=================================================
Progress: 251


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:6)
intro any_list1(rank:6)
=================================================
Progress: 252


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:6)
=================================================
Progress: 253


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (arg19:any list) (arg20:any list), (any1::((arg19 @ (any2::arg20)) @ any_list1)) = (any1::(arg19 @ (any2::(arg20 @ any_list1))))
Model : any1: 6, any2: 5, any_list1: (Nil), arg19: (Nil), arg20: (4::(Nil))
Model : any1: 7, any2: 3, any_list1: (Nil), arg19: (Nil), arg20: (Nil)
Model : any1: 4, any2: 2, any_list1: (Nil), arg19: (Nil), arg20: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000363 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (arg19:any list) (arg20:any list), (any1::((arg19 @ (any2::arg20)) @ any_list1)) = (any1::(arg19 @ (any2::(arg20 @ any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 254


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (arg19:any list) (arg20:any list), (any1::((arg19 @ (any2::arg20)) @ any_list1)) = (any1::(arg19 @ (any2::(arg20 @ any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 255


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (arg21:any list) (arg22:any list), (any1::((arg21 @ (any2::arg22)) @ any_list1)) = (any1::(arg21 @ (any2::(arg22 @ any_list1))))
Model : any1: 5, any2: 2, any_list1: (Nil), arg21: (3::(1::(Nil))), arg22: (Nil)
Model : any1: 6, any2: 4, any_list1: (1::(Nil)), arg21: (Nil), arg22: (1::(4::(3::(Nil))))
Model : any1: 1, any2: 6, any_list1: (Nil), arg21: (7::(Nil)), arg22: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001024 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (arg21:any list) (arg22:any list), (any1::((arg21 @ (any2::arg22)) @ any_list1)) = (any1::(arg21 @ (any2::(arg22 @ any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 256


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (arg21:any list) (arg22:any list), (any1::((arg21 @ (any2::arg22)) @ any_list1)) = (any1::(arg21 @ (any2::(arg22 @ any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 257


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 258


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 259


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 260


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 261


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((Nil) @ (any2::any_list3)) @ any_list1)) = (any1::((Nil) @ (any2::(any_list3 @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 262


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(((any3::any_list4) @ (any2::any_list3)) @ any_list1)) = (any1::((any3::any_list4) @ (any2::(any_list3 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:8)
=================================================
Progress: 263


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 264


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::(any3::((any_list4 @ (any2::any_list3)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list3 @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 265


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 266


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 267


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 268


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 269


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 270


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:8)
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 271


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 272


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 273


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 274


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 275


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 276


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 277


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 278


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 279


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 280


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 281


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 282


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 283


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 284


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 285


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 286


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 3
intro any1(rank:6)
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 287


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any_list1 : any list
any1 : any
---------------------------------------
(any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:14)
rewrite <- lemma3 in goal at 0(rank:14)
=================================================
Progress: 288


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite IH1 in goal at 0(rank:16)
=================================================
Progress: 289


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 290


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 291


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(Nil))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 292


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((Nil) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 293


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 294


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 295


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 296


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 297


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 298


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 299


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 300


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 301


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 302


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 303


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 304


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 305


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::((any_list4 @ (any2::(any4::any_list5))) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 306


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 307


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 308


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::(any_list4 @ (any2::((any4::any_list5) @ any_list1))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (any1::((any_list2 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list2 @ (any2::(any_list3 @ any_list1))))
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ (any2::any_list3)) @ any_list1)) = (any1::(any_list4 @ (any2::(any_list3 @ any_list1))))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any3::((any_list4 @ (any2::any_list5)) @ any_list1))) = (any1::(any3::(any_list4 @ (any2::(any_list5 @ any_list1)))))
Inductive2 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1)))))) = (any1::(any3::(any_list4 @ (any2::(any4::(any_list5 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 309


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (arg23:any list), (any1::((revflat (any_tree2) @ (any2::arg23)) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(arg23 @ any_list1))))
Model : any1: 4, any2: 6, any_list1: (3::(Nil)), any_tree2: Leaf, arg23: (Nil)
Model : any1: 4, any2: 0, any_list1: (Nil), any_tree2: Leaf, arg23: (Nil)
Model : any1: 0, any2: 6, any_list1: (Nil), any_tree2: Node (Leaf) (1) (Leaf), arg23: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000544 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (arg23:any list), (any1::((revflat (any_tree2) @ (any2::arg23)) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(arg23 @ any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 310


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(revflat (any_tree3) @ any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_tree2:any tree) (arg23:any list), (any1::((revflat (any_tree2) @ (any2::arg23)) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::(arg23 @ any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 311


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::((Nil) @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 312


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::((Nil) @ any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:9)
=================================================
Progress: 313


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::((revflat (any_tree1) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Leaf) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Leaf) ((any2::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 314


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Leaf) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Leaf) ((any2::any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Node (any_tree2) (any3) (any_tree3)) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any3) (any_tree3)) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 315


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (Node (any_tree2) (any3) (any_tree3)) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (Node (any_tree2) (any3) (any_tree3)) ((any2::any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro any1(rank:8)
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:24)
rewrite <- IH2 in goal at 0(rank:16)
intro any2(rank:8)
=================================================
Progress: 316


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any2(rank:8)
intro any_list1(rank:8)
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 317


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:24)
rewrite <- IH2 in goal at 0(rank:16)
=================================================
Progress: 318


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 319


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:24)
rewrite <- IH2 in goal at 0(rank:16)
=================================================
Progress: 320


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 321


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 322


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((revflat (any_tree1) @ (any2::any_list2)) @ any_list1)) = (any1::qrevaflat (any_tree1) ((any2::(any_list2 @ any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::((revflat (any_tree3) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree3) ((any2::any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ (any2::(Nil))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) ((any2::any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:24)
=================================================
Progress: 323


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::qrevaflat (any_tree2) ((any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_tree3:any tree) (arg24:any list), (any1::((arg24 @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(arg24 @ (any2::qrevaflat (any_tree3) (any_list1))))
Model : any1: 3, any2: 6, any_list1: (Nil), any_tree3: Leaf, arg24: (Nil)
Model : any1: 5, any2: 6, any_list1: (Nil), any_tree3: Leaf, arg24: (Nil)
Model : any1: 3, any2: 8, any_list1: (Nil), any_tree3: Leaf, arg24: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000330 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (any_tree3:any tree) (arg24:any list), (any1::((arg24 @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(arg24 @ (any2::qrevaflat (any_tree3) (any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 324


1st goal of : forall (any1:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), ((any_list2 @ (any1::revflat (any_tree1))) @ any_list1) = (any_list2 @ (any1::qrevaflat (any_tree1) (any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any2 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree2) @ any_list1)) = (any1::qrevaflat (any_tree2) (any_list1))
IH2 : forall (any1:any) (any_list1:any list), (any1::(revflat (any_tree3) @ any_list1)) = (any1::qrevaflat (any_tree3) (any_list1))
Inductive1 : any_tree1 = Node (any_tree2) (any2) (any_tree3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any1::((revflat (any_tree2) @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(revflat (any_tree2) @ (any2::qrevaflat (any_tree3) (any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_tree3:any tree) (arg24:any list), (any1::((arg24 @ (any2::revflat (any_tree3))) @ any_list1)) = (any1::(arg24 @ (any2::qrevaflat (any_tree3) (any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 325


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(((Nil) @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::((Nil) @ (any2::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 326


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(((Nil) @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::((Nil) @ (any2::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(revflat (any_tree1) @ any_list1))) = (any1::(any2::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:9)
=================================================
Progress: 327


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(revflat (any_tree1) @ any_list1))) = (any1::(any2::qrevaflat (any_tree1) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_tree1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Leaf) @ any_list1))) = (any1::(any2::qrevaflat (Leaf) (any_list1)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 328


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Leaf) @ any_list1))) = (any1::(any2::qrevaflat (Leaf) (any_list1)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Node (any_tree2) (any3) (any_tree3)) @ any_list1))) = (any1::(any2::qrevaflat (Node (any_tree2) (any3) (any_tree3)) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 329


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (Node (any_tree2) (any3) (any_tree3)) @ any_list1))) = (any1::(any2::qrevaflat (Node (any_tree2) (any3) (any_tree3)) (any_list1)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:8)
intro any2(rank:8)
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 330


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:8)
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 331


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 332


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 333


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:8)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 334


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 335


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 336


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg25:any list), (any1::(any2::((arg25 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg25 @ (any3::qrevaflat (any_tree3) (any_list1)))))
Model : any1: 1, any2: 0, any3: 3, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Node (Leaf) (1) (Leaf)), arg25: (Nil)
Model : any1: 7, any2: 3, any3: 0, any_list1: (Nil), any_tree3: Leaf, arg25: (Nil)
Model : any1: 6, any2: 3, any3: 8, any_list1: (Nil), any_tree3: Leaf, arg25: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000549 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg25:any list), (any1::(any2::((arg25 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg25 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 337


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg25:any list), (any1::(any2::((arg25 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg25 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 338


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 339


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg26:any list), (any1::(any2::((arg26 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg26 @ (any3::qrevaflat (any_tree3) (any_list1)))))
Model : any1: 5, any2: 0, any3: 1, any_list1: (1::(Nil)), any_tree3: Leaf, arg26: (Nil)
Model : any1: 5, any2: 0, any3: 6, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg26: (Nil)
Model : any1: 5, any2: 8, any3: 8, any_list1: (Nil), any_tree3: Node (Node (Leaf) (1) (Leaf)) (8) (Leaf), arg26: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001171 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg26:any list), (any1::(any2::((arg26 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg26 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 340


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg26:any list), (any1::(any2::((arg26 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg26 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 341


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg27:any list), (any1::(any2::((arg27 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg27 @ (any3::qrevaflat (any_tree3) (any_list1)))))
Model : any1: 6, any2: 0, any3: 0, any_list1: (6::(Nil)), any_tree3: Leaf, arg27: (Nil)
Model : any1: 0, any2: 2, any3: 2, any_list1: (Nil), any_tree3: Leaf, arg27: (Nil)
Model : any1: 1, any2: 8, any3: 3, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Node (Leaf) (1) (Leaf)), arg27: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000673 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg27:any list), (any1::(any2::((arg27 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg27 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 342


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg27:any list), (any1::(any2::((arg27 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg27 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 343


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) ((any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg28:any list), (any1::(any2::((arg28 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg28 @ (any3::qrevaflat (any_tree3) (any_list1)))))
Model : any1: 8, any2: 6, any3: 1, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg28: (3::(3::(Nil)))
Model : any1: 3, any2: 1, any3: 5, any_list1: (Nil), any_tree3: Node (Node (Node (Leaf) (1) (Leaf)) (4) (Leaf)) (0) (Leaf), arg28: (Nil)
Model : any1: 6, any2: 7, any3: 2, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg28: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001405 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg28:any list), (any1::(any2::((arg28 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg28 @ (any3::qrevaflat (any_tree3) (any_list1)))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 344


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::((any_list2 @ (any2::revflat (any_tree1))) @ any_list1)) = (any1::(any_list2 @ (any2::qrevaflat (any_tree1) (any_list1))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any3 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree2) @ any_list1))) = (any1::(any2::qrevaflat (any_tree2) (any_list1)))
IH2 : forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(revflat (any_tree3) @ any_list1))) = (any1::(any2::qrevaflat (any_tree3) (any_list1)))
Inductive1 : any_tree1 = Node (any_tree2) (any3) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(any1::(any2::((revflat (any_tree2) @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(revflat (any_tree2) @ (any3::qrevaflat (any_tree3) (any_list1)))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree3:any tree) (arg28:any list), (any1::(any2::((arg28 @ (any3::revflat (any_tree3))) @ any_list1))) = (any1::(any2::(arg28 @ (any3::qrevaflat (any_tree3) (any_list1)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 345


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 346


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 347


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 348


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 349


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 350


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 351


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 352


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(((Nil) @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::((Nil) @ (any3::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:11)
=================================================
Progress: 353


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 354


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 355


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 356


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 357


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 358


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 359


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 360


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 361


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 362


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 363


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 364


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 365


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 366


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg29:any list), (any1::(any2::(any3::((arg29 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg29 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 2, any2: 8, any3: 3, any4: 0, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg29: (Nil)
Model : any1: 6, any2: 8, any3: 2, any4: 1, any_list1: (Nil), any_tree3: Leaf, arg29: (2::(0::(Nil)))
Model : any1: 8, any2: 3, any3: 7, any4: 2, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg29: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000812 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg29:any list), (any1::(any2::(any3::((arg29 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg29 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 367


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg29:any list), (any1::(any2::(any3::((arg29 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg29 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 368


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 369


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 370


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 371


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg30:any list), (any1::(any2::(any3::((arg30 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg30 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 6, any2: 4, any3: 5, any4: 2, any_list1: (4::(Nil)), any_tree3: Leaf, arg30: (0::(Nil))
Model : any1: 5, any2: 7, any3: 3, any4: 4, any_list1: (7::(Nil)), any_tree3: Leaf, arg30: (Nil)
Model : any1: 0, any2: 2, any3: 7, any4: 3, any_list1: (3::(Nil)), any_tree3: Leaf, arg30: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000725 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg30:any list), (any1::(any2::(any3::((arg30 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg30 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 372


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg30:any list), (any1::(any2::(any3::((arg30 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg30 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 373


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 374


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg31:any list), (any1::(any2::(any3::((arg31 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg31 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 4, any2: 7, any3: 2, any4: 5, any_list1: (4::(Nil)), any_tree3: Leaf, arg31: (Nil)
Model : any1: 6, any2: 3, any3: 4, any4: 7, any_list1: (Nil), any_tree3: Leaf, arg31: (Nil)
Model : any1: 3, any2: 0, any3: 2, any4: 1, any_list1: (5::(Nil)), any_tree3: Node (Leaf) (0) (Node (Node (Node (Leaf) (0) (Node (Leaf) (6) (Leaf))) (8) (Leaf)) (1) (Node (Leaf) (0) (Leaf))), arg31: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002555 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg31:any list), (any1::(any2::(any3::((arg31 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg31 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 375


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg31:any list), (any1::(any2::(any3::((arg31 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg31 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 376


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg32:any list), (any1::(any2::(any3::((arg32 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg32 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 5, any3: 5, any4: 7, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg32: (Nil)
Model : any1: 0, any2: 5, any3: 6, any4: 0, any_list1: (Nil), any_tree3: Node (Node (Leaf) (8) (Node (Node (Leaf) (3) (Leaf)) (6) (Leaf))) (6) (Leaf), arg32: (Nil)
Model : any1: 2, any2: 0, any3: 0, any4: 6, any_list1: (Nil), any_tree3: Leaf, arg32: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001973 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg32:any list), (any1::(any2::(any3::((arg32 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg32 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 377


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg32:any list), (any1::(any2::(any3::((arg32 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg32 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 378


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 379


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg33:any list), (any1::(any2::(any3::((arg33 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg33 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 6, any2: 0, any3: 0, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg33: (Nil)
Model : any1: 6, any2: 5, any3: 0, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg33: (0::(Nil))
Model : any1: 6, any2: 8, any3: 6, any4: 8, any_list1: (Nil), any_tree3: Leaf, arg33: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000477 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg33:any list), (any1::(any2::(any3::((arg33 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg33 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 380


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg33:any list), (any1::(any2::(any3::((arg33 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg33 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 381


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg34:any list), (any1::(any2::(any3::((arg34 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg34 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 1, any2: 8, any3: 3, any4: 0, any_list1: (Nil), any_tree3: Node (Node (Leaf) (7) (Leaf)) (6) (Leaf), arg34: (Nil)
Model : any1: 3, any2: 1, any3: 5, any4: 4, any_list1: (Nil), any_tree3: Node (Node (Leaf) (6) (Leaf)) (4) (Leaf), arg34: (Nil)
Model : any1: 6, any2: 7, any3: 0, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg34: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001406 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg34:any list), (any1::(any2::(any3::((arg34 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg34 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 382


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg34:any list), (any1::(any2::(any3::((arg34 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg34 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 383


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg35:any list), (any1::(any2::(any3::((arg35 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg35 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 7, any3: 5, any4: 7, any_list1: (Nil), any_tree3: Leaf, arg35: (Nil)
Model : any1: 0, any2: 0, any3: 7, any4: 0, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg35: (Nil)
Model : any1: 8, any2: 6, any3: 1, any4: 6, any_list1: (Nil), any_tree3: Leaf, arg35: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000725 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg35:any list), (any1::(any2::(any3::((arg35 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg35 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 384


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg35:any list), (any1::(any2::(any3::((arg35 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg35 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 385


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg36:any list), (any1::(any2::(any3::((arg36 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg36 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 3, any3: 6, any4: 7, any_list1: (Nil), any_tree3: Node (Node (Leaf) (5) (Leaf)) (0) (Leaf), arg36: (5::(Nil))
Model : any1: 0, any2: 6, any3: 3, any4: 2, any_list1: (Nil), any_tree3: Leaf, arg36: (Nil)
Model : any1: 6, any2: 4, any3: 0, any4: 2, any_list1: (Nil), any_tree3: Node (Node (Leaf) (2) (Leaf)) (7) (Leaf), arg36: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001362 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg36:any list), (any1::(any2::(any3::((arg36 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg36 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 386


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg36:any list), (any1::(any2::(any3::((arg36 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg36 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 387


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 388


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 389


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 390


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 391


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 392


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 393


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 394


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 395


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 396


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 397


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 398


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 399


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 400


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg37:any list), (any1::(any2::(any3::((arg37 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg37 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 5, any3: 4, any4: 0, any_list1: (4::(Nil)), any_tree3: Leaf, arg37: (Nil)
Model : any1: 0, any2: 8, any3: 0, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg37: (Nil)
Model : any1: 5, any2: 4, any3: 6, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg37: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000409 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg37:any list), (any1::(any2::(any3::((arg37 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg37 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 401


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg37:any list), (any1::(any2::(any3::((arg37 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg37 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 402


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 403


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 404


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 405


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg38:any list), (any1::(any2::(any3::((arg38 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg38 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 5, any2: 2, any3: 5, any4: 2, any_list1: (Nil), any_tree3: Leaf, arg38: (Nil)
Model : any1: 1, any2: 0, any3: 5, any4: 2, any_list1: (Nil), any_tree3: Leaf, arg38: (Nil)
Model : any1: 1, any2: 6, any3: 7, any4: 7, any_list1: (Nil), any_tree3: Leaf, arg38: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000366 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg38:any list), (any1::(any2::(any3::((arg38 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg38 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 406


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg38:any list), (any1::(any2::(any3::((arg38 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg38 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 407


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 408


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg39:any list), (any1::(any2::(any3::((arg39 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg39 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 2, any3: 0, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg39: (Nil)
Model : any1: 2, any2: 8, any3: 6, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg39: (Nil)
Model : any1: 2, any2: 7, any3: 0, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg39: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000439 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg39:any list), (any1::(any2::(any3::((arg39 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg39 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 409


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg39:any list), (any1::(any2::(any3::((arg39 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg39 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 410


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg40:any list), (any1::(any2::(any3::((arg40 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg40 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 5, any3: 0, any4: 7, any_list1: (3::(Nil)), any_tree3: Leaf, arg40: (Nil)
Model : any1: 4, any2: 7, any3: 8, any4: 1, any_list1: (Nil), any_tree3: Leaf, arg40: (Nil)
Model : any1: 5, any2: 6, any3: 0, any4: 3, any_list1: (3::(8::(Nil))), any_tree3: Node (Leaf) (6) (Leaf), arg40: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000942 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg40:any list), (any1::(any2::(any3::((arg40 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg40 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 411


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg40:any list), (any1::(any2::(any3::((arg40 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg40 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 412


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 413


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg41:any list), (any1::(any2::(any3::((arg41 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg41 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 4, any2: 3, any3: 0, any4: 8, any_list1: (Nil), any_tree3: Leaf, arg41: (Nil)
Model : any1: 4, any2: 2, any3: 1, any4: 4, any_list1: (2::(Nil)), any_tree3: Leaf, arg41: (Nil)
Model : any1: 5, any2: 4, any3: 2, any4: 1, any_list1: (Nil), any_tree3: Leaf, arg41: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000483 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg41:any list), (any1::(any2::(any3::((arg41 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg41 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 414


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg41:any list), (any1::(any2::(any3::((arg41 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg41 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 415


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg42:any list), (any1::(any2::(any3::((arg42 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg42 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 7, any2: 7, any3: 6, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg42: (Nil)
Model : any1: 0, any2: 3, any3: 5, any4: 7, any_list1: (Nil), any_tree3: Node (Node (Leaf) (2) (Leaf)) (2) (Leaf), arg42: (Nil)
Model : any1: 4, any2: 7, any3: 1, any4: 5, any_list1: (3::(0::(Nil))), any_tree3: Leaf, arg42: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000879 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg42:any list), (any1::(any2::(any3::((arg42 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg42 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 416


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg42:any list), (any1::(any2::(any3::((arg42 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg42 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 417


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg43:any list), (any1::(any2::(any3::((arg43 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg43 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 8, any2: 3, any3: 7, any4: 8, any_list1: (7::(6::(Nil))), any_tree3: Leaf, arg43: (Nil)
Model : any1: 0, any2: 5, any3: 2, any4: 2, any_list1: (2::(Nil)), any_tree3: Node (Node (Leaf) (0) (Node (Leaf) (6) (Leaf))) (0) (Leaf), arg43: (Nil)
Model : any1: 5, any2: 1, any3: 4, any4: 0, any_list1: (Nil), any_tree3: Node (Leaf) (1) (Leaf), arg43: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001605 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg43:any list), (any1::(any2::(any3::((arg43 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg43 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 418


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg43:any list), (any1::(any2::(any3::((arg43 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg43 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 419


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg44:any list), (any1::(any2::(any3::((arg44 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg44 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 7, any2: 6, any3: 5, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg44: (Nil)
Model : any1: 4, any2: 3, any3: 7, any4: 8, any_list1: (Nil), any_tree3: Leaf, arg44: (Nil)
Model : any1: 0, any2: 7, any3: 6, any4: 3, any_list1: (Nil), any_tree3: Leaf, arg44: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000437 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg44:any list), (any1::(any2::(any3::((arg44 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg44 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 420


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg44:any list), (any1::(any2::(any3::((arg44 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg44 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 421


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 422


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 423


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 424


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 425


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 426


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 427


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 428


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 429


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 430


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 431


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 432


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 433


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 434


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg45:any list), (any1::(any2::(any3::((arg45 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg45 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 3, any2: 4, any3: 3, any4: 0, any_list1: (Nil), any_tree3: Node (Node (Leaf) (4) (Leaf)) (5) (Leaf), arg45: (Nil)
Model : any1: 0, any2: 2, any3: 6, any4: 4, any_list1: (1::(Nil)), any_tree3: Leaf, arg45: (Nil)
Model : any1: 0, any2: 4, any3: 7, any4: 2, any_list1: (Nil), any_tree3: Leaf, arg45: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000799 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg45:any list), (any1::(any2::(any3::((arg45 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg45 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 435


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg45:any list), (any1::(any2::(any3::((arg45 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg45 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 436


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 437


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 438


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 439


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg46:any list), (any1::(any2::(any3::((arg46 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg46 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 2, any2: 3, any3: 1, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg46: (Nil)
Model : any1: 4, any2: 4, any3: 0, any4: 3, any_list1: (Nil), any_tree3: Leaf, arg46: (Nil)
Model : any1: 5, any2: 8, any3: 1, any4: 1, any_list1: (Nil), any_tree3: Leaf, arg46: (4::(0::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000505 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg46:any list), (any1::(any2::(any3::((arg46 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg46 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 440


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg46:any list), (any1::(any2::(any3::((arg46 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg46 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 441


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 442


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg47:any list), (any1::(any2::(any3::((arg47 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg47 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 3, any2: 1, any3: 7, any4: 6, any_list1: (Nil), any_tree3: Leaf, arg47: (Nil)
Model : any1: 3, any2: 4, any3: 8, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg47: (Nil)
Model : any1: 4, any2: 7, any3: 4, any4: 5, any_list1: (5::(Nil)), any_tree3: Leaf, arg47: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000428 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg47:any list), (any1::(any2::(any3::((arg47 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg47 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 443


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg47:any list), (any1::(any2::(any3::((arg47 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg47 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 444


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg48:any list), (any1::(any2::(any3::((arg48 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg48 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 7, any3: 7, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg48: (Nil)
Model : any1: 0, any2: 2, any3: 4, any4: 1, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg48: (0::(Nil))
Model : any1: 0, any2: 1, any3: 8, any4: 1, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), arg48: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000698 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg48:any list), (any1::(any2::(any3::((arg48 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg48 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 445


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg48:any list), (any1::(any2::(any3::((arg48 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg48 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 446


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 447


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg49:any list), (any1::(any2::(any3::((arg49 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg49 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 5, any2: 7, any3: 5, any4: 3, any_list1: (Nil), any_tree3: Leaf, arg49: (Nil)
Model : any1: 0, any2: 5, any3: 6, any4: 0, any_list1: (0::(Nil)), any_tree3: Leaf, arg49: (Nil)
Model : any1: 0, any2: 8, any3: 8, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg49: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000430 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg49:any list), (any1::(any2::(any3::((arg49 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg49 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 448


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg49:any list), (any1::(any2::(any3::((arg49 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg49 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 449


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg50:any list), (any1::(any2::(any3::((arg50 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg50 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 3, any2: 1, any3: 0, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg50: (2::(Nil))
Model : any1: 1, any2: 0, any3: 7, any4: 1, any_list1: (6::(Nil)), any_tree3: Leaf, arg50: (1::(Nil))
Model : any1: 2, any2: 8, any3: 0, any4: 8, any_list1: (Nil), any_tree3: Leaf, arg50: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000677 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg50:any list), (any1::(any2::(any3::((arg50 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg50 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 450


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg50:any list), (any1::(any2::(any3::((arg50 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg50 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 451


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg51:any list), (any1::(any2::(any3::((arg51 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg51 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 8, any2: 0, any3: 6, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg51: (Nil)
Model : any1: 8, any2: 2, any3: 6, any4: 3, any_list1: (Nil), any_tree3: Leaf, arg51: (Nil)
Model : any1: 7, any2: 0, any3: 6, any4: 3, any_list1: (4::(Nil)), any_tree3: Leaf, arg51: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000468 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg51:any list), (any1::(any2::(any3::((arg51 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg51 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 452


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg51:any list), (any1::(any2::(any3::((arg51 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg51 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 453


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg52:any list), (any1::(any2::(any3::((arg52 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg52 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 3, any2: 8, any3: 8, any4: 1, any_list1: (Nil), any_tree3: Leaf, arg52: (Nil)
Model : any1: 0, any2: 5, any3: 1, any4: 6, any_list1: (Nil), any_tree3: Leaf, arg52: (Nil)
Model : any1: 0, any2: 6, any3: 5, any4: 6, any_list1: (3::(Nil)), any_tree3: Leaf, arg52: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000630 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg52:any list), (any1::(any2::(any3::((arg52 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg52 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 454


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg52:any list), (any1::(any2::(any3::((arg52 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg52 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 455


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(revflat (any_tree1) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree1) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_tree1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 456


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Leaf) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Leaf) (any_list1))))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 457


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (Node (any_tree2) (any4) (any_tree3)) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (Node (any_tree2) (any4) (any_tree3)) (any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
intro any2(rank:10)
=================================================
Progress: 458


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:10)
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 459


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 460


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 461


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 462


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any3(rank:10)
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 463


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 464


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 465


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 466


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 467


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 468


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg53:any list), (any1::(any2::(any3::((arg53 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg53 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 1, any2: 8, any3: 0, any4: 4, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), arg53: (Nil)
Model : any1: 0, any2: 8, any3: 7, any4: 3, any_list1: (Nil), any_tree3: Leaf, arg53: (Nil)
Model : any1: 0, any2: 0, any3: 1, any4: 4, any_list1: (8::(4::(1::(7::(3::(8::(Nil))))))), any_tree3: Node (Leaf) (5) (Leaf), arg53: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001288 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg53:any list), (any1::(any2::(any3::((arg53 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg53 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 469


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg53:any list), (any1::(any2::(any3::((arg53 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg53 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 470


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:10)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 471


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 472


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 473


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg54:any list), (any1::(any2::(any3::((arg54 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg54 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 3, any2: 4, any3: 2, any4: 1, any_list1: (Nil), any_tree3: Leaf, arg54: (5::(8::(Nil)))
Model : any1: 0, any2: 4, any3: 4, any4: 8, any_list1: (6::(Nil)), any_tree3: Leaf, arg54: (Nil)
Model : any1: 5, any2: 4, any3: 0, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg54: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000787 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg54:any list), (any1::(any2::(any3::((arg54 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg54 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 474


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg54:any list), (any1::(any2::(any3::((arg54 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg54 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 475


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 476


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg55:any list), (any1::(any2::(any3::((arg55 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg55 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 6, any2: 8, any3: 2, any4: 0, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), arg55: (Nil)
Model : any1: 6, any2: 5, any3: 4, any4: 2, any_list1: (Nil), any_tree3: Leaf, arg55: (7::(Nil))
Model : any1: 6, any2: 3, any3: 8, any4: 4, any_list1: (0::(Nil)), any_tree3: Leaf, arg55: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000735 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg55:any list), (any1::(any2::(any3::((arg55 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg55 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 477


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg55:any list), (any1::(any2::(any3::((arg55 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg55 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 478


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg56:any list), (any1::(any2::(any3::((arg56 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg56 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 7, any2: 6, any3: 0, any4: 8, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg56: (2::(Nil))
Model : any1: 3, any2: 0, any3: 8, any4: 1, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Node (Node (Leaf) (0) (Leaf)) (5) (Leaf)), arg56: (Nil)
Model : any1: 2, any2: 1, any3: 7, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg56: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001251 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg56:any list), (any1::(any2::(any3::((arg56 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg56 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 479


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg56:any list), (any1::(any2::(any3::((arg56 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg56 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 480


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10)
=================================================
Progress: 481


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg57:any list), (any1::(any2::(any3::((arg57 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg57 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 2, any2: 5, any3: 0, any4: 4, any_list1: (Nil), any_tree3: Leaf, arg57: (Nil)
Model : any1: 6, any2: 2, any3: 8, any4: 1, any_list1: (Nil), any_tree3: Leaf, arg57: (Nil)
Model : any1: 1, any2: 0, any3: 6, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg57: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000319 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg57:any list), (any1::(any2::(any3::((arg57 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg57 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 482


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg57:any list), (any1::(any2::(any3::((arg57 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg57 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 483


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg58:any list), (any1::(any2::(any3::((arg58 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg58 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 3, any2: 5, any3: 4, any4: 7, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg58: (2::(Nil))
Model : any1: 5, any2: 3, any3: 5, any4: 5, any_list1: (0::(Nil)), any_tree3: Leaf, arg58: (Nil)
Model : any1: 0, any2: 0, any3: 3, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg58: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000801 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg58:any list), (any1::(any2::(any3::((arg58 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg58 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 484


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg58:any list), (any1::(any2::(any3::((arg58 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg58 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 485


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg59:any list), (any1::(any2::(any3::((arg59 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg59 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 8, any2: 3, any3: 6, any4: 2, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg59: (Nil)
Model : any1: 0, any2: 6, any3: 8, any4: 8, any_list1: (Nil), any_tree3: Leaf, arg59: (Nil)
Model : any1: 5, any2: 0, any3: 6, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg59: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000612 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg59:any list), (any1::(any2::(any3::((arg59 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg59 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 486


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg59:any list), (any1::(any2::(any3::((arg59 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg59 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 487


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) ((any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg60:any list), (any1::(any2::(any3::((arg60 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg60 @ (any4::qrevaflat (any_tree3) (any_list1))))))
Model : any1: 0, any2: 8, any3: 3, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg60: (8::(Nil))
Model : any1: 2, any2: 7, any3: 0, any4: 0, any_list1: (Nil), any_tree3: Leaf, arg60: (Nil)
Model : any1: 1, any2: 4, any3: 6, any4: 5, any_list1: (Nil), any_tree3: Leaf, arg60: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000656 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg60:any list), (any1::(any2::(any3::((arg60 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg60 @ (any4::qrevaflat (any_tree3) (any_list1))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 488


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::((any_list2 @ (any3::revflat (any_tree1))) @ any_list1))) = (any1::(any2::(any_list2 @ (any3::qrevaflat (any_tree1) (any_list1)))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any4 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree2) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree2) (any_list1))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(revflat (any_tree3) @ any_list1)))) = (any1::(any2::(any3::qrevaflat (any_tree3) (any_list1))))
Inductive1 : any_tree1 = Node (any_tree2) (any4) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::((revflat (any_tree2) @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(revflat (any_tree2) @ (any4::qrevaflat (any_tree3) (any_list1))))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree3:any tree) (arg60:any list), (any1::(any2::(any3::((arg60 @ (any4::revflat (any_tree3))) @ any_list1)))) = (any1::(any2::(any3::(arg60 @ (any4::qrevaflat (any_tree3) (any_list1))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 489


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 490


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 491


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 492


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 493


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 494


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 495


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 496


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 497


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 498


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 499


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 500


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 501


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 502


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 503


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 504


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 505


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 506


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 507


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 508


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 509


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 510


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 511


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 512


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 513


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 514


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 515


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 516


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 517


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 518


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 519


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 520


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 521


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 522


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 523


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 524


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 525


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 526


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 527


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 528


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 529


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 530


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 531


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 532


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 533


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 534


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 535


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 536


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 537


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 538


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 539


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 540


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 541


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 542


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 543


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 544


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 545


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 546


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 547


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 548


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 549


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 550


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 551


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 552


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(((Nil) @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::((Nil) @ (any4::qrevaflat (any_tree1) (any_list1))))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_tree1(rank:13)
=================================================
Progress: 553


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 554


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 555


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 556


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 557


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 558


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 559


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 560


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 561


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 562


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 563


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 564


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 565


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 566


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 567


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 568


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 569


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 570


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 571


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg61:any list), (any1::(any2::(any3::(any4::((arg61 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg61 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 7, any3: 5, any4: 0, any5: 1, any_list1: (0::(0::(Nil))), any_tree3: Node (Leaf) (1) (Node (Leaf) (8) (Node (Node (Node (Node (Leaf) (1) (Leaf)) (6) (Leaf)) (4) (Leaf)) (6) (Leaf))), arg61: (Nil)
Model : any1: 3, any2: 4, any3: 8, any4: 4, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg61: (Nil)
Model : any1: 0, any2: 8, any3: 4, any4: 4, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg61: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.003066 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg61:any list), (any1::(any2::(any3::(any4::((arg61 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg61 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 572


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg61:any list), (any1::(any2::(any3::(any4::((arg61 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg61 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 573


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 574


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 575


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 576


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 577


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 578


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 579


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg62:any list), (any1::(any2::(any3::(any4::((arg62 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg62 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 7, any3: 1, any4: 8, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg62: (Nil)
Model : any1: 3, any2: 2, any3: 4, any4: 4, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (2) (Leaf), arg62: (Nil)
Model : any1: 8, any2: 0, any3: 3, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg62: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000501 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg62:any list), (any1::(any2::(any3::(any4::((arg62 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg62 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 580


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg62:any list), (any1::(any2::(any3::(any4::((arg62 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg62 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 581


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 582


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 583


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 584


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg63:any list), (any1::(any2::(any3::(any4::((arg63 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg63 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 2, any3: 3, any4: 3, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg63: (Nil)
Model : any1: 0, any2: 0, any3: 5, any4: 0, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg63: (4::(Nil))
Model : any1: 5, any2: 7, any3: 7, any4: 0, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg63: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000596 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg63:any list), (any1::(any2::(any3::(any4::((arg63 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg63 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 585


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg63:any list), (any1::(any2::(any3::(any4::((arg63 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg63 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 586


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 587


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg64:any list), (any1::(any2::(any3::(any4::((arg64 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg64 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 3, any3: 5, any4: 0, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg64: (Nil)
Model : any1: 0, any2: 0, any3: 1, any4: 2, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg64: (Nil)
Model : any1: 1, any2: 2, any3: 5, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg64: (4::(1::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000784 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg64:any list), (any1::(any2::(any3::(any4::((arg64 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg64 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 588


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg64:any list), (any1::(any2::(any3::(any4::((arg64 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg64 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 589


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg65:any list), (any1::(any2::(any3::(any4::((arg65 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg65 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 7, any3: 0, any4: 7, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg65: (Nil)
Model : any1: 5, any2: 6, any3: 3, any4: 2, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg65: (Nil)
Model : any1: 6, any2: 4, any3: 3, any4: 7, any5: 2, any_list1: (0::(Nil)), any_tree3: Leaf, arg65: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000422 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg65:any list), (any1::(any2::(any3::(any4::((arg65 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg65 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 590


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg65:any list), (any1::(any2::(any3::(any4::((arg65 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg65 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 591


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 592


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 593


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 594


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg66:any list), (any1::(any2::(any3::(any4::((arg66 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg66 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 8, any3: 4, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg66: (Nil)
Model : any1: 0, any2: 3, any3: 6, any4: 5, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg66: (Nil)
Model : any1: 0, any2: 5, any3: 1, any4: 1, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg66: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000495 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg66:any list), (any1::(any2::(any3::(any4::((arg66 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg66 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 595


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg66:any list), (any1::(any2::(any3::(any4::((arg66 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg66 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 596


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 597


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg67:any list), (any1::(any2::(any3::(any4::((arg67 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg67 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 1, any3: 8, any4: 0, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg67: (Nil)
Model : any1: 0, any2: 4, any3: 5, any4: 7, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg67: (Nil)
Model : any1: 6, any2: 2, any3: 1, any4: 6, any5: 6, any_list1: (Nil), any_tree3: Node (Node (Leaf) (6) (Leaf)) (0) (Leaf), arg67: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000865 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg67:any list), (any1::(any2::(any3::(any4::((arg67 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg67 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 598


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg67:any list), (any1::(any2::(any3::(any4::((arg67 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg67 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 599


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg68:any list), (any1::(any2::(any3::(any4::((arg68 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg68 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 8, any3: 0, any4: 0, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg68: (Nil)
Model : any1: 4, any2: 8, any3: 5, any4: 8, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg68: (8::(Nil))
Model : any1: 2, any2: 2, any3: 5, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Node (Node (Leaf) (0) (Leaf)) (0) (Leaf), arg68: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000935 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg68:any list), (any1::(any2::(any3::(any4::((arg68 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg68 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 600


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg68:any list), (any1::(any2::(any3::(any4::((arg68 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg68 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 601


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 602


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg69:any list), (any1::(any2::(any3::(any4::((arg69 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg69 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 8, any3: 2, any4: 8, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg69: (Nil)
Model : any1: 6, any2: 0, any3: 3, any4: 0, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg69: (Nil)
Model : any1: 8, any2: 2, any3: 2, any4: 6, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg69: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000560 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg69:any list), (any1::(any2::(any3::(any4::((arg69 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg69 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 603


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg69:any list), (any1::(any2::(any3::(any4::((arg69 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg69 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 604


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg70:any list), (any1::(any2::(any3::(any4::((arg70 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg70 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 2, any3: 0, any4: 0, any5: 6, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Leaf), arg70: (Nil)
Model : any1: 2, any2: 7, any3: 6, any4: 0, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg70: (Nil)
Model : any1: 8, any2: 7, any3: 5, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg70: (4::(5::(3::(Nil))))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001216 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg70:any list), (any1::(any2::(any3::(any4::((arg70 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg70 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 605


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg70:any list), (any1::(any2::(any3::(any4::((arg70 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg70 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 606


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg71:any list), (any1::(any2::(any3::(any4::((arg71 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg71 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 0, any3: 2, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg71: (Nil)
Model : any1: 0, any2: 0, any3: 8, any4: 7, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg71: (Nil)
Model : any1: 1, any2: 8, any3: 0, any4: 0, any5: 2, any_list1: (Nil), any_tree3: Node (Node (Leaf) (0) (Leaf)) (3) (Node (Leaf) (1) (Leaf)), arg71: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000791 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg71:any list), (any1::(any2::(any3::(any4::((arg71 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg71 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 607


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg71:any list), (any1::(any2::(any3::(any4::((arg71 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg71 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 608


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 609


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg72:any list), (any1::(any2::(any3::(any4::((arg72 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg72 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 5, any3: 7, any4: 1, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg72: (Nil)
Model : any1: 6, any2: 1, any3: 0, any4: 3, any5: 1, any_list1: (Nil), any_tree3: Node (Node (Leaf) (3) (Leaf)) (5) (Leaf), arg72: (Nil)
Model : any1: 0, any2: 1, any3: 1, any4: 2, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg72: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000797 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg72:any list), (any1::(any2::(any3::(any4::((arg72 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg72 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 610


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg72:any list), (any1::(any2::(any3::(any4::((arg72 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg72 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 611


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg73:any list), (any1::(any2::(any3::(any4::((arg73 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg73 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 0, any3: 5, any4: 5, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg73: (Nil)
Model : any1: 7, any2: 3, any3: 2, any4: 8, any5: 4, any_list1: (2::(Nil)), any_tree3: Leaf, arg73: (Nil)
Model : any1: 3, any2: 0, any3: 7, any4: 2, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg73: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000534 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg73:any list), (any1::(any2::(any3::(any4::((arg73 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg73 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 612


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg73:any list), (any1::(any2::(any3::(any4::((arg73 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg73 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 613


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg74:any list), (any1::(any2::(any3::(any4::((arg74 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg74 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 7, any3: 1, any4: 6, any5: 1, any_list1: (8::(Nil)), any_tree3: Leaf, arg74: (Nil)
Model : any1: 4, any2: 7, any3: 2, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg74: (5::(0::(Nil)))
Model : any1: 2, any2: 6, any3: 6, any4: 8, any5: 1, any_list1: (8::(Nil)), any_tree3: Leaf, arg74: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000711 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg74:any list), (any1::(any2::(any3::(any4::((arg74 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg74 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 614


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg74:any list), (any1::(any2::(any3::(any4::((arg74 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg74 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 615


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg75:any list), (any1::(any2::(any3::(any4::((arg75 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg75 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 4, any3: 0, any4: 5, any5: 2, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Leaf), arg75: (Nil)
Model : any1: 0, any2: 0, any3: 7, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg75: (Nil)
Model : any1: 0, any2: 0, any3: 0, any4: 8, any5: 6, any_list1: (Nil), any_tree3: Node (Node (Leaf) (5) (Leaf)) (1) (Leaf), arg75: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000851 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg75:any list), (any1::(any2::(any3::(any4::((arg75 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg75 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 616


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg75:any list), (any1::(any2::(any3::(any4::((arg75 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg75 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 617


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg76:any list), (any1::(any2::(any3::(any4::((arg76 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg76 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 6, any3: 8, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg76: (Nil)
Model : any1: 0, any2: 6, any3: 6, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg76: (Nil)
Model : any1: 5, any2: 6, any3: 6, any4: 1, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg76: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000470 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg76:any list), (any1::(any2::(any3::(any4::((arg76 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg76 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 618


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg76:any list), (any1::(any2::(any3::(any4::((arg76 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg76 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 619


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 620


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 621


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 622


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 623


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 624


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 625


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 626


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 627


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 628


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 629


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 630


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 631


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 632


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 633


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 634


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 635


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 636


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 637


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg77:any list), (any1::(any2::(any3::(any4::((arg77 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg77 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 7, any3: 4, any4: 4, any5: 1, any_list1: (1::(Nil)), any_tree3: Leaf, arg77: (Nil)
Model : any1: 6, any2: 4, any3: 6, any4: 4, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg77: (Nil)
Model : any1: 5, any2: 6, any3: 0, any4: 8, any5: 1, any_list1: (7::(Nil)), any_tree3: Leaf, arg77: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000630 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg77:any list), (any1::(any2::(any3::(any4::((arg77 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg77 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 638


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg77:any list), (any1::(any2::(any3::(any4::((arg77 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg77 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 639


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 640


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 641


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 642


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 643


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 644


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 645


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg78:any list), (any1::(any2::(any3::(any4::((arg78 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg78 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 4, any3: 2, any4: 6, any5: 2, any_list1: (Nil), any_tree3: Node (Node (Leaf) (0) (Leaf)) (1) (Leaf), arg78: (Nil)
Model : any1: 0, any2: 0, any3: 1, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg78: (Nil)
Model : any1: 2, any2: 7, any3: 4, any4: 6, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg78: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000733 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg78:any list), (any1::(any2::(any3::(any4::((arg78 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg78 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 646


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg78:any list), (any1::(any2::(any3::(any4::((arg78 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg78 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 647


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 648


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 649


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 650


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg79:any list), (any1::(any2::(any3::(any4::((arg79 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg79 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 4, any3: 0, any4: 7, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg79: (Nil)
Model : any1: 7, any2: 2, any3: 1, any4: 5, any5: 3, any_list1: (5::(Nil)), any_tree3: Node (Leaf) (8) (Leaf), arg79: (Nil)
Model : any1: 3, any2: 0, any3: 4, any4: 0, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg79: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000680 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg79:any list), (any1::(any2::(any3::(any4::((arg79 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg79 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 651


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg79:any list), (any1::(any2::(any3::(any4::((arg79 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg79 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 652


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 653


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg80:any list), (any1::(any2::(any3::(any4::((arg80 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg80 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 7, any3: 0, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg80: (1::(Nil))
Model : any1: 2, any2: 0, any3: 8, any4: 8, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg80: (Nil)
Model : any1: 8, any2: 5, any3: 5, any4: 8, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Leaf), arg80: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000695 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg80:any list), (any1::(any2::(any3::(any4::((arg80 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg80 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 654


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg80:any list), (any1::(any2::(any3::(any4::((arg80 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg80 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 655


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg81:any list), (any1::(any2::(any3::(any4::((arg81 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg81 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 1, any3: 0, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg81: (Nil)
Model : any1: 6, any2: 1, any3: 4, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg81: (Nil)
Model : any1: 6, any2: 1, any3: 5, any4: 0, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg81: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000517 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg81:any list), (any1::(any2::(any3::(any4::((arg81 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg81 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 656


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg81:any list), (any1::(any2::(any3::(any4::((arg81 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg81 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 657


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 658


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 659


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 660


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg82:any list), (any1::(any2::(any3::(any4::((arg82 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg82 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 3, any3: 5, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg82: (Nil)
Model : any1: 3, any2: 1, any3: 3, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Node (Leaf) (3) (Node (Leaf) (7) (Leaf))), arg82: (Nil)
Model : any1: 6, any2: 4, any3: 3, any4: 3, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (2) (Leaf), arg82: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001230 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg82:any list), (any1::(any2::(any3::(any4::((arg82 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg82 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 661


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg82:any list), (any1::(any2::(any3::(any4::((arg82 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg82 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 662


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 663


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg83:any list), (any1::(any2::(any3::(any4::((arg83 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg83 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 2, any3: 6, any4: 2, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg83: (Nil)
Model : any1: 3, any2: 2, any3: 5, any4: 0, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg83: (0::(Nil))
Model : any1: 4, any2: 2, any3: 1, any4: 4, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg83: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000510 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg83:any list), (any1::(any2::(any3::(any4::((arg83 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg83 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 664


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg83:any list), (any1::(any2::(any3::(any4::((arg83 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg83 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 665


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg84:any list), (any1::(any2::(any3::(any4::((arg84 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg84 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 2, any3: 5, any4: 2, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg84: (Nil)
Model : any1: 0, any2: 3, any3: 4, any4: 0, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg84: (Nil)
Model : any1: 4, any2: 7, any3: 4, any4: 7, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg84: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000652 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg84:any list), (any1::(any2::(any3::(any4::((arg84 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg84 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 666


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg84:any list), (any1::(any2::(any3::(any4::((arg84 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg84 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 667


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 668


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg85:any list), (any1::(any2::(any3::(any4::((arg85 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg85 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 5, any3: 8, any4: 1, any5: 4, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg85: (Nil)
Model : any1: 1, any2: 7, any3: 2, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg85: (Nil)
Model : any1: 0, any2: 1, any3: 4, any4: 5, any5: 7, any_list1: (0::(Nil)), any_tree3: Leaf, arg85: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000592 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg85:any list), (any1::(any2::(any3::(any4::((arg85 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg85 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 669


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg85:any list), (any1::(any2::(any3::(any4::((arg85 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg85 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 670


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg86:any list), (any1::(any2::(any3::(any4::((arg86 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg86 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 6, any3: 3, any4: 4, any5: 2, any_list1: (3::(Nil)), any_tree3: Leaf, arg86: (Nil)
Model : any1: 1, any2: 6, any3: 5, any4: 6, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg86: (0::(4::(Nil)))
Model : any1: 6, any2: 0, any3: 4, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg86: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000769 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg86:any list), (any1::(any2::(any3::(any4::((arg86 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg86 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 671


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg86:any list), (any1::(any2::(any3::(any4::((arg86 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg86 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 672


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg87:any list), (any1::(any2::(any3::(any4::((arg87 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg87 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 6, any3: 0, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg87: (Nil)
Model : any1: 6, any2: 6, any3: 3, any4: 5, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg87: (Nil)
Model : any1: 1, any2: 0, any3: 3, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg87: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000437 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg87:any list), (any1::(any2::(any3::(any4::((arg87 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg87 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 673


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg87:any list), (any1::(any2::(any3::(any4::((arg87 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg87 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 674


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 675


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg88:any list), (any1::(any2::(any3::(any4::((arg88 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg88 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 4, any3: 4, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg88: (Nil)
Model : any1: 4, any2: 5, any3: 5, any4: 6, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg88: (Nil)
Model : any1: 1, any2: 2, any3: 5, any4: 5, any5: 1, any_list1: (1::(Nil)), any_tree3: Leaf, arg88: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000420 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg88:any list), (any1::(any2::(any3::(any4::((arg88 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg88 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 676


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg88:any list), (any1::(any2::(any3::(any4::((arg88 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg88 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 677


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg89:any list), (any1::(any2::(any3::(any4::((arg89 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg89 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 1, any3: 0, any4: 3, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg89: (Nil)
Model : any1: 1, any2: 1, any3: 0, any4: 6, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (1) (Leaf), arg89: (Nil)
Model : any1: 6, any2: 3, any3: 3, any4: 6, any5: 2, any_list1: (Nil), any_tree3: Node (Node (Node (Leaf) (6) (Leaf)) (1) (Leaf)) (7) (Leaf), arg89: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001416 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg89:any list), (any1::(any2::(any3::(any4::((arg89 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg89 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 678


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg89:any list), (any1::(any2::(any3::(any4::((arg89 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg89 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 679


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg90:any list), (any1::(any2::(any3::(any4::((arg90 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg90 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 8, any3: 3, any4: 8, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg90: (Nil)
Model : any1: 2, any2: 5, any3: 2, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg90: (Nil)
Model : any1: 0, any2: 3, any3: 5, any4: 7, any5: 1, any_list1: (7::(3::(4::(3::(3::(Nil)))))), any_tree3: Leaf, arg90: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000939 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg90:any list), (any1::(any2::(any3::(any4::((arg90 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg90 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 680


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg90:any list), (any1::(any2::(any3::(any4::((arg90 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg90 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 681


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg91:any list), (any1::(any2::(any3::(any4::((arg91 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg91 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 8, any3: 8, any4: 6, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg91: (3::(Nil))
Model : any1: 8, any2: 2, any3: 6, any4: 2, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg91: (Nil)
Model : any1: 0, any2: 8, any3: 0, any4: 2, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg91: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000583 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg91:any list), (any1::(any2::(any3::(any4::((arg91 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg91 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 682


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg91:any list), (any1::(any2::(any3::(any4::((arg91 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg91 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 683


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg92:any list), (any1::(any2::(any3::(any4::((arg92 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg92 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 2, any3: 3, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg92: (Nil)
Model : any1: 0, any2: 0, any3: 4, any4: 7, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg92: (Nil)
Model : any1: 4, any2: 0, any3: 4, any4: 2, any5: 7, any_list1: (1::(Nil)), any_tree3: Leaf, arg92: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000437 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg92:any list), (any1::(any2::(any3::(any4::((arg92 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg92 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 684


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg92:any list), (any1::(any2::(any3::(any4::((arg92 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg92 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 685


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 686


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 687


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 688


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 689


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 690


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 691


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 692


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 693


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 694


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 695


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 696


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 697


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 698


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 699


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 700


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 701


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 702


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 703


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg93:any list), (any1::(any2::(any3::(any4::((arg93 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg93 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 0, any3: 8, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg93: (Nil)
Model : any1: 3, any2: 7, any3: 5, any4: 7, any5: 2, any_list1: (5::(Nil)), any_tree3: Node (Leaf) (8) (Leaf), arg93: (Nil)
Model : any1: 4, any2: 3, any3: 1, any4: 1, any5: 4, any_list1: (4::(Nil)), any_tree3: Leaf, arg93: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000835 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg93:any list), (any1::(any2::(any3::(any4::((arg93 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg93 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 704


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg93:any list), (any1::(any2::(any3::(any4::((arg93 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg93 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 705


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 706


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 707


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 708


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 709


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 710


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 711


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg94:any list), (any1::(any2::(any3::(any4::((arg94 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg94 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 4, any3: 6, any4: 8, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg94: (Nil)
Model : any1: 6, any2: 4, any3: 1, any4: 2, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg94: (Nil)
Model : any1: 8, any2: 5, any3: 8, any4: 6, any5: 4, any_list1: (5::(2::(8::(0::(Nil))))), any_tree3: Leaf, arg94: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000704 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg94:any list), (any1::(any2::(any3::(any4::((arg94 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg94 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 712


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg94:any list), (any1::(any2::(any3::(any4::((arg94 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg94 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 713


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 714


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 715


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 716


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg95:any list), (any1::(any2::(any3::(any4::((arg95 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg95 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 7, any3: 0, any4: 4, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg95: (Nil)
Model : any1: 4, any2: 3, any3: 6, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg95: (Nil)
Model : any1: 0, any2: 0, any3: 5, any4: 1, any5: 0, any_list1: (6::(Nil)), any_tree3: Leaf, arg95: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000439 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg95:any list), (any1::(any2::(any3::(any4::((arg95 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg95 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 717


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg95:any list), (any1::(any2::(any3::(any4::((arg95 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg95 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 718


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 719


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg96:any list), (any1::(any2::(any3::(any4::((arg96 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg96 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 6, any3: 2, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg96: (Nil)
Model : any1: 6, any2: 8, any3: 7, any4: 6, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg96: (Nil)
Model : any1: 0, any2: 1, any3: 1, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg96: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000367 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg96:any list), (any1::(any2::(any3::(any4::((arg96 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg96 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 720


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg96:any list), (any1::(any2::(any3::(any4::((arg96 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg96 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 721


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg97:any list), (any1::(any2::(any3::(any4::((arg97 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg97 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 8, any3: 0, any4: 4, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg97: (Nil)
Model : any1: 0, any2: 3, any3: 6, any4: 8, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg97: (Nil)
Model : any1: 1, any2: 7, any3: 3, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg97: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000708 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg97:any list), (any1::(any2::(any3::(any4::((arg97 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg97 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 722


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg97:any list), (any1::(any2::(any3::(any4::((arg97 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg97 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 723


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 724


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 725


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 726


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg98:any list), (any1::(any2::(any3::(any4::((arg98 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg98 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 8, any3: 2, any4: 3, any5: 1, any_list1: (7::(Nil)), any_tree3: Leaf, arg98: (Nil)
Model : any1: 1, any2: 0, any3: 0, any4: 0, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg98: (3::(Nil))
Model : any1: 3, any2: 0, any3: 7, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg98: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000857 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg98:any list), (any1::(any2::(any3::(any4::((arg98 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg98 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 727


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg98:any list), (any1::(any2::(any3::(any4::((arg98 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg98 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 728


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 729


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg99:any list), (any1::(any2::(any3::(any4::((arg99 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg99 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 5, any3: 7, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg99: (2::(Nil))
Model : any1: 1, any2: 7, any3: 0, any4: 2, any5: 6, any_list1: (0::(Nil)), any_tree3: Leaf, arg99: (Nil)
Model : any1: 6, any2: 2, any3: 3, any4: 8, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg99: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000724 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg99:any list), (any1::(any2::(any3::(any4::((arg99 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg99 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 730


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg99:any list), (any1::(any2::(any3::(any4::((arg99 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg99 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 731


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg100:any list), (any1::(any2::(any3::(any4::((arg100 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg100 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 2, any3: 4, any4: 0, any5: 5, any_list1: (6::(7::(Nil))), any_tree3: Leaf, arg100: (5::(Nil))
Model : any1: 1, any2: 8, any3: 6, any4: 2, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg100: (Nil)
Model : any1: 6, any2: 4, any3: 5, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg100: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000728 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg100:any list), (any1::(any2::(any3::(any4::((arg100 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg100 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 732


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg100:any list), (any1::(any2::(any3::(any4::((arg100 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg100 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 733


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 734


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg101:any list), (any1::(any2::(any3::(any4::((arg101 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg101 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 3, any3: 0, any4: 5, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg101: (Nil)
Model : any1: 6, any2: 6, any3: 0, any4: 1, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg101: (Nil)
Model : any1: 2, any2: 7, any3: 3, any4: 6, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg101: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000433 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg101:any list), (any1::(any2::(any3::(any4::((arg101 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg101 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 735


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg101:any list), (any1::(any2::(any3::(any4::((arg101 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg101 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 736


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg102:any list), (any1::(any2::(any3::(any4::((arg102 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg102 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 5, any3: 5, any4: 0, any5: 1, any_list1: (4::(Nil)), any_tree3: Leaf, arg102: (6::(6::(Nil)))
Model : any1: 0, any2: 1, any3: 4, any4: 3, any5: 1, any_list1: (4::(Nil)), any_tree3: Leaf, arg102: (Nil)
Model : any1: 1, any2: 3, any3: 5, any4: 2, any5: 0, any_list1: (8::(Nil)), any_tree3: Leaf, arg102: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000891 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg102:any list), (any1::(any2::(any3::(any4::((arg102 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg102 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 737


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg102:any list), (any1::(any2::(any3::(any4::((arg102 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg102 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 738


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg103:any list), (any1::(any2::(any3::(any4::((arg103 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg103 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 0, any3: 5, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg103: (Nil)
Model : any1: 6, any2: 0, any3: 3, any4: 3, any5: 2, any_list1: (Nil), any_tree3: Node (Node (Leaf) (4) (Leaf)) (7) (Leaf), arg103: (Nil)
Model : any1: 6, any2: 4, any3: 1, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg103: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000919 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg103:any list), (any1::(any2::(any3::(any4::((arg103 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg103 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 739


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg103:any list), (any1::(any2::(any3::(any4::((arg103 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg103 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 740


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 741


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg104:any list), (any1::(any2::(any3::(any4::((arg104 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg104 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 6, any3: 6, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg104: (Nil)
Model : any1: 8, any2: 1, any3: 7, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg104: (4::(Nil))
Model : any1: 8, any2: 7, any3: 0, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg104: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000747 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg104:any list), (any1::(any2::(any3::(any4::((arg104 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg104 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 742


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg104:any list), (any1::(any2::(any3::(any4::((arg104 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg104 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 743


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg105:any list), (any1::(any2::(any3::(any4::((arg105 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg105 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 7, any3: 0, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Node (Node (Node (Node (Leaf) (1) (Node (Leaf) (8) (Node (Leaf) (7) (Node (Leaf) (4) (Node (Leaf) (6) (Node (Leaf) (6) (Leaf))))))) (4) (Node (Leaf) (0) (Leaf))) (7) (Leaf)) (1) (Leaf), arg105: (Nil)
Model : any1: 1, any2: 0, any3: 2, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg105: (2::(Nil))
Model : any1: 7, any2: 0, any3: 0, any4: 8, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg105: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.008104 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg105:any list), (any1::(any2::(any3::(any4::((arg105 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg105 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 744


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg105:any list), (any1::(any2::(any3::(any4::((arg105 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg105 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 745


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg106:any list), (any1::(any2::(any3::(any4::((arg106 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg106 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 2, any3: 3, any4: 8, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg106: (Nil)
Model : any1: 8, any2: 8, any3: 7, any4: 6, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg106: (Nil)
Model : any1: 3, any2: 1, any3: 2, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg106: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000570 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg106:any list), (any1::(any2::(any3::(any4::((arg106 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg106 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 746


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg106:any list), (any1::(any2::(any3::(any4::((arg106 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg106 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 747


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg107:any list), (any1::(any2::(any3::(any4::((arg107 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg107 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 1, any3: 2, any4: 4, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg107: (Nil)
Model : any1: 1, any2: 2, any3: 7, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg107: (Nil)
Model : any1: 5, any2: 0, any3: 1, any4: 7, any5: 3, any_list1: (1::(Nil)), any_tree3: Leaf, arg107: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000461 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg107:any list), (any1::(any2::(any3::(any4::((arg107 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg107 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 748


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg107:any list), (any1::(any2::(any3::(any4::((arg107 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg107 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 749


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg108:any list), (any1::(any2::(any3::(any4::((arg108 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg108 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 1, any3: 6, any4: 6, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg108: (Nil)
Model : any1: 3, any2: 2, any3: 2, any4: 8, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Leaf), arg108: (Nil)
Model : any1: 5, any2: 7, any3: 7, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg108: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000650 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg108:any list), (any1::(any2::(any3::(any4::((arg108 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg108 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 750


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg108:any list), (any1::(any2::(any3::(any4::((arg108 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg108 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 751


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 752


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 753


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 754


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 755


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 756


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 757


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 758


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 759


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 760


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 761


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 762


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 763


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 764


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 765


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 766


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 767


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 768


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 769


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg109:any list), (any1::(any2::(any3::(any4::((arg109 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg109 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 1, any3: 2, any4: 2, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg109: (Nil)
Model : any1: 4, any2: 0, any3: 0, any4: 0, any5: 0, any_list1: (4::(Nil)), any_tree3: Leaf, arg109: (Nil)
Model : any1: 1, any2: 8, any3: 2, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg109: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000412 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg109:any list), (any1::(any2::(any3::(any4::((arg109 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg109 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 770


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg109:any list), (any1::(any2::(any3::(any4::((arg109 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg109 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 771


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 772


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 773


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 774


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 775


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 776


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 777


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg110:any list), (any1::(any2::(any3::(any4::((arg110 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg110 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 5, any3: 5, any4: 3, any5: 3, any_list1: (8::(Nil)), any_tree3: Leaf, arg110: (Nil)
Model : any1: 7, any2: 0, any3: 8, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg110: (Nil)
Model : any1: 6, any2: 5, any3: 8, any4: 5, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg110: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000547 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg110:any list), (any1::(any2::(any3::(any4::((arg110 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg110 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 778


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg110:any list), (any1::(any2::(any3::(any4::((arg110 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg110 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 779


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 780


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 781


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 782


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg111:any list), (any1::(any2::(any3::(any4::((arg111 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg111 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 6, any3: 0, any4: 4, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg111: (Nil)
Model : any1: 3, any2: 5, any3: 3, any4: 1, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg111: (7::(Nil))
Model : any1: 3, any2: 1, any3: 0, any4: 3, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (1) (Leaf), arg111: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000652 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg111:any list), (any1::(any2::(any3::(any4::((arg111 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg111 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 783


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg111:any list), (any1::(any2::(any3::(any4::((arg111 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg111 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 784


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 785


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg112:any list), (any1::(any2::(any3::(any4::((arg112 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg112 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 2, any3: 0, any4: 2, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg112: (Nil)
Model : any1: 5, any2: 6, any3: 4, any4: 0, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg112: (Nil)
Model : any1: 1, any2: 4, any3: 5, any4: 2, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg112: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000549 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg112:any list), (any1::(any2::(any3::(any4::((arg112 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg112 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 786


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg112:any list), (any1::(any2::(any3::(any4::((arg112 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg112 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 787


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg113:any list), (any1::(any2::(any3::(any4::((arg113 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg113 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 8, any3: 6, any4: 3, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg113: (Nil)
Model : any1: 2, any2: 3, any3: 0, any4: 6, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg113: (Nil)
Model : any1: 4, any2: 6, any3: 6, any4: 5, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg113: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000478 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg113:any list), (any1::(any2::(any3::(any4::((arg113 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg113 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 788


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg113:any list), (any1::(any2::(any3::(any4::((arg113 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg113 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 789


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 790


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 791


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 792


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg114:any list), (any1::(any2::(any3::(any4::((arg114 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg114 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 7, any3: 7, any4: 4, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg114: (Nil)
Model : any1: 7, any2: 0, any3: 5, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg114: (5::(Nil))
Model : any1: 7, any2: 7, any3: 0, any4: 7, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg114: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000544 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg114:any list), (any1::(any2::(any3::(any4::((arg114 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg114 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 793


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg114:any list), (any1::(any2::(any3::(any4::((arg114 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg114 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 794


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 795


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg115:any list), (any1::(any2::(any3::(any4::((arg115 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg115 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 1, any3: 7, any4: 0, any5: 2, any_list1: (7::(Nil)), any_tree3: Leaf, arg115: (Nil)
Model : any1: 7, any2: 8, any3: 0, any4: 1, any5: 1, any_list1: (0::(Nil)), any_tree3: Leaf, arg115: (Nil)
Model : any1: 1, any2: 4, any3: 4, any4: 3, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg115: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000490 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg115:any list), (any1::(any2::(any3::(any4::((arg115 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg115 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 796


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg115:any list), (any1::(any2::(any3::(any4::((arg115 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg115 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 797


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg116:any list), (any1::(any2::(any3::(any4::((arg116 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg116 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 7, any3: 8, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg116: (Nil)
Model : any1: 5, any2: 7, any3: 4, any4: 5, any5: 5, any_list1: (2::(Nil)), any_tree3: Leaf, arg116: (Nil)
Model : any1: 8, any2: 4, any3: 3, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg116: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000595 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg116:any list), (any1::(any2::(any3::(any4::((arg116 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg116 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 798


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg116:any list), (any1::(any2::(any3::(any4::((arg116 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg116 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 799


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 800


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg117:any list), (any1::(any2::(any3::(any4::((arg117 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg117 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 6, any3: 4, any4: 8, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg117: (1::(Nil))
Model : any1: 2, any2: 7, any3: 0, any4: 0, any5: 1, any_list1: (1::(Nil)), any_tree3: Leaf, arg117: (Nil)
Model : any1: 5, any2: 6, any3: 0, any4: 1, any5: 6, any_list1: (3::(Nil)), any_tree3: Node (Leaf) (7) (Leaf), arg117: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001279 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg117:any list), (any1::(any2::(any3::(any4::((arg117 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg117 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 801


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg117:any list), (any1::(any2::(any3::(any4::((arg117 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg117 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 802


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg118:any list), (any1::(any2::(any3::(any4::((arg118 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg118 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 1, any3: 1, any4: 8, any5: 3, any_list1: (Nil), any_tree3: Node (Node (Leaf) (0) (Leaf)) (6) (Leaf), arg118: (Nil)
Model : any1: 6, any2: 7, any3: 1, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg118: (Nil)
Model : any1: 6, any2: 3, any3: 6, any4: 6, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg118: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000747 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg118:any list), (any1::(any2::(any3::(any4::((arg118 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg118 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 803


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg118:any list), (any1::(any2::(any3::(any4::((arg118 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg118 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 804


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg119:any list), (any1::(any2::(any3::(any4::((arg119 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg119 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 0, any3: 4, any4: 6, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg119: (Nil)
Model : any1: 5, any2: 6, any3: 7, any4: 0, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg119: (Nil)
Model : any1: 3, any2: 6, any3: 6, any4: 7, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Node (Node (Node (Leaf) (8) (Leaf)) (6) (Leaf)) (0) (Leaf)), arg119: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001574 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg119:any list), (any1::(any2::(any3::(any4::((arg119 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg119 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 805


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg119:any list), (any1::(any2::(any3::(any4::((arg119 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg119 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 806


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 807


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg120:any list), (any1::(any2::(any3::(any4::((arg120 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg120 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 6, any3: 0, any4: 6, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg120: (Nil)
Model : any1: 0, any2: 6, any3: 7, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg120: (Nil)
Model : any1: 3, any2: 7, any3: 5, any4: 5, any5: 7, any_list1: (2::(Nil)), any_tree3: Leaf, arg120: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000533 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg120:any list), (any1::(any2::(any3::(any4::((arg120 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg120 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 808


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg120:any list), (any1::(any2::(any3::(any4::((arg120 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg120 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 809


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg121:any list), (any1::(any2::(any3::(any4::((arg121 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg121 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 6, any3: 0, any4: 4, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg121: (Nil)
Model : any1: 6, any2: 2, any3: 3, any4: 8, any5: 1, any_list1: (8::(Nil)), any_tree3: Node (Leaf) (0) (Leaf), arg121: (Nil)
Model : any1: 3, any2: 7, any3: 0, any4: 8, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg121: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000588 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg121:any list), (any1::(any2::(any3::(any4::((arg121 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg121 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 810


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg121:any list), (any1::(any2::(any3::(any4::((arg121 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg121 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 811


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg122:any list), (any1::(any2::(any3::(any4::((arg122 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg122 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 0, any3: 5, any4: 4, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg122: (5::(Nil))
Model : any1: 4, any2: 5, any3: 5, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg122: (Nil)
Model : any1: 3, any2: 3, any3: 0, any4: 2, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg122: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000490 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg122:any list), (any1::(any2::(any3::(any4::((arg122 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg122 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 812


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg122:any list), (any1::(any2::(any3::(any4::((arg122 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg122 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 813


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg123:any list), (any1::(any2::(any3::(any4::((arg123 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg123 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 8, any3: 0, any4: 1, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg123: (Nil)
Model : any1: 7, any2: 2, any3: 0, any4: 5, any5: 4, any_list1: (Nil), any_tree3: Node (Leaf) (2) (Leaf), arg123: (Nil)
Model : any1: 0, any2: 2, any3: 0, any4: 7, any5: 1, any_list1: (4::(Nil)), any_tree3: Leaf, arg123: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000538 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg123:any list), (any1::(any2::(any3::(any4::((arg123 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg123 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 814


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg123:any list), (any1::(any2::(any3::(any4::((arg123 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg123 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 815


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg124:any list), (any1::(any2::(any3::(any4::((arg124 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg124 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 1, any3: 0, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg124: (Nil)
Model : any1: 4, any2: 0, any3: 0, any4: 1, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg124: (0::(Nil))
Model : any1: 7, any2: 0, any3: 0, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg124: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000460 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg124:any list), (any1::(any2::(any3::(any4::((arg124 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg124 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 816


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg124:any list), (any1::(any2::(any3::(any4::((arg124 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg124 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 817


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 818


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 819


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 820


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 821


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 822


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 823


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 824


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 825


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 826


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 827


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 828


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 829


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 830


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 831


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 832


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 833


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 834


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 835


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg125:any list), (any1::(any2::(any3::(any4::((arg125 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg125 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 3, any3: 1, any4: 0, any5: 2, any_list1: (2::(Nil)), any_tree3: Node (Node (Leaf) (7) (Node (Leaf) (7) (Node (Leaf) (0) (Leaf)))) (5) (Leaf), arg125: (Nil)
Model : any1: 6, any2: 0, any3: 0, any4: 0, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg125: (Nil)
Model : any1: 1, any2: 5, any3: 6, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg125: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001694 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg125:any list), (any1::(any2::(any3::(any4::((arg125 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg125 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 836


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg125:any list), (any1::(any2::(any3::(any4::((arg125 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg125 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 837


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 838


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 839


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 840


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 841


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 842


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 843


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg126:any list), (any1::(any2::(any3::(any4::((arg126 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg126 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 8, any3: 3, any4: 0, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Node (Leaf) (8) (Node (Node (Leaf) (3) (Node (Leaf) (0) (Node (Leaf) (5) (Leaf)))) (4) (Leaf))), arg126: (3::(Nil))
Model : any1: 0, any2: 3, any3: 4, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg126: (Nil)
Model : any1: 5, any2: 0, any3: 2, any4: 6, any5: 7, any_list1: (Nil), any_tree3: Node (Node (Node (Leaf) (2) (Node (Leaf) (7) (Node (Leaf) (0) (Leaf)))) (7) (Leaf)) (6) (Leaf), arg126: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.004807 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg126:any list), (any1::(any2::(any3::(any4::((arg126 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg126 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 844


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg126:any list), (any1::(any2::(any3::(any4::((arg126 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg126 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 845


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 846


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 847


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 848


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg127:any list), (any1::(any2::(any3::(any4::((arg127 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg127 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 7, any3: 1, any4: 3, any5: 6, any_list1: (5::(Nil)), any_tree3: Leaf, arg127: (Nil)
Model : any1: 0, any2: 5, any3: 2, any4: 3, any5: 8, any_list1: (Nil), any_tree3: Node (Node (Leaf) (1) (Leaf)) (2) (Leaf), arg127: (Nil)
Model : any1: 5, any2: 2, any3: 0, any4: 0, any5: 0, any_list1: (0::(Nil)), any_tree3: Leaf, arg127: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000772 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg127:any list), (any1::(any2::(any3::(any4::((arg127 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg127 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 849


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg127:any list), (any1::(any2::(any3::(any4::((arg127 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg127 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 850


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 851


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg128:any list), (any1::(any2::(any3::(any4::((arg128 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg128 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 5, any3: 7, any4: 6, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg128: (Nil)
Model : any1: 1, any2: 1, any3: 7, any4: 6, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg128: (Nil)
Model : any1: 2, any2: 5, any3: 6, any4: 7, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg128: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000423 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg128:any list), (any1::(any2::(any3::(any4::((arg128 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg128 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 852


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg128:any list), (any1::(any2::(any3::(any4::((arg128 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg128 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 853


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg129:any list), (any1::(any2::(any3::(any4::((arg129 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg129 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 5, any3: 2, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg129: (Nil)
Model : any1: 0, any2: 4, any3: 4, any4: 0, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg129: (Nil)
Model : any1: 6, any2: 8, any3: 0, any4: 7, any5: 8, any_list1: (0::(Nil)), any_tree3: Leaf, arg129: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000647 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg129:any list), (any1::(any2::(any3::(any4::((arg129 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg129 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 854


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg129:any list), (any1::(any2::(any3::(any4::((arg129 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg129 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 855


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 856


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 857


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 858


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg130:any list), (any1::(any2::(any3::(any4::((arg130 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg130 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 5, any3: 3, any4: 1, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg130: (Nil)
Model : any1: 6, any2: 2, any3: 5, any4: 3, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg130: (Nil)
Model : any1: 5, any2: 4, any3: 3, any4: 4, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg130: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000458 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg130:any list), (any1::(any2::(any3::(any4::((arg130 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg130 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 859


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg130:any list), (any1::(any2::(any3::(any4::((arg130 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg130 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 860


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 861


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg131:any list), (any1::(any2::(any3::(any4::((arg131 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg131 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 0, any3: 1, any4: 3, any5: 2, any_list1: (0::(Nil)), any_tree3: Leaf, arg131: (Nil)
Model : any1: 1, any2: 0, any3: 5, any4: 0, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg131: (4::(Nil))
Model : any1: 1, any2: 7, any3: 0, any4: 0, any5: 1, any_list1: (3::(Nil)), any_tree3: Leaf, arg131: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000541 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg131:any list), (any1::(any2::(any3::(any4::((arg131 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg131 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 862


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg131:any list), (any1::(any2::(any3::(any4::((arg131 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg131 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 863


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg132:any list), (any1::(any2::(any3::(any4::((arg132 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg132 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 8, any3: 1, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg132: (Nil)
Model : any1: 2, any2: 3, any3: 5, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg132: (Nil)
Model : any1: 4, any2: 6, any3: 7, any4: 3, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg132: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000381 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg132:any list), (any1::(any2::(any3::(any4::((arg132 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg132 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 864


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg132:any list), (any1::(any2::(any3::(any4::((arg132 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg132 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 865


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 866


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg133:any list), (any1::(any2::(any3::(any4::((arg133 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg133 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 4, any3: 3, any4: 1, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg133: (Nil)
Model : any1: 0, any2: 0, any3: 6, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg133: (Nil)
Model : any1: 1, any2: 0, any3: 4, any4: 5, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg133: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000360 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg133:any list), (any1::(any2::(any3::(any4::((arg133 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg133 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 867


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg133:any list), (any1::(any2::(any3::(any4::((arg133 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg133 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 868


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg134:any list), (any1::(any2::(any3::(any4::((arg134 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg134 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 1, any3: 0, any4: 0, any5: 8, any_list1: (8::(Nil)), any_tree3: Leaf, arg134: (Nil)
Model : any1: 7, any2: 2, any3: 0, any4: 3, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg134: (Nil)
Model : any1: 7, any2: 1, any3: 2, any4: 3, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (1) (Leaf), arg134: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000615 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg134:any list), (any1::(any2::(any3::(any4::((arg134 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg134 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 869


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg134:any list), (any1::(any2::(any3::(any4::((arg134 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg134 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 870


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg135:any list), (any1::(any2::(any3::(any4::((arg135 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg135 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 6, any3: 8, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg135: (1::(Nil))
Model : any1: 3, any2: 6, any3: 2, any4: 8, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg135: (Nil)
Model : any1: 0, any2: 7, any3: 3, any4: 8, any5: 6, any_list1: (Nil), any_tree3: Node (Leaf) (2) (Leaf), arg135: (5::(1::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000945 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg135:any list), (any1::(any2::(any3::(any4::((arg135 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg135 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 871


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg135:any list), (any1::(any2::(any3::(any4::((arg135 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg135 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 872


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 873


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg136:any list), (any1::(any2::(any3::(any4::((arg136 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg136 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 7, any3: 7, any4: 8, any5: 0, any_list1: (2::(Nil)), any_tree3: Leaf, arg136: (6::(Nil))
Model : any1: 2, any2: 0, any3: 0, any4: 2, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg136: (0::(Nil))
Model : any1: 5, any2: 0, any3: 1, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg136: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000693 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg136:any list), (any1::(any2::(any3::(any4::((arg136 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg136 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 874


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg136:any list), (any1::(any2::(any3::(any4::((arg136 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg136 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 875


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg137:any list), (any1::(any2::(any3::(any4::((arg137 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg137 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 4, any3: 4, any4: 2, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg137: (Nil)
Model : any1: 8, any2: 0, any3: 3, any4: 3, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg137: (Nil)
Model : any1: 8, any2: 8, any3: 4, any4: 7, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg137: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000456 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg137:any list), (any1::(any2::(any3::(any4::((arg137 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg137 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 876


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg137:any list), (any1::(any2::(any3::(any4::((arg137 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg137 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 877


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg138:any list), (any1::(any2::(any3::(any4::((arg138 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg138 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 7, any3: 6, any4: 8, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg138: (Nil)
Model : any1: 3, any2: 4, any3: 7, any4: 8, any5: 4, any_list1: (4::(Nil)), any_tree3: Leaf, arg138: (Nil)
Model : any1: 1, any2: 1, any3: 0, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg138: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000701 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg138:any list), (any1::(any2::(any3::(any4::((arg138 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg138 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 878


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg138:any list), (any1::(any2::(any3::(any4::((arg138 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg138 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 879


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg139:any list), (any1::(any2::(any3::(any4::((arg139 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg139 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 3, any3: 3, any4: 0, any5: 6, any_list1: (4::(Nil)), any_tree3: Leaf, arg139: (Nil)
Model : any1: 3, any2: 0, any3: 0, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Leaf), arg139: (4::(Nil))
Model : any1: 8, any2: 7, any3: 8, any4: 6, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg139: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000839 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg139:any list), (any1::(any2::(any3::(any4::((arg139 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg139 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 880


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg139:any list), (any1::(any2::(any3::(any4::((arg139 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg139 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 881


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg140:any list), (any1::(any2::(any3::(any4::((arg140 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg140 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 2, any3: 2, any4: 3, any5: 4, any_list1: (Nil), any_tree3: Node (Node (Leaf) (6) (Leaf)) (7) (Leaf), arg140: (Nil)
Model : any1: 8, any2: 5, any3: 8, any4: 2, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg140: (Nil)
Model : any1: 0, any2: 5, any3: 7, any4: 4, any5: 4, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg140: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001112 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg140:any list), (any1::(any2::(any3::(any4::((arg140 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg140 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 882


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg140:any list), (any1::(any2::(any3::(any4::((arg140 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg140 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 883


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 884


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 885


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 886


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 887


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 888


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 889


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 890


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 891


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 892


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 893


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 894


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 895


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 896


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 897


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 898


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 899


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 900


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 901


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg141:any list), (any1::(any2::(any3::(any4::((arg141 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg141 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 7, any3: 6, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg141: (Nil)
Model : any1: 0, any2: 5, any3: 3, any4: 8, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg141: (Nil)
Model : any1: 0, any2: 6, any3: 2, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg141: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000394 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg141:any list), (any1::(any2::(any3::(any4::((arg141 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg141 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 902


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg141:any list), (any1::(any2::(any3::(any4::((arg141 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg141 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 903


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 904


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 905


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 906


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 907


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 908


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 909


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg142:any list), (any1::(any2::(any3::(any4::((arg142 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg142 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 0, any3: 5, any4: 2, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg142: (Nil)
Model : any1: 0, any2: 6, any3: 2, any4: 5, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg142: (Nil)
Model : any1: 1, any2: 3, any3: 3, any4: 5, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg142: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000510 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg142:any list), (any1::(any2::(any3::(any4::((arg142 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg142 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 910


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg142:any list), (any1::(any2::(any3::(any4::((arg142 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg142 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 911


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 912


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 913


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 914


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg143:any list), (any1::(any2::(any3::(any4::((arg143 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg143 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 5, any3: 4, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg143: (Nil)
Model : any1: 5, any2: 4, any3: 2, any4: 4, any5: 2, any_list1: (0::(7::(Nil))), any_tree3: Leaf, arg143: (Nil)
Model : any1: 5, any2: 8, any3: 5, any4: 7, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg143: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000489 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg143:any list), (any1::(any2::(any3::(any4::((arg143 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg143 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 915


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg143:any list), (any1::(any2::(any3::(any4::((arg143 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg143 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 916


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 917


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg144:any list), (any1::(any2::(any3::(any4::((arg144 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg144 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 6, any3: 0, any4: 2, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg144: (Nil)
Model : any1: 6, any2: 1, any3: 4, any4: 8, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg144: (4::(Nil))
Model : any1: 4, any2: 7, any3: 2, any4: 4, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg144: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000589 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg144:any list), (any1::(any2::(any3::(any4::((arg144 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg144 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 918


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg144:any list), (any1::(any2::(any3::(any4::((arg144 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg144 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 919


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg145:any list), (any1::(any2::(any3::(any4::((arg145 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg145 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 1, any3: 6, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg145: (Nil)
Model : any1: 6, any2: 0, any3: 1, any4: 0, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg145: (Nil)
Model : any1: 5, any2: 0, any3: 4, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg145: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000355 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg145:any list), (any1::(any2::(any3::(any4::((arg145 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg145 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 920


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg145:any list), (any1::(any2::(any3::(any4::((arg145 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg145 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 921


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 922


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 923


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 924


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg146:any list), (any1::(any2::(any3::(any4::((arg146 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg146 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 4, any3: 5, any4: 8, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Leaf), arg146: (Nil)
Model : any1: 0, any2: 8, any3: 4, any4: 7, any5: 1, any_list1: (1::(Nil)), any_tree3: Leaf, arg146: (Nil)
Model : any1: 7, any2: 7, any3: 6, any4: 4, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg146: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000760 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg146:any list), (any1::(any2::(any3::(any4::((arg146 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg146 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 925


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg146:any list), (any1::(any2::(any3::(any4::((arg146 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg146 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 926


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 927


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg147:any list), (any1::(any2::(any3::(any4::((arg147 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg147 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 0, any3: 4, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg147: (Nil)
Model : any1: 0, any2: 6, any3: 8, any4: 3, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg147: (Nil)
Model : any1: 7, any2: 2, any3: 3, any4: 6, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg147: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000408 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg147:any list), (any1::(any2::(any3::(any4::((arg147 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg147 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 928


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg147:any list), (any1::(any2::(any3::(any4::((arg147 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg147 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 929


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg148:any list), (any1::(any2::(any3::(any4::((arg148 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg148 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 0, any3: 8, any4: 4, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg148: (Nil)
Model : any1: 3, any2: 8, any3: 0, any4: 4, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg148: (Nil)
Model : any1: 0, any2: 6, any3: 4, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg148: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000614 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg148:any list), (any1::(any2::(any3::(any4::((arg148 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg148 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 930


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg148:any list), (any1::(any2::(any3::(any4::((arg148 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg148 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 931


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 932


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg149:any list), (any1::(any2::(any3::(any4::((arg149 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg149 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 5, any3: 4, any4: 4, any5: 3, any_list1: (2::(Nil)), any_tree3: Leaf, arg149: (Nil)
Model : any1: 0, any2: 4, any3: 6, any4: 4, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg149: (Nil)
Model : any1: 4, any2: 4, any3: 0, any4: 4, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg149: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000564 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg149:any list), (any1::(any2::(any3::(any4::((arg149 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg149 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 933


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg149:any list), (any1::(any2::(any3::(any4::((arg149 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg149 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 934


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg150:any list), (any1::(any2::(any3::(any4::((arg150 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg150 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 5, any3: 6, any4: 0, any5: 0, any_list1: (8::(Nil)), any_tree3: Leaf, arg150: (Nil)
Model : any1: 0, any2: 2, any3: 3, any4: 6, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg150: (Nil)
Model : any1: 1, any2: 0, any3: 1, any4: 4, any5: 3, any_list1: (0::(3::(1::(Nil)))), any_tree3: Leaf, arg150: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000474 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg150:any list), (any1::(any2::(any3::(any4::((arg150 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg150 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 935


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg150:any list), (any1::(any2::(any3::(any4::((arg150 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg150 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 936


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg151:any list), (any1::(any2::(any3::(any4::((arg151 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg151 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 0, any3: 1, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg151: (Nil)
Model : any1: 2, any2: 3, any3: 1, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg151: (Nil)
Model : any1: 1, any2: 0, any3: 2, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg151: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000523 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg151:any list), (any1::(any2::(any3::(any4::((arg151 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg151 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 937


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg151:any list), (any1::(any2::(any3::(any4::((arg151 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg151 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 938


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 939


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg152:any list), (any1::(any2::(any3::(any4::((arg152 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg152 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 5, any3: 4, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg152: (Nil)
Model : any1: 7, any2: 4, any3: 0, any4: 2, any5: 2, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg152: (6::(Nil))
Model : any1: 7, any2: 7, any3: 0, any4: 5, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg152: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000624 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg152:any list), (any1::(any2::(any3::(any4::((arg152 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg152 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 940


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg152:any list), (any1::(any2::(any3::(any4::((arg152 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg152 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 941


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg153:any list), (any1::(any2::(any3::(any4::((arg153 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg153 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 4, any3: 6, any4: 6, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg153: (4::(Nil))
Model : any1: 7, any2: 4, any3: 8, any4: 0, any5: 4, any_list1: (6::(0::(6::(8::(Nil))))), any_tree3: Leaf, arg153: (Nil)
Model : any1: 4, any2: 0, any3: 7, any4: 0, any5: 3, any_list1: (0::(Nil)), any_tree3: Leaf, arg153: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000990 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg153:any list), (any1::(any2::(any3::(any4::((arg153 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg153 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 942


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg153:any list), (any1::(any2::(any3::(any4::((arg153 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg153 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 943


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg154:any list), (any1::(any2::(any3::(any4::((arg154 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg154 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 7, any3: 0, any4: 6, any5: 0, any_list1: (3::(Nil)), any_tree3: Node (Leaf) (6) (Node (Node (Node (Leaf) (4) (Leaf)) (0) (Leaf)) (0) (Leaf)), arg154: (8::(Nil))
Model : any1: 5, any2: 8, any3: 4, any4: 5, any5: 0, any_list1: (1::(3::(0::(Nil)))), any_tree3: Leaf, arg154: (Nil)
Model : any1: 5, any2: 6, any3: 8, any4: 6, any5: 7, any_list1: (Nil), any_tree3: Node (Node (Leaf) (2) (Node (Node (Leaf) (6) (Node (Leaf) (0) (Leaf))) (6) (Leaf))) (0) (Node (Leaf) (2) (Leaf)), arg154: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.003663 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg154:any list), (any1::(any2::(any3::(any4::((arg154 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg154 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 944


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg154:any list), (any1::(any2::(any3::(any4::((arg154 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg154 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 945


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg155:any list), (any1::(any2::(any3::(any4::((arg155 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg155 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 1, any3: 3, any4: 8, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg155: (4::(Nil))
Model : any1: 2, any2: 3, any3: 2, any4: 6, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg155: (Nil)
Model : any1: 8, any2: 4, any3: 7, any4: 8, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Node (Leaf) (4) (Node (Leaf) (0) (Leaf))), arg155: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001158 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg155:any list), (any1::(any2::(any3::(any4::((arg155 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg155 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 946


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg155:any list), (any1::(any2::(any3::(any4::((arg155 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg155 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 947


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg156:any list), (any1::(any2::(any3::(any4::((arg156 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg156 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 4, any3: 5, any4: 5, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), arg156: (Nil)
Model : any1: 1, any2: 1, any3: 6, any4: 6, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Leaf), arg156: (4::(Nil))
Model : any1: 2, any2: 7, any3: 8, any4: 7, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (6) (Leaf), arg156: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001239 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg156:any list), (any1::(any2::(any3::(any4::((arg156 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg156 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 948


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg156:any list), (any1::(any2::(any3::(any4::((arg156 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg156 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 949


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 950


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 951


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 952


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 953


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 954


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 955


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 956


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 957


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 958


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 959


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 960


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 961


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 962


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 963


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 964


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 965


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 966


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 967


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg157:any list), (any1::(any2::(any3::(any4::((arg157 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg157 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 0, any3: 8, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg157: (Nil)
Model : any1: 8, any2: 3, any3: 0, any4: 8, any5: 0, any_list1: (Nil), any_tree3: Node (Node (Leaf) (0) (Leaf)) (8) (Leaf), arg157: (Nil)
Model : any1: 5, any2: 3, any3: 4, any4: 1, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg157: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000972 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg157:any list), (any1::(any2::(any3::(any4::((arg157 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg157 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 968


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg157:any list), (any1::(any2::(any3::(any4::((arg157 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg157 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 969


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 970


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 971


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 972


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 973


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 974


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 975


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg158:any list), (any1::(any2::(any3::(any4::((arg158 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg158 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 0, any3: 0, any4: 1, any5: 6, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg158: (0::(Nil))
Model : any1: 7, any2: 3, any3: 6, any4: 2, any5: 6, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg158: (Nil)
Model : any1: 1, any2: 3, any3: 7, any4: 1, any5: 6, any_list1: (6::(Nil)), any_tree3: Leaf, arg158: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000867 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg158:any list), (any1::(any2::(any3::(any4::((arg158 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg158 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 976


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg158:any list), (any1::(any2::(any3::(any4::((arg158 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg158 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 977


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 978


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 979


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 980


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg159:any list), (any1::(any2::(any3::(any4::((arg159 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg159 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 1, any3: 2, any4: 4, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg159: (Nil)
Model : any1: 8, any2: 1, any3: 1, any4: 5, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg159: (Nil)
Model : any1: 5, any2: 6, any3: 8, any4: 6, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Node (Leaf) (5) (Leaf)), arg159: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000871 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg159:any list), (any1::(any2::(any3::(any4::((arg159 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg159 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 981


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg159:any list), (any1::(any2::(any3::(any4::((arg159 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg159 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 982


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 983


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg160:any list), (any1::(any2::(any3::(any4::((arg160 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg160 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 5, any3: 0, any4: 5, any5: 2, any_list1: (0::(Nil)), any_tree3: Leaf, arg160: (Nil)
Model : any1: 0, any2: 0, any3: 8, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg160: (Nil)
Model : any1: 8, any2: 5, any3: 0, any4: 3, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg160: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000374 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg160:any list), (any1::(any2::(any3::(any4::((arg160 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg160 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 984


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg160:any list), (any1::(any2::(any3::(any4::((arg160 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg160 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 985


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg161:any list), (any1::(any2::(any3::(any4::((arg161 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg161 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 5, any3: 5, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg161: (Nil)
Model : any1: 0, any2: 5, any3: 0, any4: 5, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg161: (Nil)
Model : any1: 0, any2: 6, any3: 4, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg161: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000395 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg161:any list), (any1::(any2::(any3::(any4::((arg161 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg161 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 986


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg161:any list), (any1::(any2::(any3::(any4::((arg161 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg161 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 987


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 988


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 989


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 990


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg162:any list), (any1::(any2::(any3::(any4::((arg162 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg162 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 5, any3: 6, any4: 7, any5: 1, any_list1: (7::(Nil)), any_tree3: Leaf, arg162: (Nil)
Model : any1: 4, any2: 6, any3: 0, any4: 0, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg162: (7::(Nil))
Model : any1: 3, any2: 6, any3: 7, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg162: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000589 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg162:any list), (any1::(any2::(any3::(any4::((arg162 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg162 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 991


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg162:any list), (any1::(any2::(any3::(any4::((arg162 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg162 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 992


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 993


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg163:any list), (any1::(any2::(any3::(any4::((arg163 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg163 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 7, any3: 6, any4: 7, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg163: (Nil)
Model : any1: 2, any2: 7, any3: 7, any4: 4, any5: 2, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), arg163: (Nil)
Model : any1: 3, any2: 2, any3: 8, any4: 6, any5: 2, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg163: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001021 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg163:any list), (any1::(any2::(any3::(any4::((arg163 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg163 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 994


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg163:any list), (any1::(any2::(any3::(any4::((arg163 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg163 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 995


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg164:any list), (any1::(any2::(any3::(any4::((arg164 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg164 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 0, any3: 8, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg164: (Nil)
Model : any1: 7, any2: 7, any3: 1, any4: 0, any5: 4, any_list1: (4::(Nil)), any_tree3: Node (Leaf) (7) (Node (Leaf) (1) (Leaf)), arg164: (Nil)
Model : any1: 4, any2: 3, any3: 0, any4: 5, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg164: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000892 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg164:any list), (any1::(any2::(any3::(any4::((arg164 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg164 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 996


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg164:any list), (any1::(any2::(any3::(any4::((arg164 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg164 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 997


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 998


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg165:any list), (any1::(any2::(any3::(any4::((arg165 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg165 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 5, any3: 0, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg165: (Nil)
Model : any1: 2, any2: 5, any3: 7, any4: 0, any5: 0, any_list1: (2::(Nil)), any_tree3: Node (Node (Leaf) (1) (Leaf)) (0) (Leaf), arg165: (5::(Nil))
Model : any1: 1, any2: 4, any3: 7, any4: 7, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg165: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000888 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg165:any list), (any1::(any2::(any3::(any4::((arg165 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg165 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 999


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg165:any list), (any1::(any2::(any3::(any4::((arg165 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg165 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1000


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg166:any list), (any1::(any2::(any3::(any4::((arg166 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg166 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 6, any3: 8, any4: 5, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg166: (Nil)
Model : any1: 0, any2: 5, any3: 0, any4: 4, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg166: (Nil)
Model : any1: 7, any2: 6, any3: 7, any4: 5, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg166: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000734 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg166:any list), (any1::(any2::(any3::(any4::((arg166 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg166 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1001


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg166:any list), (any1::(any2::(any3::(any4::((arg166 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg166 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1002


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg167:any list), (any1::(any2::(any3::(any4::((arg167 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg167 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 7, any3: 4, any4: 2, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg167: (Nil)
Model : any1: 0, any2: 6, any3: 1, any4: 6, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg167: (Nil)
Model : any1: 1, any2: 6, any3: 6, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg167: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000567 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg167:any list), (any1::(any2::(any3::(any4::((arg167 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg167 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1003


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg167:any list), (any1::(any2::(any3::(any4::((arg167 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg167 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1004


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1005


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg168:any list), (any1::(any2::(any3::(any4::((arg168 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg168 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 0, any3: 0, any4: 3, any5: 6, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Node (Leaf) (1) (Leaf)), arg168: (5::(Nil))
Model : any1: 3, any2: 2, any3: 1, any4: 5, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg168: (3::(4::(7::(6::(Nil)))))
Model : any1: 2, any2: 1, any3: 3, any4: 2, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg168: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002110 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg168:any list), (any1::(any2::(any3::(any4::((arg168 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg168 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1006


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg168:any list), (any1::(any2::(any3::(any4::((arg168 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg168 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1007


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg169:any list), (any1::(any2::(any3::(any4::((arg169 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg169 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 0, any3: 2, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg169: (Nil)
Model : any1: 8, any2: 2, any3: 8, any4: 7, any5: 3, any_list1: (0::(1::(Nil))), any_tree3: Node (Leaf) (0) (Leaf), arg169: (Nil)
Model : any1: 0, any2: 3, any3: 0, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg169: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000669 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg169:any list), (any1::(any2::(any3::(any4::((arg169 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg169 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1008


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg169:any list), (any1::(any2::(any3::(any4::((arg169 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg169 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1009


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg170:any list), (any1::(any2::(any3::(any4::((arg170 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg170 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 6, any3: 0, any4: 4, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg170: (Nil)
Model : any1: 6, any2: 1, any3: 3, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg170: (Nil)
Model : any1: 6, any2: 8, any3: 8, any4: 8, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg170: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000509 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg170:any list), (any1::(any2::(any3::(any4::((arg170 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg170 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1010


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg170:any list), (any1::(any2::(any3::(any4::((arg170 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg170 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1011


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg171:any list), (any1::(any2::(any3::(any4::((arg171 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg171 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 5, any3: 8, any4: 4, any5: 6, any_list1: (6::(Nil)), any_tree3: Leaf, arg171: (5::(Nil))
Model : any1: 6, any2: 4, any3: 0, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg171: (Nil)
Model : any1: 2, any2: 6, any3: 1, any4: 7, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg171: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000746 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg171:any list), (any1::(any2::(any3::(any4::((arg171 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg171 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1012


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg171:any list), (any1::(any2::(any3::(any4::((arg171 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg171 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1013


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg172:any list), (any1::(any2::(any3::(any4::((arg172 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg172 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 0, any3: 0, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (2) (Leaf), arg172: (Nil)
Model : any1: 6, any2: 0, any3: 1, any4: 1, any5: 7, any_list1: (8::(Nil)), any_tree3: Node (Leaf) (4) (Leaf), arg172: (5::(Nil))
Model : any1: 3, any2: 8, any3: 4, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (4) (Leaf), arg172: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001245 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg172:any list), (any1::(any2::(any3::(any4::((arg172 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg172 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1014


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg172:any list), (any1::(any2::(any3::(any4::((arg172 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg172 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1015


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1016


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1017


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1018


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1019


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1020


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1021


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1022


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1023


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1024


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1025


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1026


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1027


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1028


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1029


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1030


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1031


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1032


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1033


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg173:any list), (any1::(any2::(any3::(any4::((arg173 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg173 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 6, any3: 7, any4: 7, any5: 5, any_list1: (0::(Nil)), any_tree3: Leaf, arg173: (4::(0::(Nil)))
Model : any1: 4, any2: 3, any3: 0, any4: 2, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg173: (Nil)
Model : any1: 2, any2: 5, any3: 7, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg173: (7::(3::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001006 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg173:any list), (any1::(any2::(any3::(any4::((arg173 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg173 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1034


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg173:any list), (any1::(any2::(any3::(any4::((arg173 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg173 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1035


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1036


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1037


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1038


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1039


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1040


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1041


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg174:any list), (any1::(any2::(any3::(any4::((arg174 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg174 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 8, any3: 0, any4: 0, any5: 7, any_list1: (7::(6::(1::(Nil)))), any_tree3: Leaf, arg174: (0::(Nil))
Model : any1: 3, any2: 0, any3: 7, any4: 2, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg174: (Nil)
Model : any1: 7, any2: 0, any3: 7, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg174: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000792 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg174:any list), (any1::(any2::(any3::(any4::((arg174 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg174 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1042


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg174:any list), (any1::(any2::(any3::(any4::((arg174 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg174 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1043


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1044


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1045


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1046


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg175:any list), (any1::(any2::(any3::(any4::((arg175 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg175 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 7, any3: 1, any4: 8, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg175: (Nil)
Model : any1: 0, any2: 0, any3: 7, any4: 3, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg175: (Nil)
Model : any1: 8, any2: 1, any3: 2, any4: 5, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg175: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000463 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg175:any list), (any1::(any2::(any3::(any4::((arg175 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg175 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1047


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg175:any list), (any1::(any2::(any3::(any4::((arg175 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg175 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1048


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1049


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg176:any list), (any1::(any2::(any3::(any4::((arg176 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg176 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 4, any3: 6, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg176: (Nil)
Model : any1: 2, any2: 8, any3: 2, any4: 0, any5: 7, any_list1: (7::(Nil)), any_tree3: Leaf, arg176: (Nil)
Model : any1: 0, any2: 3, any3: 4, any4: 0, any5: 4, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg176: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000521 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg176:any list), (any1::(any2::(any3::(any4::((arg176 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg176 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1050


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg176:any list), (any1::(any2::(any3::(any4::((arg176 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg176 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1051


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg177:any list), (any1::(any2::(any3::(any4::((arg177 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg177 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 1, any3: 0, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg177: (Nil)
Model : any1: 8, any2: 3, any3: 1, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Node (Node (Node (Node (Leaf) (0) (Leaf)) (3) (Node (Leaf) (8) (Node (Leaf) (8) (Leaf)))) (7) (Node (Leaf) (6) (Leaf))) (2) (Leaf), arg177: (8::(Nil))
Model : any1: 7, any2: 0, any3: 2, any4: 7, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg177: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.004671 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg177:any list), (any1::(any2::(any3::(any4::((arg177 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg177 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1052


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg177:any list), (any1::(any2::(any3::(any4::((arg177 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg177 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1053


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1054


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1055


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1056


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg178:any list), (any1::(any2::(any3::(any4::((arg178 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg178 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 1, any3: 7, any4: 2, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg178: (Nil)
Model : any1: 0, any2: 8, any3: 3, any4: 3, any5: 0, any_list1: (7::(Nil)), any_tree3: Leaf, arg178: (3::(Nil))
Model : any1: 6, any2: 4, any3: 3, any4: 5, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (5) (Leaf), arg178: (0::(4::(6::(Nil))))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001355 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg178:any list), (any1::(any2::(any3::(any4::((arg178 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg178 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1057


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg178:any list), (any1::(any2::(any3::(any4::((arg178 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg178 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1058


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1059


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg179:any list), (any1::(any2::(any3::(any4::((arg179 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg179 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 2, any3: 8, any4: 6, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg179: (Nil)
Model : any1: 1, any2: 8, any3: 4, any4: 1, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg179: (Nil)
Model : any1: 0, any2: 7, any3: 2, any4: 5, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg179: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000427 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg179:any list), (any1::(any2::(any3::(any4::((arg179 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg179 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1060


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg179:any list), (any1::(any2::(any3::(any4::((arg179 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg179 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1061


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg180:any list), (any1::(any2::(any3::(any4::((arg180 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg180 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 7, any3: 5, any4: 0, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg180: (Nil)
Model : any1: 5, any2: 8, any3: 1, any4: 1, any5: 0, any_list1: (4::(Nil)), any_tree3: Leaf, arg180: (4::(Nil))
Model : any1: 0, any2: 1, any3: 8, any4: 0, any5: 0, any_list1: (1::(Nil)), any_tree3: Leaf, arg180: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000660 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg180:any list), (any1::(any2::(any3::(any4::((arg180 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg180 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1062


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg180:any list), (any1::(any2::(any3::(any4::((arg180 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg180 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1063


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1064


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg181:any list), (any1::(any2::(any3::(any4::((arg181 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg181 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 6, any3: 4, any4: 5, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg181: (8::(Nil))
Model : any1: 0, any2: 3, any3: 7, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg181: (7::(Nil))
Model : any1: 4, any2: 5, any3: 4, any4: 1, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg181: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000916 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg181:any list), (any1::(any2::(any3::(any4::((arg181 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg181 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1065


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg181:any list), (any1::(any2::(any3::(any4::((arg181 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg181 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1066


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg182:any list), (any1::(any2::(any3::(any4::((arg182 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg182 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 0, any3: 3, any4: 1, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg182: (Nil)
Model : any1: 6, any2: 6, any3: 1, any4: 8, any5: 7, any_list1: (2::(Nil)), any_tree3: Leaf, arg182: (Nil)
Model : any1: 8, any2: 0, any3: 6, any4: 1, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg182: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000555 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg182:any list), (any1::(any2::(any3::(any4::((arg182 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg182 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1067


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg182:any list), (any1::(any2::(any3::(any4::((arg182 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg182 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1068


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg183:any list), (any1::(any2::(any3::(any4::((arg183 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg183 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 0, any3: 2, any4: 5, any5: 0, any_list1: (8::(3::(Nil))), any_tree3: Leaf, arg183: (1::(Nil))
Model : any1: 3, any2: 5, any3: 5, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg183: (Nil)
Model : any1: 3, any2: 6, any3: 3, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Node (Node (Node (Node (Leaf) (0) (Leaf)) (8) (Leaf)) (4) (Leaf)) (6) (Leaf), arg183: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002029 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg183:any list), (any1::(any2::(any3::(any4::((arg183 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg183 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1069


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg183:any list), (any1::(any2::(any3::(any4::((arg183 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg183 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1070


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1071


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg184:any list), (any1::(any2::(any3::(any4::((arg184 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg184 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 2, any3: 0, any4: 1, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg184: (Nil)
Model : any1: 7, any2: 6, any3: 8, any4: 0, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg184: (5::(Nil))
Model : any1: 0, any2: 3, any3: 1, any4: 6, any5: 4, any_list1: (Nil), any_tree3: Node (Node (Node (Node (Node (Node (Leaf) (1) (Node (Node (Leaf) (7) (Leaf)) (8) (Leaf))) (2) (Leaf)) (2) (Node (Leaf) (6) (Leaf))) (3) (Leaf)) (0) (Leaf)) (8) (Leaf), arg184: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.006804 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg184:any list), (any1::(any2::(any3::(any4::((arg184 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg184 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1072


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg184:any list), (any1::(any2::(any3::(any4::((arg184 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg184 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1073


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg185:any list), (any1::(any2::(any3::(any4::((arg185 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg185 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 3, any3: 0, any4: 7, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg185: (Nil)
Model : any1: 6, any2: 0, any3: 4, any4: 8, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg185: (Nil)
Model : any1: 2, any2: 0, any3: 2, any4: 1, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg185: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000490 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg185:any list), (any1::(any2::(any3::(any4::((arg185 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg185 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1074


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg185:any list), (any1::(any2::(any3::(any4::((arg185 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg185 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1075


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg186:any list), (any1::(any2::(any3::(any4::((arg186 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg186 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 7, any3: 3, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg186: (2::(Nil))
Model : any1: 6, any2: 0, any3: 1, any4: 1, any5: 5, any_list1: (1::(Nil)), any_tree3: Leaf, arg186: (Nil)
Model : any1: 0, any2: 0, any3: 8, any4: 1, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg186: (0::(7::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000774 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg186:any list), (any1::(any2::(any3::(any4::((arg186 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg186 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1076


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg186:any list), (any1::(any2::(any3::(any4::((arg186 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg186 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1077


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg187:any list), (any1::(any2::(any3::(any4::((arg187 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg187 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 2, any3: 7, any4: 7, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg187: (Nil)
Model : any1: 3, any2: 0, any3: 0, any4: 3, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg187: (2::(Nil))
Model : any1: 0, any2: 3, any3: 5, any4: 2, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg187: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000466 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg187:any list), (any1::(any2::(any3::(any4::((arg187 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg187 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1078


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg187:any list), (any1::(any2::(any3::(any4::((arg187 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg187 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1079


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg188:any list), (any1::(any2::(any3::(any4::((arg188 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg188 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 6, any3: 5, any4: 5, any5: 0, any_list1: (8::(Nil)), any_tree3: Leaf, arg188: (Nil)
Model : any1: 7, any2: 5, any3: 0, any4: 2, any5: 2, any_list1: (0::(Nil)), any_tree3: Leaf, arg188: (Nil)
Model : any1: 8, any2: 8, any3: 0, any4: 7, any5: 7, any_list1: (5::(Nil)), any_tree3: Leaf, arg188: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000687 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg188:any list), (any1::(any2::(any3::(any4::((arg188 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg188 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1080


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg188:any list), (any1::(any2::(any3::(any4::((arg188 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg188 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1081


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1082


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1083


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1084


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1085


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1086


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1087


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1088


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1089


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1090


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1091


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1092


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1093


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1094


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1095


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1096


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1097


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1098


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1099


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg189:any list), (any1::(any2::(any3::(any4::((arg189 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg189 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 0, any3: 2, any4: 2, any5: 2, any_list1: (Nil), any_tree3: Node (Node (Leaf) (7) (Leaf)) (2) (Leaf), arg189: (1::(Nil))
Model : any1: 4, any2: 1, any3: 0, any4: 8, any5: 1, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg189: (1::(2::(Nil)))
Model : any1: 0, any2: 7, any3: 1, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg189: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001393 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg189:any list), (any1::(any2::(any3::(any4::((arg189 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg189 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1100


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg189:any list), (any1::(any2::(any3::(any4::((arg189 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg189 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1101


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1102


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1103


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1104


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1105


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1106


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1107


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg190:any list), (any1::(any2::(any3::(any4::((arg190 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg190 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 4, any3: 4, any4: 1, any5: 3, any_list1: (2::(Nil)), any_tree3: Leaf, arg190: (Nil)
Model : any1: 7, any2: 8, any3: 1, any4: 8, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg190: (Nil)
Model : any1: 8, any2: 4, any3: 0, any4: 7, any5: 2, any_list1: (3::(5::(0::(Nil)))), any_tree3: Leaf, arg190: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000675 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg190:any list), (any1::(any2::(any3::(any4::((arg190 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg190 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg190:any list), (any1::(any2::(any3::(any4::((arg190 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg190 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg191:any list), (any1::(any2::(any3::(any4::((arg191 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg191 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 3, any3: 0, any4: 2, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg191: (0::(Nil))
Model : any1: 0, any2: 4, any3: 3, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg191: (4::(Nil))
Model : any1: 7, any2: 3, any3: 1, any4: 6, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Leaf), arg191: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000700 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg191:any list), (any1::(any2::(any3::(any4::((arg191 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg191 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg191:any list), (any1::(any2::(any3::(any4::((arg191 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg191 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg192:any list), (any1::(any2::(any3::(any4::((arg192 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg192 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 4, any2: 3, any3: 3, any4: 1, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg192: (Nil)
Model : any1: 1, any2: 1, any3: 8, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Node (Leaf) (8) (Leaf), arg192: (Nil)
Model : any1: 6, any2: 1, any3: 7, any4: 7, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg192: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000685 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg192:any list), (any1::(any2::(any3::(any4::((arg192 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg192 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg192:any list), (any1::(any2::(any3::(any4::((arg192 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg192 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg193:any list), (any1::(any2::(any3::(any4::((arg193 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg193 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 2, any3: 5, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg193: (Nil)
Model : any1: 5, any2: 6, any3: 0, any4: 8, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg193: (Nil)
Model : any1: 6, any2: 1, any3: 0, any4: 1, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg193: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000530 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg193:any list), (any1::(any2::(any3::(any4::((arg193 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg193 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg193:any list), (any1::(any2::(any3::(any4::((arg193 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg193 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg194:any list), (any1::(any2::(any3::(any4::((arg194 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg194 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 6, any3: 4, any4: 3, any5: 2, any_list1: (5::(3::(Nil))), any_tree3: Leaf, arg194: (Nil)
Model : any1: 5, any2: 4, any3: 6, any4: 3, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg194: (Nil)
Model : any1: 0, any2: 8, any3: 6, any4: 7, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg194: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000666 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg194:any list), (any1::(any2::(any3::(any4::((arg194 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg194 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg194:any list), (any1::(any2::(any3::(any4::((arg194 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg194 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1125


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg195:any list), (any1::(any2::(any3::(any4::((arg195 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg195 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 4, any3: 2, any4: 1, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg195: (Nil)
Model : any1: 5, any2: 2, any3: 2, any4: 4, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg195: (Nil)
Model : any1: 2, any2: 7, any3: 0, any4: 3, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg195: (1::(0::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000564 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg195:any list), (any1::(any2::(any3::(any4::((arg195 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg195 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1126


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg195:any list), (any1::(any2::(any3::(any4::((arg195 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg195 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1127


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg196:any list), (any1::(any2::(any3::(any4::((arg196 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg196 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 4, any3: 1, any4: 6, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg196: (8::(Nil))
Model : any1: 7, any2: 5, any3: 1, any4: 1, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg196: (Nil)
Model : any1: 0, any2: 6, any3: 3, any4: 1, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg196: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000540 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg196:any list), (any1::(any2::(any3::(any4::((arg196 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg196 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1128


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg196:any list), (any1::(any2::(any3::(any4::((arg196 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg196 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1129


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1130


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg197:any list), (any1::(any2::(any3::(any4::((arg197 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg197 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 3, any3: 2, any4: 1, any5: 2, any_list1: (Nil), any_tree3: Node (Node (Leaf) (2) (Leaf)) (2) (Leaf), arg197: (Nil)
Model : any1: 3, any2: 4, any3: 0, any4: 6, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg197: (Nil)
Model : any1: 0, any2: 5, any3: 3, any4: 2, any5: 6, any_list1: (6::(Nil)), any_tree3: Leaf, arg197: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000838 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg197:any list), (any1::(any2::(any3::(any4::((arg197 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg197 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1131


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg197:any list), (any1::(any2::(any3::(any4::((arg197 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg197 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1132


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg198:any list), (any1::(any2::(any3::(any4::((arg198 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg198 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 8, any2: 7, any3: 4, any4: 2, any5: 0, any_list1: (6::(Nil)), any_tree3: Leaf, arg198: (7::(3::(Nil)))
Model : any1: 2, any2: 0, any3: 0, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg198: (Nil)
Model : any1: 0, any2: 7, any3: 5, any4: 0, any5: 7, any_list1: (Nil), any_tree3: Node (Leaf) (1) (Leaf), arg198: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000827 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg198:any list), (any1::(any2::(any3::(any4::((arg198 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg198 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1133


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg198:any list), (any1::(any2::(any3::(any4::((arg198 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg198 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1134


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg199:any list), (any1::(any2::(any3::(any4::((arg199 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg199 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 5, any3: 0, any4: 0, any5: 0, any_list1: (0::(Nil)), any_tree3: Leaf, arg199: (2::(Nil))
Model : any1: 6, any2: 5, any3: 1, any4: 1, any5: 3, any_list1: (Nil), any_tree3: Leaf, arg199: (0::(6::(Nil)))
Model : any1: 5, any2: 8, any3: 8, any4: 2, any5: 2, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg199: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000988 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg199:any list), (any1::(any2::(any3::(any4::((arg199 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg199 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1135


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg199:any list), (any1::(any2::(any3::(any4::((arg199 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg199 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1136


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1137


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg200:any list), (any1::(any2::(any3::(any4::((arg200 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg200 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 7, any2: 3, any3: 5, any4: 0, any5: 5, any_list1: (Nil), any_tree3: Leaf, arg200: (Nil)
Model : any1: 6, any2: 6, any3: 7, any4: 4, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg200: (4::(Nil))
Model : any1: 6, any2: 0, any3: 3, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Node (Node (Node (Node (Leaf) (6) (Leaf)) (1) (Node (Leaf) (6) (Leaf))) (6) (Leaf)) (8) (Leaf), arg200: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002707 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg200:any list), (any1::(any2::(any3::(any4::((arg200 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg200 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1138


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg200:any list), (any1::(any2::(any3::(any4::((arg200 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg200 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1139


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg201:any list), (any1::(any2::(any3::(any4::((arg201 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg201 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 2, any3: 1, any4: 1, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (0) (Leaf), arg201: (Nil)
Model : any1: 3, any2: 5, any3: 4, any4: 3, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg201: (Nil)
Model : any1: 2, any2: 1, any3: 0, any4: 4, any5: 4, any_list1: (6::(Nil)), any_tree3: Leaf, arg201: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000474 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg201:any list), (any1::(any2::(any3::(any4::((arg201 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg201 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1140


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg201:any list), (any1::(any2::(any3::(any4::((arg201 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg201 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1141


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg202:any list), (any1::(any2::(any3::(any4::((arg202 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg202 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 2, any3: 5, any4: 1, any5: 3, any_list1: (0::(Nil)), any_tree3: Leaf, arg202: (Nil)
Model : any1: 5, any2: 8, any3: 3, any4: 0, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg202: (Nil)
Model : any1: 0, any2: 8, any3: 7, any4: 0, any5: 1, any_list1: (Nil), any_tree3: Leaf, arg202: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000403 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg202:any list), (any1::(any2::(any3::(any4::((arg202 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg202 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1142


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg202:any list), (any1::(any2::(any3::(any4::((arg202 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg202 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1143


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg203:any list), (any1::(any2::(any3::(any4::((arg203 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg203 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 0, any2: 0, any3: 8, any4: 0, any5: 4, any_list1: (0::(5::(Nil))), any_tree3: Leaf, arg203: (Nil)
Model : any1: 5, any2: 0, any3: 7, any4: 2, any5: 2, any_list1: (Nil), any_tree3: Leaf, arg203: (Nil)
Model : any1: 4, any2: 3, any3: 0, any4: 5, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg203: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000474 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg203:any list), (any1::(any2::(any3::(any4::((arg203 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg203 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1144


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg203:any list), (any1::(any2::(any3::(any4::((arg203 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg203 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1145


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg204:any list), (any1::(any2::(any3::(any4::((arg204 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg204 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 6, any3: 0, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg204: (Nil)
Model : any1: 6, any2: 8, any3: 0, any4: 7, any5: 0, any_list1: (3::(Nil)), any_tree3: Leaf, arg204: (Nil)
Model : any1: 0, any2: 2, any3: 0, any4: 2, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Leaf), arg204: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000519 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg204:any list), (any1::(any2::(any3::(any4::((arg204 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg204 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1146


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg204:any list), (any1::(any2::(any3::(any4::((arg204 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg204 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1147


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree), (any1::(any2::(any3::(any4::(revflat (any_tree1) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree1) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_tree1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1148


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
Base2 : any_tree1 = Leaf
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Leaf) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Leaf) (any_list1)))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 1149


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (Node (any_tree2) (any5) (any_tree3)) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (Node (any_tree2) (any5) (any_tree3)) (any_list1)))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12)
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any2(rank:12)
=================================================
Progress: 1150


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
intro any3(rank:12)
=================================================
Progress: 1151


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1152


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1153


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1154


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1155


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12)
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1156


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1157


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1158


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1159


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1160


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1161


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1162


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1163


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1164


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1165


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg205:any list), (any1::(any2::(any3::(any4::((arg205 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg205 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 3, any2: 1, any3: 4, any4: 1, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg205: (Nil)
Model : any1: 2, any2: 2, any3: 7, any4: 2, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (7) (Leaf), arg205: (5::(Nil))
Model : any1: 1, any2: 2, any3: 7, any4: 0, any5: 0, any_list1: (Nil), any_tree3: Leaf, arg205: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000825 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg205:any list), (any1::(any2::(any3::(any4::((arg205 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg205 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1166


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg205:any list), (any1::(any2::(any3::(any4::((arg205 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg205 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1167


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any4(rank:12)
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1168


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1169


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1170


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1171


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1172


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1173


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg206:any list), (any1::(any2::(any3::(any4::((arg206 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg206 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 5, any2: 0, any3: 5, any4: 7, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg206: (Nil)
Model : any1: 7, any2: 7, any3: 4, any4: 6, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg206: (Nil)
Model : any1: 0, any2: 4, any3: 3, any4: 5, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg206: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000720 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg206:any list), (any1::(any2::(any3::(any4::((arg206 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg206 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1174


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg206:any list), (any1::(any2::(any3::(any4::((arg206 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg206 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1175


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1176


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1177


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1178


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg207:any list), (any1::(any2::(any3::(any4::((arg207 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg207 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 1, any2: 5, any3: 8, any4: 0, any5: 8, any_list1: (Nil), any_tree3: Leaf, arg207: (Nil)
Model : any1: 7, any2: 1, any3: 5, any4: 6, any5: 6, any_list1: (0::(Nil)), any_tree3: Leaf, arg207: (Nil)
Model : any1: 6, any2: 5, any3: 3, any4: 8, any5: 4, any_list1: (Nil), any_tree3: Leaf, arg207: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000489 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg207:any list), (any1::(any2::(any3::(any4::((arg207 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg207 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1179


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg207:any list), (any1::(any2::(any3::(any4::((arg207 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg207 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1180


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1181


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg208:any list), (any1::(any2::(any3::(any4::((arg208 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg208 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 6, any2: 4, any3: 4, any4: 4, any5: 6, any_list1: (Nil), any_tree3: Node (Node (Leaf) (1) (Leaf)) (5) (Leaf), arg208: (3::(Nil))
Model : any1: 1, any2: 5, any3: 0, any4: 8, any5: 2, any_list1: (5::(Nil)), any_tree3: Leaf, arg208: (Nil)
Model : any1: 5, any2: 7, any3: 7, any4: 7, any5: 5, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Leaf), arg208: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001184 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg208:any list), (any1::(any2::(any3::(any4::((arg208 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg208 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1182


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg208:any list), (any1::(any2::(any3::(any4::((arg208 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg208 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1183


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg209:any list), (any1::(any2::(any3::(any4::((arg209 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg209 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
Model : any1: 2, any2: 6, any3: 4, any4: 8, any5: 6, any_list1: (Nil), any_tree3: Leaf, arg209: (Nil)
Model : any1: 1, any2: 4, any3: 8, any4: 4, any5: 0, any_list1: (Nil), any_tree3: Node (Leaf) (3) (Leaf), arg209: (Nil)
Model : any1: 3, any2: 0, any3: 0, any4: 3, any5: 7, any_list1: (Nil), any_tree3: Leaf, arg209: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000595 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg209:any list), (any1::(any2::(any3::(any4::((arg209 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg209 @ (any5::qrevaflat (any_tree3) (any_list1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1184


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(revflat (any_tree2) @ (any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree3:any tree) (arg209:any list), (any1::(any2::(any3::(any4::((arg209 @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::(arg209 @ (any5::qrevaflat (any_tree3) (any_list1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::(any4::((any_list2 @ (any5::revflat (any_tree1))) @ any_list1))))) = (any1::(any2::(any3::(any4::(any_list2 @ (any5::qrevaflat (any_tree1) (any_list1)))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 1185


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 1186


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 1187


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_tree1:any tree) (any_list2:any list), (any1::(any2::(any3::((any_list2 @ (any4::revflat (any_tree1))) @ any_list1)))) = (any1::(any2::(any3::(any_list2 @ (any4::qrevaflat (any_tree1) (any_list1))))))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_tree1 : any tree
any_tree2 : any tree
any5 : any
any_tree3 : any tree
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree2) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) (any_list1)))))
IH2 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (any1::(any2::(any3::(any4::(revflat (any_tree3) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree3) (any_list1)))))
Inductive1 : any_tree1 = Node (any_tree2) (any5) (any_tree3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (any1::(any2::(any3::(any4::((revflat (any_tree2) @ (any5::revflat (any_tree3))) @ any_list1))))) = (any1::(any2::(any3::(any4::qrevaflat (any_tree2) ((any5::qrevaflat (any_tree3) (any_list1)))))))

1 goal(s) more...

4 conjecture(s) more...
Dilemma timed out for benchmark clam with problem 40.File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
