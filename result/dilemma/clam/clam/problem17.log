Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:nat list) (y:nat list), reverse (reverse ((x @ y))) = (reverse (reverse (x)) @ reverse (reverse (y)))(rank : 0.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:12.)
induction nat_list2(rank:12.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse (((Nil) @ nat_list2))) = (reverse (reverse ((Nil))) @ reverse (reverse (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse (((Nil) @ nat_list2))) = (reverse (reverse ((Nil))) @ reverse (reverse (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse (((nat1::nat_list3) @ nat_list2))) = (reverse (reverse ((nat1::nat_list3))) @ reverse (reverse (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse (((nat1::nat_list3) @ nat_list2))) = (reverse (reverse ((nat1::nat_list3))) @ reverse (reverse (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((nat_list3 @ nat_list2)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:4.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((nat_list3 @ nat_list2)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Lemma List
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (((Nil) @ (Nil))) @ any_list1)) = (reverse ((reverse ((Nil)) @ any_list1)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (((Nil) @ (Nil))) @ any_list1)) = (reverse ((reverse ((Nil)) @ any_list1)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (any_list1) = (reverse (any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7.)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (any_list1) = (reverse (any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse ((any1::any_list2)) = (reverse ((any1::any_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse ((any1::any_list2)) = (reverse ((any1::any_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (any_list2) @ (any1::(Nil))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Lemma List
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
End of Lemma List


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (any_list2) @ (any1::(Nil))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (any_list2) @ (any1::(Nil))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (any_list2) @ (any1::(Nil))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
lemma
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
tactics
assert forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
Deduplication: 0
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (any_list2) @ (any1::(Nil))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (any_list2) @ (any1::(Nil))) = (reverse (any_list2) @ (any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (any_list2) = (reverse (any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (any_list2) @ (any1::(Nil))) = (reverse (any_list2) @ (any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (((nat1::nat_list2) @ (Nil))) @ any_list1)) = (reverse ((reverse ((nat1::nat_list2)) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (((nat1::nat_list2) @ (Nil))) @ any_list1)) = (reverse ((reverse ((nat1::nat_list2)) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list2 @ (Nil))) @ (nat1::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:5.)
rewrite <- lemma3 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 1(rank:13.)
rewrite <- lemma3 in goal at 2(rank:13.)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list2 @ (Nil))) @ (nat1::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
reverse (((reverse ((nat_list2 @ (Nil))) @ (nat1::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 1(rank:13.)
rewrite <- lemma3 in goal at 2(rank:13.)
=================================================
Progress: 23


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse (reverse ((nat_list1 @ (Nil)))) = (reverse (reverse (nat_list1)) @ reverse (reverse ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 24


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse (reverse ((nat_list1 @ (Nil)))) = (reverse (reverse (nat_list1)) @ reverse (reverse ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse (reverse ((nat_list1 @ (Nil)))) = (reverse (reverse (nat_list1)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:5.)
=================================================
Progress: 25


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse (reverse ((nat_list1 @ (Nil)))) = (reverse (reverse (nat_list1)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((Nil) @ (Nil)))) = (reverse (reverse ((Nil))) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 26


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((Nil) @ (Nil)))) = (reverse (reverse ((Nil))) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((nat_list3 @ (Nil)))) = (reverse (reverse (nat_list3)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (reverse (((nat1::nat_list3) @ (Nil)))) = (reverse (reverse ((nat1::nat_list3))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 27


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((nat_list3 @ (Nil)))) = (reverse (reverse (nat_list3)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (reverse (((nat1::nat_list3) @ (Nil)))) = (reverse (reverse ((nat1::nat_list3))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((nat_list3 @ (Nil)))) = (reverse (reverse (nat_list3)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 28


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list2 @ (Nil))) @ (nat1::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) = reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 29


1st goal of : forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), reverse ((reverse ((nat_list2 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list2) @ any_list1)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) = reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
lemma
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
tactics
assert forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
induction nat_list1
simpl in goal
induction any_list1
reflexivity
simpl in goal
assert forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma3 in goal at 0
reflexivity
Deduplication: 5
Tactic List : 5
rewrite lemma4 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 1(rank:12.)
rewrite <- lemma3 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:12.)
=================================================
Progress: 30


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse ((nat_list3 @ (Nil))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
(reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil)) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 31


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
(reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil)) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse ((nat2::nat_list4))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 4
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 32


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse ((nat2::nat_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma3 in goal at 0
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
Lemma List
forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 33


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 34


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse (((Nil) @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse ((Nil)) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 35


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse (((Nil) @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse ((Nil)) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) = (reverse (any_list1) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7.)
=================================================
Progress: 36


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1)) = (reverse (any_list1) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list2) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:8.)
=================================================
Progress: 38


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list2) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 8.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse ((Nil)) @ (nat1::(Nil))))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 39


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse ((Nil)) @ (nat1::(Nil))))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
rewrite <- lemma3 in goal at 0(rank:15.)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:7.)
=================================================
Progress: 42


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))) = reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 43


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = reverse ((reverse (nat_list3) @ (nat1::(Nil))))
Inductive1 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))) = reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2))) = (reverse ((any1::any_list2)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 44


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2))) = (reverse ((any1::any_list2)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:7.)
=================================================
Progress: 45


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse ((Nil)) @ (nat1::(Nil)))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 46


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse ((Nil)) @ (nat1::(Nil)))))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse ((nat2::nat_list3)) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 47


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse ((nat2::nat_list3)) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 48


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
End of Lemma List


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 49


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 50


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(Nil)))) = ((reverse ((Nil)) @ (any1::(Nil))) @ reverse (any_list2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(Nil)))) = ((reverse ((Nil)) @ (any1::(Nil))) @ reverse (any_list2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9.)
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), reverse (((any2::any_list3) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list3)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), reverse (((any2::any_list3) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list3)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:8.)
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
(reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
(reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
((any1::reverse (any_list3)) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
((any1::reverse (any_list3)) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(any2::any_list3)))) = ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ reverse (any_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(any2::any_list3)))) = ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ reverse (any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8.)
=================================================
Progress: 59


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 60


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), ((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:8.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), ((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:8.)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any), reverse (((any3::any_list4) @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse ((any3::any_list4)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any), reverse (((any3::any_list4) @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse ((any3::any_list4)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any), (reverse ((any_list4 @ (any1::(any2::any_list3)))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:7.)
rewrite IH2 in goal at 0(rank:15.)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any), (reverse ((any_list4 @ (any1::(any2::any_list3)))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
(reverse ((any_list4 @ (any1::(any2::any_list3)))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
(reverse ((any_list4 @ (any1::(any2::any_list3)))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
((((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4)) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any1
Lemma List
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
(reverse ((any_list4 @ (any1::(any2::any_list3)))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
((((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4)) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 67


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
(reverse ((any_list4 @ (any1::(any2::any_list3)))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))(rank : 0.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10.)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
((((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4)) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10.)
=================================================
Progress: 69


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(Nil))))) @ any_list3) = (((reverse ((Nil)) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 70


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), (((Nil) @ any_list3) @ any_list2) = ((Nil) @ (any_list3 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 71


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), (((Nil) @ any_list3) @ any_list2) = ((Nil) @ (any_list3 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), (((any1::any_list4) @ any_list3) @ any_list2) = ((any1::any_list4) @ (any_list3 @ any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 72


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), (((any1::any_list4) @ any_list3) @ any_list2) = ((any1::any_list4) @ (any_list3 @ any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), (any1::((any_list4 @ any_list3) @ any_list2)) = (any1::(any_list4 @ (any_list3 @ any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:10.)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(Nil))))) @ any_list3) = (((reverse ((Nil)) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list2) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:11.)
=================================================
Progress: 74


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), (any1::((any_list4 @ any_list3) @ any_list2)) = (any1::(any_list4 @ (any_list3 @ any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list3(rank : 10.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (Nil)) @ any_list2)) = (any1::(any_list4 @ ((Nil) @ any_list2)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 75


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (Nil)) @ any_list2)) = (any1::(any_list4 @ ((Nil) @ any_list2)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (Nil)) @ any_list2)) = (any1::(any_list4 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:10.)
rewrite IH1 in goal at 0(rank:26.)
rewrite <- lemma3 in goal at 0(rank:18.)
=================================================
Progress: 76


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (Nil)) @ any_list2)) = (any1::(any_list4 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 10.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list2 : any list
---------------------------------------
(any1::((any_list4 @ (Nil)) @ any_list2)) = (any1::(any_list4 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- lemma3 in goal at 0(rank:18.)
rewrite IH1 in goal at 0(rank:26.)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list2) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 11.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((Nil) @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse ((Nil)) @ any_list3)))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((Nil) @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse ((Nil)) @ any_list3)))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((any3::any_list4) @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse ((any3::any_list4)) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((any3::any_list4) @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse ((any3::any_list4)) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:10.)
intro any2(rank:10.)
intro any_list3(rank:10.)
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:10.)
intro any_list3(rank:10.)
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 81


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any2 : any
---------------------------------------
forall (any1:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:10.)
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list3(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:10.)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any1 : any
any2 : any
---------------------------------------
forall (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:10.)
rewrite IH1 in goal at 0(rank:18.)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list3(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any2:any), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:10.)
=================================================
Progress: 85


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any2 : any
---------------------------------------
forall (any1:any) (any_list3:any list), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro any_list3(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any2 : any
any_list3 : any list
---------------------------------------
forall (any1:any), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:10.)
=================================================
Progress: 86


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((reverse ((any_list4 @ (any1::(any2::(Nil))))) @ (any3::(Nil))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((any2::(any1::(reverse (any_list4) @ (any3::(Nil))))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list4 @ (any1::(any2::(Nil))))) @ any_list3) = (any2::(any1::(reverse (any_list4) @ any_list3)))
Inductive1 : any_list2 = (any3::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((any2::(any1::(reverse (any_list4) @ (any3::(Nil))))) @ any_list3) = (any2::(any1::((reverse (any_list4) @ (any3::(Nil))) @ any_list3)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = (((reverse ((any3::any_list4)) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 88


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = (((reverse ((any3::any_list4)) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10.)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((Nil) @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse ((Nil)) @ any_list3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 90


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((Nil) @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse ((Nil)) @ any_list3))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((any4::any_list5) @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse ((any4::any_list5)) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (reverse (((any4::any_list5) @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse ((any4::any_list5)) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:9.)
intro any2(rank:9.)
intro any_list3(rank:9.)
rewrite IH2 in goal at 0(rank:17.)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:9.)
intro any_list3(rank:9.)
rewrite IH2 in goal at 0(rank:17.)
=================================================
Progress: 93


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:9.)
rewrite IH2 in goal at 0(rank:17.)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list3(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:9.)
=================================================
Progress: 95


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:9.)
rewrite IH2 in goal at 0(rank:17.)
=================================================
Progress: 96


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list3(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any_list3 : any list
---------------------------------------
forall (any2:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:9.)
=================================================
Progress: 97


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list3(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any2 : any
any_list3 : any list
---------------------------------------
forall (any1:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:9.)
=================================================
Progress: 98


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any_list3
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Lemma List
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 99


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12.)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any_list3 : any list
---------------------------------------
forall (any1:any) (any2:any), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12.)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list3(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any2 : any
any_list3 : any list
---------------------------------------
((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:9.)
=================================================
Progress: 102


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any_list3 : any list
---------------------------------------
forall (any2:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any_list3 : any list
---------------------------------------
forall (any2:any), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any1
intro any_list3
=================================================
Progress: 103


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any2 : any
any_list3 : any list
---------------------------------------
forall (any1:any), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any2 : any
any_list3 : any list
---------------------------------------
forall (any1:any), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list3
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any2
intro any_list3
=================================================
Progress: 104


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any2 : any
any_list3 : any list
---------------------------------------
((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 9.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any2 : any
any_list3 : any list
---------------------------------------
(((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list3
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list3
=================================================
Progress: 105


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = ((((reverse ((Nil)) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 106


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (any_list3:any list), (((Nil) @ any_list3) @ any_list1) = ((Nil) @ (any_list3 @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 107


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (any_list3:any list), (((Nil) @ any_list3) @ any_list1) = ((Nil) @ (any_list3 @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
---------------------------------------
forall (any_list1:any list) (any_list3:any list), (((any1::any_list4) @ any_list3) @ any_list1) = ((any1::any_list4) @ (any_list3 @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 108


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
---------------------------------------
forall (any_list1:any list) (any_list3:any list), (((any1::any_list4) @ any_list3) @ any_list1) = ((any1::any_list4) @ (any_list3 @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
---------------------------------------
forall (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ any_list3) @ any_list1)) = (any1::(any_list4 @ (any_list3 @ any_list1)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:12.)
=================================================
Progress: 109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = ((((reverse ((Nil)) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list3) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:13.)
=================================================
Progress: 110


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
---------------------------------------
forall (any_list1:any list) (any_list3:any list), (any1::((any_list4 @ any_list3) @ any_list1)) = (any1::(any_list4 @ (any_list3 @ any_list1)))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list3(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list1:any list), (any1::((any_list4 @ (Nil)) @ any_list1)) = (any1::(any_list4 @ ((Nil) @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 111


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list1:any list), (any1::((any_list4 @ (Nil)) @ any_list1)) = (any1::(any_list4 @ ((Nil) @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list1:any list), (any1::((any_list4 @ (Nil)) @ any_list1)) = (any1::(any_list4 @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:12.)
rewrite IH1 in goal at 0(rank:28.)
rewrite <- lemma3 in goal at 0(rank:20.)
=================================================
Progress: 112


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list1:any list), (any1::((any_list4 @ (Nil)) @ any_list1)) = (any1::(any_list4 @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list2 @ any_list3) @ any_list1) = (any_list2 @ (any_list3 @ any_list1))
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list1:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list1) = (any_list4 @ (any_list3 @ any_list1))
Inductive1 : any_list2 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list1 : any list
---------------------------------------
(any1::((any_list4 @ (Nil)) @ any_list1)) = (any1::(any_list4 @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
rewrite <- lemma3 in goal at 0(rank:20.)
rewrite IH1 in goal at 0(rank:28.)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list3) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_list3(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse (((Nil) @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse ((Nil)) @ any_list4) @ any_list1))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse (((Nil) @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse ((Nil)) @ any_list4) @ any_list1))))

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse (((any4::any_list5) @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse ((any4::any_list5)) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse (((any4::any_list5) @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse ((any4::any_list5)) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro any1(rank:12.)
intro any3(rank:12.)
intro any_list1(rank:12.)
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
intro any2(rank:12.)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any2(rank:12.)
intro any_list1(rank:12.)
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
intro any3(rank:12.)
=================================================
Progress: 117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12.)
intro any_list1(rank:12.)
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:12.)
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list4(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any3(rank:12.)
intro any_list1(rank:12.)
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:12.)
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list4(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 125


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:12.)
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 126


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 127


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list4(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any2 : any
any_list4 : any list
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 128


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list4(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 129


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list4(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any3 : any
any_list4 : any list
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 130


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list4:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list4(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 131


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ (any4::(Nil))) @ any_list4) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((any3::(any2::(any1::((reverse (any_list5) @ (any4::(Nil))) @ any_list4)))) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 132


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::(Nil)))))) @ any_list4) @ any_list1) = (any3::(any2::(any1::((reverse (any_list5) @ any_list4) @ any_list1))))
Inductive1 : any_list3 = (any4::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((any3::(any2::(any1::((reverse (any_list5) @ (any4::(Nil))) @ any_list4)))) @ any_list1) = (any3::(any2::(any1::(((reverse (any_list5) @ (any4::(Nil))) @ any_list4) @ any_list1))))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(any4::any_list5)))))) @ any_list4) @ any_list1) = ((((reverse ((any4::any_list5)) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 25
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 133


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(any4::any_list5)))))) @ any_list4) @ any_list1) = ((((reverse ((any4::any_list5)) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(any4::any_list5)))))) @ any_list4) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:12.)
=================================================
Progress: 134


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::(any4::any_list5)))))) @ any_list4) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse (((Nil) @ (any1::(any2::(any3::(any4::any_list5)))))) @ any_list4) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse ((Nil)) @ any_list4) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 135


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((reverse (((Nil) @ (any1::(any2::(any3::(any4::any_list5)))))) @ any_list4) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse ((Nil)) @ any_list4) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list4) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list4 @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:13.)
=================================================
Progress: 136


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list4:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list4) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list4 @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_list4(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((Nil) @ any_list1))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 137


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((Nil) @ any_list1))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any1(rank:13.)
intro any3(rank:13.)
intro any_list1(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
intro any2(rank:13.)
=================================================
Progress: 138


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any2(rank:13.)
intro any3(rank:13.)
intro any_list1(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 139


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:13.)
intro any_list1(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 140


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 141


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 142


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:13.)
intro any_list1(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 143


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 144


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 145


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 146


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 148


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 13.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 149


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
Base2 : any_list4 = (Nil)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((any5::any_list6) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 14
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 150


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((any5::any_list6) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any1(rank:12.)
intro any2(rank:12.)
intro any3(rank:12.)
intro any_list1(rank:12.)
=================================================
Progress: 151


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any2(rank:12.)
intro any3(rank:12.)
intro any_list1(rank:12.)
=================================================
Progress: 152


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:12.)
intro any_list1(rank:12.)
=================================================
Progress: 153


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12.)
=================================================
Progress: 154


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 155


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14.)
=================================================
Progress: 156


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:12.)
intro any_list1(rank:12.)
=================================================
Progress: 157


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12.)
=================================================
Progress: 158


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
=================================================
Progress: 159


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12.)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
=================================================
Progress: 161


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
=================================================
Progress: 162


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:12.)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
=================================================
Progress: 164


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
=================================================
Progress: 165


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
=================================================
Progress: 166


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 12.)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list2))))) @ any_list4) @ any_list1) = ((((reverse (any_list2) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
any_list2 : any list
any4 : any
any_list5 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list) (any_list4:any list), ((reverse ((any_list3 @ (any1::(any2::(any3::any_list5))))) @ any_list4) @ any_list1) = ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list3) @ any_list4) @ any_list1))
Inductive1 : any_list2 = (any4::any_list5)
any_list3 : any list
Base1 : any_list3 = (Nil)
any_list4 : any list
any5 : any
any_list6 : any list
IH2 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), ((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list6) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any_list6 @ any_list1))
Inductive2 : any_list4 = (any5::any_list6)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
((((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::any_list6)) @ any_list1) = (((((reverse (any_list5) @ (any4::(Nil))) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any5::(any_list6 @ any_list1)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
=================================================
Progress: 167


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list2(rank : 14.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::((Nil) @ any_list1)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::((Nil) @ any_list1)))

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:15.)
=================================================
Progress: 169


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any), (reverse ((any_list4 @ (any1::(any2::any_list3)))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
---------------------------------------
forall (any1:any), ((((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4)) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
previous tactics
simpl in goal
=================================================
Progress: 170


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))

1 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 15.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 171


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

2 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list4) @ (any1::(Nil))) @ any_list1) = ((any2::any_list4) @ (any1::any_list1))

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 172


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list4) @ (any1::(Nil))) @ any_list1) = ((any2::any_list4) @ (any1::any_list1))

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list4 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list4 @ (any1::any_list1)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro any1(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:30.)
intro any_list1(rank:14.)
=================================================
Progress: 173


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list4 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list4 @ (any1::any_list1)))

1 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 14.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list4 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list4 @ (any1::any_list1)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
intro any_list1(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:30.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 174


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list4 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list4 @ (any1::any_list1)))

1 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 14.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list4 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list4 @ (any1::any_list1)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:30.)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list4 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list4 @ (any1::any_list1)))

1 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 14.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list3 @ (any1::any_list2)) @ any_list1) = (any_list3 @ (any1::(any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list3 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list4 @ (any1::(Nil))) @ any_list1) = (any_list4 @ (any1::any_list1))
Inductive1 : any_list3 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
(any2::((any_list4 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list4 @ (any1::any_list1)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:30.)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
previous tactics
simpl in goal
=================================================
Progress: 177


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
---------------------------------------
forall (any2:any) (any_list3:any list), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any1
=================================================
Progress: 178


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any2 : any
---------------------------------------
forall (any1:any) (any_list3:any list), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any2
=================================================
Progress: 179


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list3:any list), ((reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ (any4::(Nil))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list1)))) @ any_list3) = (((reverse (any_list1) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
any_list1 : any list
any3 : any
any_list4 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), (reverse ((any_list2 @ (any1::(any2::any_list4)))) @ any_list3) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list2) @ any_list3))
Inductive1 : any_list1 = (any3::any_list4)
any_list2 : any list
any4 : any
any_list5 : any list
IH2 : forall (any1:any) (any2:any) (any_list3:any list), (reverse ((any_list5 @ (any1::(any2::(any3::any_list4))))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ any_list3))
Inductive2 : any_list2 = (any4::any_list5)
any1 : any
any2 : any
---------------------------------------
forall (any_list3:any list), (((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list5) @ (any4::(Nil)))) @ any_list3) = ((((reverse (any_list4) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ ((reverse (any_list5) @ (any4::(Nil))) @ any_list3))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
rewrite IH2 in goal at 0
previous tactics
simpl in goal
intro any1
intro any2
=================================================
Progress: 180


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (Nil)) @ any_list2)) = (any1::(any_list4 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 18.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), (any1::(any_list4 @ any_list2)) = (any1::(any_list4 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 181


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), (any1::(any_list4 @ any_list2)) = (any1::(any_list4 @ any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (any2::any_list5)) @ any_list2)) = (any1::(any_list4 @ ((any2::any_list5) @ any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 182


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (any2::any_list5)) @ any_list2)) = (any1::(any_list4 @ ((any2::any_list5) @ any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (any2::any_list5)) @ any_list2)) = (any1::(any_list4 @ (any2::(any_list5 @ any_list2))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
=================================================
Progress: 183


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any_list2:any list), (any1::((any_list4 @ (any2::any_list5)) @ any_list2)) = (any1::(any_list4 @ (any2::(any_list5 @ any_list2))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
(any1::((any_list4 @ (any2::any_list5)) @ any_list2)) = (any1::(any_list4 @ (any2::(any_list5 @ any_list2))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 184


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
(any1::((any_list4 @ (any2::any_list5)) @ any_list2)) = (any1::(any_list4 @ (any2::(any_list5 @ any_list2))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
(any1::(any_list4 @ ((any2::any_list5) @ any_list2))) = (any1::(any_list4 @ (any2::(any_list5 @ any_list2))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 185


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
any_list1 : any list
any1 : any
any_list4 : any list
IH1 : forall (any_list2:any list) (any_list3:any list), ((any_list4 @ any_list3) @ any_list2) = (any_list4 @ (any_list3 @ any_list2))
Inductive1 : any_list1 = (any1::any_list4)
any_list3 : any list
any2 : any
any_list5 : any list
IH2 : forall (any_list2:any list), (any1::((any_list4 @ any_list5) @ any_list2)) = (any1::(any_list4 @ (any_list5 @ any_list2)))
Inductive2 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
(any1::(any_list4 @ ((any2::any_list5) @ any_list2))) = (any1::(any_list4 @ (any2::(any_list5 @ any_list2))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
((((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4)) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
original goal
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
lemma
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
tactics
assert forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
induction any_list1
reflexivity
simpl in goal
induction any_list3
simpl in goal
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
reflexivity
Deduplication: 1
Tactic List : 5
rewrite lemma5 in goal at 1(rank:15.)
rewrite lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 0(rank:15.)
rewrite lemma5 in goal at 2(rank:23.)
rewrite lemma5 in goal at 3(rank:23.)
=================================================
Progress: 186


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
((((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4)) @ (any3::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma5 in goal at 1(rank : 15.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
(((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 187


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
any3 : any
any_list4 : any list
IH2 : forall (any1:any), reverse ((any_list4 @ (any1::(any2::any_list3)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ reverse (any_list4))
Inductive2 : any_list2 = (any3::any_list4)
any1 : any
---------------------------------------
(((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil)))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (reverse (any_list4) @ (any3::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
lemma
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
tactics
assert forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
simpl in goal
induction any_list2
simpl in goal
intro any1
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
intro any1
rewrite IH2 in goal at 0
assert forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
induction any_list1
reflexivity
simpl in goal
induction any_list3
simpl in goal
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 1
reflexivity
Deduplication: 24
Tactic List : 8
rewrite lemma5 in goal at 3(rank:14.)
rewrite lemma6 in goal at 0(rank:14.)
rewrite <- lemma6 in goal at 0(rank:14.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma6 in goal at 1(rank:14.)
rewrite lemma5 in goal at 2(rank:22.)
=================================================
Progress: 188


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 3(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = (reverse (any_list2) @ ((any1::(Nil)) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 189


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = (reverse (any_list2) @ ((any1::(Nil)) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = (reverse (any_list2) @ (any1::reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:14.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma6 in goal at 1(rank:14.)
=================================================
Progress: 190


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))) = ((reverse (any_list2) @ (any1::(Nil))) @ ((reverse ((Nil)) @ (nat1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat2::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 191


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))) = ((reverse (any_list2) @ (any1::(Nil))) @ ((reverse ((Nil)) @ (nat1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat2::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))) = ((reverse (any_list2) @ (any1::(Nil))) @ (nat1::reverse ((reverse (nat_list3) @ (nat2::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite <- lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
=================================================
Progress: 192


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 193


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat_list2:nat list), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2)) = (reverse (any_list2) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH2 : forall (nat1:nat), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse ((reverse (nat_list3) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))))) = ((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse (((nat2::nat_list3) @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse ((nat2::nat_list3)) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 20
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 194


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse (((nat2::nat_list3) @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse ((nat2::nat_list3)) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse (((reverse ((nat_list3 @ (nat1::nat_list2))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:6.)
=================================================
Progress: 195


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse (((reverse ((nat_list3 @ (nat1::nat_list2))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse ((Nil)) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 196


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse ((Nil)) @ (nat1::(Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any_list1(rank:6.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
intro nat1(rank:6.)
=================================================
Progress: 197


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:6.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
=================================================
Progress: 198


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
=================================================
Progress: 199


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
=================================================
Progress: 200


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 22.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 201


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:6.)
rewrite lemma6 in goal at 0(rank:14.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma6 in goal at 3(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
intro nat1(rank:6.)
=================================================
Progress: 202


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:6.)
rewrite lemma6 in goal at 0(rank:14.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma6 in goal at 3(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 203


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:14.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma6 in goal at 3(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 204


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:14.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma6 in goal at 3(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 205


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7.)
=================================================
Progress: 206


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), ((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 207


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), ((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), (nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
rewrite lemma6 in goal at 0(rank:23.)
=================================================
Progress: 208


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), (nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat1 : nat
---------------------------------------
(nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma6 in goal at 0(rank:7.)
=================================================
Progress: 209


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat1 : nat
---------------------------------------
(nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat1 : nat
---------------------------------------
(nat2::reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 210


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat1 : nat
---------------------------------------
(nat2::reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), ((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 211


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), ((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:6.)
rewrite lemma5 in goal at 3(rank:14.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
=================================================
Progress: 212


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 3(rank:14.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
=================================================
Progress: 213


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 2(rank:14.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
=================================================
Progress: 214


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma5 in goal at 2(rank:14.)
induction any_list1(rank:15.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
=================================================
Progress: 215


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 2(rank:14.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
=================================================
Progress: 216


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 3(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
=================================================
Progress: 217


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 3(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : forall (nat1:nat), ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
=================================================
Progress: 218


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse (any_list1) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite <- lemma6 in goal at 0(rank:22.)
=================================================
Progress: 219


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse (any_list1) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
induction any_list1(rank:15.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite <- lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
=================================================
Progress: 220


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse (any_list1) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite <- lemma6 in goal at 0(rank:22.)
=================================================
Progress: 221


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 222


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma6 in goal at 0(rank:7.)
=================================================
Progress: 223


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 224


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 225


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 3(rank:14.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
=================================================
Progress: 226


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 3(rank : 14.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse (nat_list3))) @ (nat1::(Nil)))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
=================================================
Progress: 227


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse (any_list1) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse ((Nil)) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 228


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse ((Nil)) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma6 in goal at 0(rank:7.)
=================================================
Progress: 229


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 230


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(nat2::reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)))) = (nat2::(reverse (reverse (nat_list3)) @ (nat1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse (any_list2) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 231


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse (any_list2) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse ((any1::any_list2)) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (any_list2) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = ((reverse (any_list2) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(Nil)))))) = (((reverse (any_list2) @ (any1::(Nil))) @ (nat2::(Nil))) @ (reverse (reverse (nat_list3)) @ (nat1::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 2(rank:22.)
rewrite lemma5 in goal at 3(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite <- lemma5 in goal at 0(rank:22.)
rewrite lemma5 in goal at 1(rank:22.)
=================================================
Progress: 232


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 1(rank : 22.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 233


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any_list1(rank:6.)
rewrite IH1 in goal at 0(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
intro nat1(rank:6.)
=================================================
Progress: 234


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:6.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 235


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
=================================================
Progress: 236


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::any_list1))) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
=================================================
Progress: 237


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 22.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 238


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any_list1(rank:6.)
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
intro nat1(rank:6.)
=================================================
Progress: 239


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:6.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma5 in goal at 0(rank:22.)
=================================================
Progress: 240


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
=================================================
Progress: 241


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 1(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
=================================================
Progress: 242


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(Nil)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 22.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 243


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 114
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 244


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
intro any_list1(rank:5.)
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma5 in goal at 1(rank:21.)
intro nat1(rank:5.)
rewrite lemma6 in goal at 2(rank:21.)
=================================================
Progress: 245


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
intro nat1(rank:5.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma5 in goal at 0(rank:13.)
=================================================
Progress: 246


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 1(rank:21.)
=================================================
Progress: 247


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 1(rank:21.)
=================================================
Progress: 248


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 249


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:5.)
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma6 in goal at 2(rank:13.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
intro nat1(rank:5.)
=================================================
Progress: 250


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:5.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma6 in goal at 2(rank:13.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 251


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma6 in goal at 2(rank:13.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 252


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:13.)
rewrite lemma6 in goal at 2(rank:13.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 253


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 254


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:5.)
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma5 in goal at 0(rank:21.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
intro nat1(rank:5.)
=================================================
Progress: 255


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:5.)
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 256


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma5 in goal at 0(rank:21.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
=================================================
Progress: 257


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma5 in goal at 0(rank:21.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
=================================================
Progress: 258


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma6 in goal at 0(rank:13.)
rewrite <- lemma5 in goal at 1(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
=================================================
Progress: 259


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
=================================================
Progress: 260


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma6 in goal at 0(rank:13.)
rewrite <- lemma5 in goal at 1(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
=================================================
Progress: 261


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
=================================================
Progress: 262


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma6 in goal at 0(rank:13.)
rewrite <- lemma5 in goal at 1(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
=================================================
Progress: 263


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma5 in goal at 1(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
=================================================
Progress: 264


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 265


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any_list1(rank:5.)
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
intro nat1(rank:5.)
=================================================
Progress: 266


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:5.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma5 in goal at 0(rank:13.)
=================================================
Progress: 267


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 268


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
(reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 269


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 270


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), ((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 271


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), ((reverse ((Nil)) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), (nat2::reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:6.)
rewrite lemma6 in goal at 1(rank:14.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma6 in goal at 3(rank:22.)
rewrite lemma6 in goal at 0(rank:22.)
=================================================
Progress: 272


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), (nat2::reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat1 : nat
---------------------------------------
(nat2::reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 1(rank:14.)
rewrite lemma6 in goal at 0(rank:22.)
rewrite lemma6 in goal at 2(rank:22.)
rewrite lemma6 in goal at 3(rank:22.)
=================================================
Progress: 273


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 274


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
intro any_list1(rank:5.)
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 0(rank:13.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma5 in goal at 2(rank:21.)
intro nat1(rank:5.)
rewrite lemma6 in goal at 3(rank:21.)
=================================================
Progress: 275


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
intro nat1(rank:5.)
rewrite lemma6 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma5 in goal at 0(rank:13.)
=================================================
Progress: 276


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma5 in goal at 2(rank:21.)
=================================================
Progress: 277


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 0(rank:13.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma5 in goal at 2(rank:21.)
=================================================
Progress: 278


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
=================================================
Progress: 279


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 280


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
=================================================
Progress: 281


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
=================================================
Progress: 282


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), ((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
induction any_list1(rank:14.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 283


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
=================================================
Progress: 284


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
(reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
=================================================
Progress: 285


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
((reverse (any_list1) @ (nat2::(Nil))) @ reverse (reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:21.)
rewrite lemma6 in goal at 1(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 286


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::any_list1))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma6 in goal at 2(rank:21.)
rewrite lemma6 in goal at 3(rank:21.)
=================================================
Progress: 287


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (reverse (nat_list3) @ (nat2::(Nil)))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 288


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (reverse (nat_list3) @ (nat2::(Nil)))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 289


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (reverse (nat_list3) @ (nat2::(Nil)))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 290


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (reverse (nat_list3) @ (nat2::(Nil)))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 291


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma6 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 1(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
=================================================
Progress: 292


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite <- lemma5 in goal at 2(rank:13.)
rewrite <- lemma5 in goal at 1(rank:21.)
=================================================
Progress: 293


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
---------------------------------------
forall (nat1:nat), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ (reverse (nat_list3) @ (nat2::(Nil)))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 294


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma6 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 1(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
=================================================
Progress: 295


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite <- lemma5 in goal at 2(rank:13.)
rewrite <- lemma5 in goal at 1(rank:21.)
=================================================
Progress: 296


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
nat1 : nat
---------------------------------------
forall (any_list1:any list), reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ (reverse (nat_list3) @ (nat2::(Nil)))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 297


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
(reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse ((nat3::nat_list4)) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma6 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 1(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
=================================================
Progress: 298


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat1::(nat3::nat_list4)))) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ ((nat2::(Nil)) @ any_list1))) = (reverse ((reverse (nat_list3) @ ((nat2::(Nil)) @ any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite <- lemma5 in goal at 2(rank:13.)
rewrite <- lemma5 in goal at 1(rank:21.)
=================================================
Progress: 299


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse (((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ reverse (nat_list3)) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
any_list1 : any list
nat1 : nat
---------------------------------------
reverse ((((reverse ((nat3::nat_list4)) @ (nat1::(Nil))) @ (reverse (nat_list3) @ (nat2::(Nil)))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 1(rank:13.)
rewrite lemma5 in goal at 2(rank:21.)
rewrite lemma5 in goal at 3(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite lemma5 in goal at 0(rank:21.)
=================================================
Progress: 300


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse (((reverse (nat_list4) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil)))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 301


1st goal of : forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
nat_list1 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (any_list1:any list) (nat1:nat) (nat_list2:nat list), reverse ((reverse ((nat_list3 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list3) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
Inductive1 : nat_list1 = (nat2::nat_list3)
nat_list2 : nat list
nat3 : nat
nat_list4 : nat list
IH2 : forall (any_list1:any list) (nat1:nat), reverse (((reverse ((nat_list3 @ (nat1::nat_list4))) @ (nat2::(Nil))) @ any_list1)) = (reverse (((reverse (nat_list3) @ (nat2::(Nil))) @ any_list1)) @ reverse ((reverse (nat_list4) @ (nat1::(Nil)))))
Inductive2 : nat_list2 = (nat3::nat_list4)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ ((nat3::(Nil)) @ (nat1::(Nil)))))) = (reverse ((reverse (nat_list3) @ (nat2::any_list1))) @ reverse ((reverse (nat_list4) @ (nat3::(nat1::(Nil))))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
lemma
forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
tactics
assert forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
induction nat_list1
simpl in goal
induction any_list1
simpl in goal
induction nat_list2
reflexivity
simpl in goal
intro nat1
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
induction nat_list2
reflexivity
simpl in goal
intro nat1
assert forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
simpl in goal
induction any_list2
simpl in goal
intro any1
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
intro any1
rewrite IH2 in goal at 0
assert forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
induction any_list1
reflexivity
simpl in goal
induction any_list3
simpl in goal
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 1
reflexivity
rewrite lemma6 in goal at 1
reflexivity
simpl in goal
induction nat_list2
simpl in goal
rewrite lemma6 in goal at 0
reflexivity
simpl in goal
rewrite lemma5 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
rewrite lemma5 in goal at 0
reflexivity
Deduplication: 207
Tactic List : 6
rewrite lemma6 in goal at 1(rank:11.)
rewrite lemma6 in goal at 2(rank:11.)
rewrite lemma6 in goal at 3(rank:19.)
rewrite lemma7 in goal at 0(rank:11.)
rewrite <- lemma7 in goal at 0(rank:11.)
rewrite lemma6 in goal at 0(rank:19.)
=================================================
Progress: 302


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (reverse ((nat_list3 @ (nat2::nat_list4))))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 303


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
((reverse ((Nil)) @ (nat1::(Nil))) @ reverse (reverse ((nat_list3 @ (nat2::nat_list4))))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
(nat1::reverse (reverse ((nat_list3 @ (nat2::nat_list4))))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 0(rank:11.)
rewrite lemma6 in goal at 1(rank:11.)
rewrite lemma6 in goal at 2(rank:19.)
rewrite <- lemma7 in goal at 0(rank:11.)
rewrite lemma6 in goal at 3(rank:19.)
rewrite lemma6 in goal at 0(rank:19.)
=================================================
Progress: 304


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((((reverse (nat_list4) @ (nat2::(Nil))) @ reverse (nat_list3)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:11.)
rewrite lemma6 in goal at 2(rank:19.)
rewrite lemma6 in goal at 3(rank:19.)
rewrite <- lemma7 in goal at 0(rank:19.)
rewrite lemma5 in goal at 2(rank:19.)
=================================================
Progress: 305


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse ((reverse ((nat_list3 @ (nat2::nat_list4))) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma7 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
(reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 306


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse (reverse ((nat_list3 @ nat_list2))) = (reverse (reverse (nat_list3)) @ reverse (reverse (nat_list2)))
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse ((reverse ((nat_list3 @ nat_list4)) @ (nat1::(Nil)))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse (reverse (nat_list4)))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
(reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil))))) = (reverse ((reverse (nat_list3) @ (nat1::(Nil)))) @ reverse ((reverse (nat_list4) @ (nat2::(Nil)))))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (nat_list1:nat list) (nat_list2:nat list), reverse (reverse ((nat_list1 @ nat_list2))) = (reverse (reverse (nat_list1)) @ reverse (reverse (nat_list2)))
induction nat_list1
reflexivity
simpl in goal
induction nat_list2
simpl in goal
assert forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse ((nat_list1 @ (Nil))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ (Nil))
induction nat_list1
simpl in goal
induction any_list1
reflexivity
simpl in goal
assert forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma3 in goal at 0
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
assert forall (any_list1:any list) (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse ((nat_list1 @ (nat1::nat_list2))) @ any_list1)) = (reverse ((reverse (nat_list1) @ any_list1)) @ reverse ((reverse (nat_list2) @ (nat1::(Nil)))))
induction nat_list1
simpl in goal
induction any_list1
simpl in goal
induction nat_list2
reflexivity
simpl in goal
intro nat1
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
induction nat_list2
reflexivity
simpl in goal
intro nat1
assert forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list2 @ (any1::any_list1))) = ((reverse (any_list1) @ (any1::(Nil))) @ reverse (any_list2))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
simpl in goal
induction any_list2
simpl in goal
intro any1
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
intro any1
rewrite IH2 in goal at 0
assert forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((any_list1 @ any_list3) @ any_list2) = (any_list1 @ (any_list3 @ any_list2))
induction any_list1
reflexivity
simpl in goal
induction any_list3
simpl in goal
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 1
reflexivity
rewrite lemma6 in goal at 1
reflexivity
simpl in goal
induction nat_list2
simpl in goal
rewrite lemma6 in goal at 0
reflexivity
simpl in goal
rewrite lemma5 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
rewrite lemma5 in goal at 0
reflexivity
rewrite lemma7 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
